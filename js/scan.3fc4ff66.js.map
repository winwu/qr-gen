{"version":3,"sources":["webpack:///./node_modules/webrtc-adapter/src/js/adapter_factory.js","webpack:///./node_modules/sdp/sdp.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","webpack:///./src/pages/Scan.vue?0bc0","webpack:///src/pages/Scan.vue","webpack:///./src/pages/Scan.vue?bed0","webpack:///./src/pages/Scan.vue","webpack:///./node_modules/webrtc-adapter/src/js/edge/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/filtericeservers.js","webpack:///./node_modules/vue-qrcode-reader/dist/vue-qrcode-reader.common.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/webrtc-adapter/src/js/common_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/safari/safari_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/utils.js","webpack:///./node_modules/vue-qrcode-reader/index.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/edge_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/adapter_core.js","webpack:///./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js"],"names":["utils","__webpack_require__","module","exports","dependencies","opts","window","options","shimChrome","shimFirefox","shimEdge","shimSafari","key","hasOwnProperty","call","logging","log","browserDetails","detectBrowser","chromeShim","edgeShim","firefoxShim","safariShim","commonShim","adapter","extractVersion","disableLog","disableWarnings","browser","shimPeerConnection","browserShim","shimCreateObjectURL","shimGetUserMedia","shimMediaStream","shimSourceObject","shimOnTrack","shimAddTrackRemoveTrack","shimGetSendersWithDtmf","shimSenderReceiverGetStats","fixNegotiationNeeded","shimRTCIceCandidate","shimMaxMessageSize","shimSendThrowTypeError","shimRemoveStream","shimSenderGetStats","shimReceiverGetStats","shimRTCDataChannel","shimReplaceTrack","shimGetDisplayMedia","shimRTCIceServerUrls","shimCreateOfferLegacy","shimCallbacksAPI","shimLocalStreamsAPI","shimRemoteStreamsAPI","shimTrackEventTransceiver","SDPUtils","generateIdentifier","Math","random","toString","substr","localCName","splitLines","blob","trim","split","map","line","splitSections","parts","part","index","getDescription","sections","getMediaSections","shift","matchPrefix","prefix","filter","indexOf","parseCandidate","substring","candidate","foundation","component","parseInt","protocol","toLowerCase","priority","ip","address","port","type","i","length","relatedAddress","relatedPort","tcpType","ufrag","usernameFragment","writeCandidate","sdp","push","toUpperCase","join","parseIceOptions","parseRtpMap","parsed","payloadType","name","clockRate","channels","numChannels","writeRtpMap","codec","pt","undefined","preferredPayloadType","parseExtmap","id","direction","uri","writeExtmap","headerExtension","preferredId","parseFmtp","kv","j","writeFmtp","parameters","Object","keys","params","forEach","param","parseRtcpFb","parameter","writeRtcpFb","lines","rtcpFeedback","fb","parseSsrcMedia","sp","ssrc","colon","attribute","value","parseSsrcGroup","semantics","ssrcs","getMid","mediaSection","mid","parseFingerprint","algorithm","getDtlsParameters","sessionpart","role","fingerprints","writeDtlsParameters","setupType","fp","getIceParameters","concat","iceParameters","password","writeIceParameters","parseRtpParameters","description","codecs","headerExtensions","fecMechanisms","rtcp","mline","rtpmapline","fmtps","writeRtpDescription","kind","caps","maxptime","extension","parseRtpEncodingParameters","secondarySsrc","encodingParameters","hasRed","hasUlpfec","primarySsrc","flows","apt","encParam","codecPayloadType","rtx","JSON","parse","stringify","fec","mechanism","bandwidth","maxBitrate","parseRtcpParameters","rtcpParameters","remoteSsrc","obj","cname","rsize","reducedSize","compound","mux","parseMsid","spec","stream","track","planB","msidParts","generateSessionId","writeSessionBoilerplate","sessId","sessVer","sessUser","sessionId","version","user","writeMediaSection","transceiver","iceGatherer","getLocalParameters","dtlsTransport","rtpSender","rtpReceiver","msid","sendEncodingParameters","getDirection","getKind","isRejected","parseMLine","fmt","slice","parseOLine","username","sessionVersion","netType","addressType","isValidSDP","charAt","RTCPeerConnection","prototype","defineProperty","get","this","_ontrack","set","f","removeEventListener","_ontrackpoly","addEventListener","e","getTracks","event","Event","receiver","streams","dispatchEvent","bind","enumerable","configurable","RTCTrackEvent","HTMLMediaElement","mozSrcObject","mozRTCPeerConnection","pcConfig","pcConstraints","iceServers","newIceServers","server","urls","newServer","url","credential","generateCertificate","RTCSessionDescription","mozRTCSessionDescription","RTCIceCandidate","mozRTCIceCandidate","method","nativeMethod","arguments","apply","nativeAddIceCandidate","addIceCandidate","Promise","resolve","makeMapStats","stats","Map","modernStatsTypes","inboundrtp","outboundrtp","candidatepair","localcandidate","remotecandidate","nativeGetStats","getStats","selector","onSucc","onErr","then","stat","assign","RTCRtpSender","origGetSenders","getSenders","pc","senders","sender","_pc","origAddTrack","addTrack","RTCRtpReceiver","origGetReceivers","getReceivers","receivers","wrapPeerConnectionEvent","srcElement","removeStream","deprecated","removeTrack","DataChannel","RTCDataChannel","preferredMediaSource","navigator","mediaDevices","getDisplayMedia","constraints","video","err","DOMException","code","reject","mediaSource","getUserMedia","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","_v","_s","error","_e","href","result","target","rel","on","click","$event","stopPropagation","leave","isLeave","decode","onDecode","init","onInit","preventDefault","reload","staticRenderFns","Scanvue_type_script_lang_js_","data","paused","components","QrcodeStream","vue_qrcode_reader","methods","console","warn","URL","_onInit","asyncToGenerator","regeneratorRuntime","mark","_callee","promise","wrap","_context","prev","next","t0","stop","_x","_reload","_callee2","_context2","$nextTick","pages_Scanvue_type_script_lang_js_","componentNormalizer","__file","__webpack_exports__","shimError_","PermissionDeniedError","message","constraint","origGetUserMedia","c","catch","edgeVersion","hasTurn","isString","validTurn","global","t","r","o","n","l","m","d","__esModule","default","p","s","__e","self","Function","__g","Symbol","a","store","u","F","G","S","k","P","h","B","v","W","w","virtual","R","U","TypeError","done","writable","toStringTag","_scopeId","computed","esModule","onmessage","terminate","postMessage","buffer","detectHandler","locateHandler","minDelay","performance","now","content","location","requestAnimationFrame","captureFrame","b","propertyIsEnumerable","clear","delete","has","__data__","min","width","height","drawImage","getImageData","naturalWidth","naturalHeight","videoWidth","videoHeight","document","createElement","getContext","startsWith","includes","host","src","abrupt","test","FileReader","readAsDataURL","sent","style","display","appendChild","contentWindow","open","write","close","create","getOwnPropertySymbols","ceil","floor","isNaN","valueOf","String","_t","_i","Array","isArray","videoEl","srcObject","createObjectURL","webkitURL","__proto__","Error","once","constructor","callee","documentElement","return","y","C","_","g","x","M","O","L","entries","values","from","getOwnPropertyDescriptor","getOwnPropertyNames","getPrototypeOf","process","setImmediate","clearImmediate","MessageChannel","Dispatch","nextTick","port2","port1","importScripts","onreadystatechange","removeChild","setTimeout","getIteratorMethod","nodeType","Buffer","isBuffer","isTypedArray","webpackPolyfill","deprecate","paths","children","install","Vue","use","color","topLeftCorner","topRightCorner","bottomLeftCorner","bottomRightCorner","strokeStyle","beginPath","moveTo","lineTo","closePath","stroke","mixins","onChangeInput","files","processFile","onDetect","all","source","onDrop","dataTransfer","getData","processUrl","QrcodeDropZone","props","Boolean","videoConstraints","camera","cameraInstance","destroyed","shouldStream","shouldScan","scanInterval","audio","facingMode","ideal","max","trackRepaintFunction","watch","paintPauseFrame","clearPauseFrame","clearTrackingLayer","startScanning","deep","handler","$emit","mounted","beforeDestroy","beforeResetCamera","$refs","onLocate","shouldContinue","repaintTrackingLayer","normalizeLocation","trackingLayer","offsetWidth","clearRect","pauseFrame","putImageData","stopScanning","immediate","ReferenceError","setPrototypeOf","BREAK","RETURN","isExtensible","preventExtensions","NEED","KEY","fastKey","getWeak","onFreeze","MutationObserver","WebKitMutationObserver","domain","exit","fn","enter","createTextNode","observe","characterData","defineProperties","check","charCodeAt","_k","Arguments","PromiseRejectionEvent","_n","ok","fail","I","E","emit","onunhandledrejection","reason","_a","onrejectionhandled","_d","_w","A","race","N","T","z","D","QObject","X","findChild","q","$","iterator","V","H","K","Z","Q","J","Y","ee","te","oe","for","keyFor","useSetter","useSimple","finally","try","add","size","Uint8Array","RegExp","replace","byteLength","byteOffset","ArrayBuffer","exec","IE_PROTO","pop","splice","hash","string","require","types","binding","_invoke","arg","__await","delegate","_sent","dispatchException","resultName","nextLoc","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","completion","reset","asyncIterator","displayName","isGeneratorFunction","awrap","AsyncIterator","async","reverse","rval","complete","finish","delegateYield","directives","rawName","expression","ref","autoplay","muted","playsinline","domProps","drop","dragover","dragenter","dragleave","detect","accept","capture","multiple","change","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","Blob","Worker","encodeURIComponent","dP","FProto","nameRE","NAME","match","NativeRTCIceCandidate","args","nativeCandidate","parsedCandidate","augmentedCandidate","toJSON","sdpMid","sdpMLineIndex","revokeObjectURL","nativeCreateObjectURL","nativeRevokeObjectURL","newId","dsc","nativeSetAttribute","setAttribute","RTCSctpTransport","_sctp","sctpInDescription","some","mLine","getRemoteFirefoxVersion","getCanSendMaxMessageSize","remoteIsFirefox","canSendMaxMessageSize","getMaxMessageSize","maxMessageSize","origSetRemoteDescription","setRemoteDescription","isFirefox","canSendMMS","remoteMMS","Number","POSITIVE_INFINITY","sctp","origCreateDataChannel","createDataChannel","dataChannel","wrapDcSend","channel","dc","origDataChannelSend","send","readyState","getLocalStreams","_localStreams","getStreamById","_remoteStreams","_addTrack","addStream","tracks","getRemoteStreams","_onaddstream","_onaddstreampoly","createOffer","createAnswer","setLocalDescription","successCallback","failureCallback","withCallback","webkitGetUserMedia","cb","errcb","OrigPeerConnection","RTCTransceiver","origCreateOffer","offerOptions","offerToReceiveAudio","audioTransceiver","getTransceivers","find","setDirection","addTransceiver","offerToReceiveVideo","videoTransceiver","logDisabled_","deprecationWarnings_","uastring","expr","pos","eventNameToWrap","wrapper","proto","nativeAddEventListener","nativeEventName","wrappedCallback","modifiedEvent","_eventMap","nativeRemoveEventListener","unwrappedCb","bool","oldMethod","newMethod","mozGetUserMedia","userAgent","_dist_vue_qrcode_reader_common__WEBPACK_IMPORTED_MODULE_0__","MediaStreamTrack","InternalError","NotSupportedError","SecurityError","The operation is insecure.","getUserMedia_","onSuccess","onError","constraintsToFF37_","exact","advanced","oc","getUserMediaPromise_","enumerateDevices","infos","deviceId","label","groupId","orgEnumerateDevices","getAudioTracks","getVideoTracks","getSupportedConstraints","remap","nativeGetUserMedia","getSettings","nativeGetSettings","applyConstraints","nativeApplyConstraints","filterIceServers","shimRTCPeerConnection","RTCIceGatherer","origMSTEnabled","ev","enabled","_dtmf","RTCDtmfSender","RTCDTMFSender","RTCPeerConnectionShim","config","replaceTrack","setTrack","origGetDisplayMedia","constraintsToChrome_","mandatory","optional","cc","oldname_","mix","shimConstraints_","func","face","matches","getSupportedFacingModeLies","devices","dev","PermissionDismissedError","InvalidStateError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","constraintName","kinds","getSources","device","echoCancellation","frameRate","cs","adapterFactory","fixStatsType","dtlsRole","trackId","_initialTrackId","getCommonCapabilities","localCapabilities","remoteCapabilities","commonCapabilities","findCodecByPayloadType","rtxCapabilityMatches","lRtx","rRtx","lCodecs","rCodecs","lCodec","rCodec","lHeaderExtension","rHeaderExtension","isActionAllowedInSignalingState","action","signalingState","offer","answer","maybeAddCandidate","iceTransport","alreadyAdded","getRemoteCandidates","remoteCandidate","addRemoteCandidate","makeError","InvalidAccessError","OperationError","addTrackToStreamAndFireEvent","MediaStreamTrackEvent","removeTrackFromStreamAndFireEvent","fireAddTrack","trackEvent","_dispatchEvent","_eventTarget","createDocumentFragment","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","_localDescription","_remoteDescription","iceConnectionState","connectionState","iceGatheringState","usingBundle","bundlePolicy","rtcpMuxPolicy","iceTransportPolicy","_iceGatherers","iceCandidatePoolSize","gatherPolicy","_config","transceivers","_sdpSessionId","_sdpSessionVersion","_dtlsRole","_isClosed","onicecandidate","onaddstream","ontrack","onremovestream","onsignalingstatechange","oniceconnectionstatechange","onconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","ondatachannel","_emitGatheringStateChange","getConfiguration","_createTransceiver","doNotAdd","hasBundleTransport","recvEncodingParameters","associatedRemoteMediaStreams","wantReceive","transports","_createIceAndDtlsTransports","alreadyExists","_maybeFireNegotiationNeeded","clonedStream","clone","idx","clonedTrack","_createIceGatherer","bufferedCandidateEvents","bufferCandidates","end","state","_gather","onlocalcandidate","evt","cand","serializedCandidate","every","RTCIceTransport","onicestatechange","_updateIceConnectionState","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","onerror","_disposeIceAndDtlsTransports","_transceive","recv","encodings","receive","isIceLite","rejected","remoteIceParameters","remoteDtlsParameters","start","_updateSignalingState","receiverList","iceOptions","remoteMsid","isComplete","cands","setTransport","setRemoteCandidates","hasRtx","MediaStream","getCapabilities","isNewTrack","nativeTrack","sid","item","newState","states","new","closed","checking","connected","completed","disconnected","failed","connecting","numAudioTracks","numVideoTracks","remoteCodec","hdrExt","remoteExtensions","rHdrExt","getLocalCandidates","desc","mediaSectionsInOffer","localTrack","candidateString","senderOrReceiver","promises","allStats","results","ortcObjects","ortcObjectName","nativeGetstats","nativeStats","mapStats","walkStats","base","resultSet","endsWith","filterStats","outbound","streamStatsType","filteredResult","trackStats","trackIdentifier","trackStat","webkitMediaStream","shimSenderWithDtmf","dtmf","createDTMFSender","_senders","origRemoveTrack","origAddStream","origRemoveStream","origGetStats","_srcObject","shimAddTrackRemoveTrackWithNative","_shimmedLocalStreams","streamId","existingSenders","newSenders","newSender","origGetLocalStreams","nativeStreams","_reverseStreams","_streams","newStream","oldStream","isLegacyCall","replaceInternalStreamId","origSetLocalDescription","replaceExternalStreamId","origLocalDescription","isLocal","streamid","hasTrack","internalId","externalStream","internalStream","webkitRTCPeerConnection","iceTransports","errorCallback","fixChromeStats_","response","standardReport","reports","report","standardStats","timestamp","names","successCallbackWrapper_","getSourceId","sourceId","widthSpecified","heightSpecified","frameRateSpecified","chromeMediaSource","chromeMediaSourceId","maxFrameRate","maxWidth","maxHeight"],"mappings":"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","file":"js/scan.3fc4ff66.js","sourcesContent":["/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n\n'use strict';\n\nvar utils = require('./utils');\n// Shimming starts here.\nmodule.exports = function(dependencies, opts) {\n  var window = dependencies && dependencies.window;\n\n  var options = {\n    shimChrome: true,\n    shimFirefox: true,\n    shimEdge: true,\n    shimSafari: true,\n  };\n\n  for (var key in opts) {\n    if (hasOwnProperty.call(opts, key)) {\n      options[key] = opts[key];\n    }\n  }\n\n  // Utils.\n  var logging = utils.log;\n  var browserDetails = utils.detectBrowser(window);\n\n  // Uncomment the line below if you want logging to occur, including logging\n  // for the switch statement below. Can also be turned on in the browser via\n  // adapter.disableLog(false), but then logging from the switch statement below\n  // will not appear.\n  // require('./utils').disableLog(false);\n\n  // Browser shims.\n  var chromeShim = require('./chrome/chrome_shim') || null;\n  var edgeShim = require('./edge/edge_shim') || null;\n  var firefoxShim = require('./firefox/firefox_shim') || null;\n  var safariShim = require('./safari/safari_shim') || null;\n  var commonShim = require('./common_shim') || null;\n\n  // Export to the adapter global object visible in the browser.\n  var adapter = {\n    browserDetails: browserDetails,\n    commonShim: commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n      commonShim.shimCreateObjectURL(window);\n\n      chromeShim.shimGetUserMedia(window);\n      chromeShim.shimMediaStream(window);\n      chromeShim.shimSourceObject(window);\n      chromeShim.shimPeerConnection(window);\n      chromeShim.shimOnTrack(window);\n      chromeShim.shimAddTrackRemoveTrack(window);\n      chromeShim.shimGetSendersWithDtmf(window);\n      chromeShim.shimSenderReceiverGetStats(window);\n      chromeShim.fixNegotiationNeeded(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n      commonShim.shimCreateObjectURL(window);\n\n      firefoxShim.shimGetUserMedia(window);\n      firefoxShim.shimSourceObject(window);\n      firefoxShim.shimPeerConnection(window);\n      firefoxShim.shimOnTrack(window);\n      firefoxShim.shimRemoveStream(window);\n      firefoxShim.shimSenderGetStats(window);\n      firefoxShim.shimReceiverGetStats(window);\n      firefoxShim.shimRTCDataChannel(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n      commonShim.shimCreateObjectURL(window);\n\n      edgeShim.shimGetUserMedia(window);\n      edgeShim.shimPeerConnection(window);\n      edgeShim.shimReplaceTrack(window);\n      edgeShim.shimGetDisplayMedia(window);\n\n      // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n      commonShim.shimCreateObjectURL(window);\n\n      safariShim.shimRTCIceServerUrls(window);\n      safariShim.shimCreateOfferLegacy(window);\n      safariShim.shimCallbacksAPI(window);\n      safariShim.shimLocalStreamsAPI(window);\n      safariShim.shimRemoteStreamsAPI(window);\n      safariShim.shimTrackEventTransceiver(window);\n      safariShim.shimGetUserMedia(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n};\n"," /* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n          ? '/' + headerExtension.direction\n          : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function(line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function(ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n      'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  // Search in session part, too.\n  lines = lines.concat(SDPUtils.splitLines(sessionpart));\n  var iceParameters = {\n    usernameFragment: lines.filter(function(line) {\n      return line.indexOf('a=ice-ufrag:') === 0;\n    })[0].substr(12),\n    password: lines.filter(function(line) {\n      return line.indexOf('a=ice-pwd:') === 0;\n    })[0].substr(10)\n  };\n  return iceParameters;\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n          mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n          mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function(extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(parts) {\n    return parts.attribute === 'cname';\n  });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n  .map(function(line) {\n    var parts = line.substr(17).split(' ');\n    return parts.map(function(part) {\n      return parseInt(part, 10);\n    });\n  });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n      .map(function(line) {\n        return SDPUtils.parseSsrcMedia(line);\n      })\n      .filter(function(obj) {\n        return obj.attribute === 'cname';\n      })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(msidParts) {\n    return msidParts.attribute === 'msid';\n  });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  var user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = {\n  shimGetUserMedia: require('./getusermedia'),\n  shimOnTrack: function(window) {\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n        window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n        get: function() {\n          return this._ontrack;\n        },\n        set: function(f) {\n          if (this._ontrack) {\n            this.removeEventListener('track', this._ontrack);\n            this.removeEventListener('addstream', this._ontrackpoly);\n          }\n          this.addEventListener('track', this._ontrack = f);\n          this.addEventListener('addstream', this._ontrackpoly = function(e) {\n            e.stream.getTracks().forEach(function(track) {\n              var event = new Event('track');\n              event.track = track;\n              event.receiver = {track: track};\n              event.transceiver = {receiver: event.receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            }.bind(this));\n          }.bind(this));\n        },\n        enumerable: true,\n        configurable: true\n      });\n    }\n    if (typeof window === 'object' && window.RTCTrackEvent &&\n        ('receiver' in window.RTCTrackEvent.prototype) &&\n        !('transceiver' in window.RTCTrackEvent.prototype)) {\n      Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n        get: function() {\n          return {receiver: this.receiver};\n        }\n      });\n    }\n  },\n\n  shimSourceObject: function(window) {\n    // Firefox has supported mozSrcObject since FF22, unprefixed in 42.\n    if (typeof window === 'object') {\n      if (window.HTMLMediaElement &&\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n          get: function() {\n            return this.mozSrcObject;\n          },\n          set: function(stream) {\n            this.mozSrcObject = stream;\n          }\n        });\n      }\n    }\n  },\n\n  shimPeerConnection: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    if (typeof window !== 'object' || !(window.RTCPeerConnection ||\n        window.mozRTCPeerConnection)) {\n      return; // probably media.peerconnection.enabled=false in about:config\n    }\n    // The RTCPeerConnection object.\n    if (!window.RTCPeerConnection) {\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        if (browserDetails.version < 38) {\n          // .urls is not supported in FF < 38.\n          // create RTCIceServers with a single url.\n          if (pcConfig && pcConfig.iceServers) {\n            var newIceServers = [];\n            for (var i = 0; i < pcConfig.iceServers.length; i++) {\n              var server = pcConfig.iceServers[i];\n              if (server.hasOwnProperty('urls')) {\n                for (var j = 0; j < server.urls.length; j++) {\n                  var newServer = {\n                    url: server.urls[j]\n                  };\n                  if (server.urls[j].indexOf('turn') === 0) {\n                    newServer.username = server.username;\n                    newServer.credential = server.credential;\n                  }\n                  newIceServers.push(newServer);\n                }\n              } else {\n                newIceServers.push(pcConfig.iceServers[i]);\n              }\n            }\n            pcConfig.iceServers = newIceServers;\n          }\n        }\n        return new window.mozRTCPeerConnection(pcConfig, pcConstraints);\n      };\n      window.RTCPeerConnection.prototype =\n          window.mozRTCPeerConnection.prototype;\n\n      // wrap static methods. Currently just generateCertificate.\n      if (window.mozRTCPeerConnection.generateCertificate) {\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n          get: function() {\n            return window.mozRTCPeerConnection.generateCertificate;\n          }\n        });\n      }\n\n      window.RTCSessionDescription = window.mozRTCSessionDescription;\n      window.RTCIceCandidate = window.mozRTCIceCandidate;\n    }\n\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          var nativeMethod = window.RTCPeerConnection.prototype[method];\n          window.RTCPeerConnection.prototype[method] = function() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          };\n        });\n\n    // support for addIceCandidate(null or undefined)\n    var nativeAddIceCandidate =\n        window.RTCPeerConnection.prototype.addIceCandidate;\n    window.RTCPeerConnection.prototype.addIceCandidate = function() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n\n    // shim getStats with maplike support\n    var makeMapStats = function(stats) {\n      var map = new Map();\n      Object.keys(stats).forEach(function(key) {\n        map.set(key, stats[key]);\n        map[key] = stats[key];\n      });\n      return map;\n    };\n\n    var modernStatsTypes = {\n      inboundrtp: 'inbound-rtp',\n      outboundrtp: 'outbound-rtp',\n      candidatepair: 'candidate-pair',\n      localcandidate: 'local-candidate',\n      remotecandidate: 'remote-candidate'\n    };\n\n    var nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n    window.RTCPeerConnection.prototype.getStats = function(\n      selector,\n      onSucc,\n      onErr\n    ) {\n      return nativeGetStats.apply(this, [selector || null])\n        .then(function(stats) {\n          if (browserDetails.version < 48) {\n            stats = makeMapStats(stats);\n          }\n          if (browserDetails.version < 53 && !onSucc) {\n            // Shim only promise getStats with spec-hyphens in type names\n            // Leave callback version alone; misc old uses of forEach before Map\n            try {\n              stats.forEach(function(stat) {\n                stat.type = modernStatsTypes[stat.type] || stat.type;\n              });\n            } catch (e) {\n              if (e.name !== 'TypeError') {\n                throw e;\n              }\n              // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n              stats.forEach(function(stat, i) {\n                stats.set(i, Object.assign({}, stat, {\n                  type: modernStatsTypes[stat.type] || stat.type\n                }));\n              });\n            }\n          }\n          return stats;\n        })\n        .then(onSucc, onErr);\n    };\n  },\n\n  shimSenderGetStats: function(window) {\n    if (!(typeof window === 'object' && window.RTCPeerConnection &&\n        window.RTCRtpSender)) {\n      return;\n    }\n    if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n      return;\n    }\n    var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function() {\n        var pc = this;\n        var senders = origGetSenders.apply(pc, []);\n        senders.forEach(function(sender) {\n          sender._pc = pc;\n        });\n        return senders;\n      };\n    }\n\n    var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function() {\n        var sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function() {\n      return this.track ? this._pc.getStats(this.track) :\n          Promise.resolve(new Map());\n    };\n  },\n\n  shimReceiverGetStats: function(window) {\n    if (!(typeof window === 'object' && window.RTCPeerConnection &&\n        window.RTCRtpSender)) {\n      return;\n    }\n    if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n      return;\n    }\n    var origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers = function() {\n        var pc = this;\n        var receivers = origGetReceivers.apply(pc, []);\n        receivers.forEach(function(receiver) {\n          receiver._pc = pc;\n        });\n        return receivers;\n      };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', function(e) {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function() {\n      return this._pc.getStats(this.track);\n    };\n  },\n\n  shimRemoveStream: function(window) {\n    if (!window.RTCPeerConnection ||\n        'removeStream' in window.RTCPeerConnection.prototype) {\n      return;\n    }\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      var pc = this;\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(function(sender) {\n        if (sender.track && stream.getTracks().indexOf(sender.track) !== -1) {\n          pc.removeTrack(sender);\n        }\n      });\n    };\n  },\n\n  shimRTCDataChannel: function(window) {\n    // rename DataChannel to RTCDataChannel (native fix in FF60):\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n    if (window.DataChannel && !window.RTCDataChannel) {\n      window.RTCDataChannel = window.DataChannel;\n    }\n  },\n\n  shimGetDisplayMedia: function(window, preferredMediaSource) {\n    if (!window.navigator || !window.navigator.mediaDevices ||\n        'getDisplayMedia' in window.navigator.mediaDevices) {\n      return;\n    }\n    window.navigator.mediaDevices.getDisplayMedia = function(constraints) {\n      if (!(constraints && constraints.video)) {\n        var err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n    window.navigator.getDisplayMedia = function(constraints) {\n      utils.deprecated('navigator.getDisplayMedia',\n          'navigator.mediaDevices.getDisplayMedia');\n      return window.navigator.mediaDevices.getDisplayMedia(constraints);\n    };\n  }\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mb-4\"},[(_vm.error)?_c('div',{staticClass:\"alert alert-warning\",attrs:{\"role\":\"alert\"}},[_c('b',[_vm._v(\"Error\")]),_vm._v(\" \"+_vm._s(_vm.error)+\"\\n    \")]):_vm._e(),(_vm.result)?_c('div',{staticClass:\"alert alert-success\",attrs:{\"role\":\"alert\"}},[_vm._v(\"\\n        Go to \"),_c('a',{staticClass:\"alert-link\",attrs:{\"href\":_vm.result,\"target\":\"_blank\",\"rel\":\"noopener\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.leave($event)}}},[_vm._v(_vm._s(_vm.result))])]):_vm._e(),(_vm.isLeave === false)?[_c('qrcode-stream',{on:{\"decode\":_vm.onDecode,\"init\":_vm.onInit}})]:_vm._e(),(_vm.isLeave === true)?[_c('button',{staticClass:\"btn btn-primary mt-3 mb-3\",on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.reload($event)}}},[_vm._v(\"Capture QR code again\")])]:_vm._e()],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"mb-4\">\n        <div v-if=\"error\" class=\"alert alert-warning\" role=\"alert\">\n            <b>Error</b> {{ error }}\n        </div>\n        <div v-if=\"result\" class=\"alert alert-success\" role=\"alert\">\n            Go to <a @click.stop=\"leave\" :href=\"result\" target=\"_blank\" class=\"alert-link\" rel=\"noopener\">{{ result }}</a>\n        </div>\n        <template v-if=\"isLeave === false\">\n            <qrcode-stream @decode=\"onDecode\" @init=\"onInit\"></qrcode-stream>\n        </template>\n        <template v-if=\"isLeave === true\">\n            <button @click.prevent.stop=\"reload\" class=\"btn btn-primary mt-3 mb-3\">Capture QR code again</button>\n        </template>\n    </div>\n</template>\n\n<script>\nimport { QrcodeStream } from 'vue-qrcode-reader'\nexport default {\n    name: 'scan-page',\n    data() {\n        return {\n            result: '',\n            error: '',\n            paused: false,\n            isLeave: false\n        }\n    },\n    components: {\n        QrcodeStream\n    },\n    methods: {\n        onDecode (result) {\n            console.warn('result'. result);\n            this.paused = true;\n            if (result !== '') {\n                try {\n                    let url = new URL(result);\n                    this.result = url.href;\n                } catch (e) {\n                    this.error = 'Invalid URL';\n                    this.leave();\n                }\n            } else {\n                this.leave();\n            }\n        },\n        async onInit (promise) {\n            try {\n                await promise\n            } catch (error) {\n                if (error.name === 'NotAllowedError') {\n                this.error = \"you need to grant camera access permisson\"\n                } else if (error.name === 'NotFoundError') {\n                this.error = \"no camera on this device\"\n                } else if (error.name === 'NotSupportedError') {\n                this.error = \"secure context required (HTTPS, localhost)\"\n                } else if (error.name === 'NotReadableError') {\n                this.error = \"is the camera already in use?\"\n                } else if (error.name === 'OverconstrainedError') {\n                this.error = \"installed cameras are not suitable\"\n                } else if (error.name === 'StreamApiNotSupportedError') {\n                this.error = \"Stream API is not supported in this browser\"\n                }\n            }\n        },\n        leave() {\n            this.isLeave = true;\n            this.error = '';\n            this.paused = false;\n        },\n        async reload () {\n            await this.$nextTick();\n            this.result = '';\n            this.isLeave = false;\n        }\n    }\n}\n</script>\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Scan.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Scan.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Scan.vue?vue&type=template&id=04227852&\"\nimport script from \"./Scan.vue?vue&type=script&lang=js&\"\nexport * from \"./Scan.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"Scan.vue\"\nexport default component.exports","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\n// Expose public methods.\nmodule.exports = function(window) {\n  var navigator = window && window.navigator;\n\n  var shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString: function() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(function(e) {\n      return Promise.reject(shimError_(e));\n    });\n  };\n};\n","/*\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nmodule.exports = function(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n};\n","module.exports=function(e){function t(r){if(o[r])return o[r].exports;var n=o[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,t),n.l=!0,n.exports}var o={};return t.m=e,t.c=o,t.i=function(e){return e},t.d=function(e,o,r){t.o(e,o)||Object.defineProperty(e,o,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(o,\"a\",o),o},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"\",t(t.s=98)}([function(e,t){var o=e.exports={version:\"2.5.1\"};\"number\"==typeof __e&&(__e=o)},function(e,t){var o=e.exports=\"undefined\"!=typeof window&&window.Math==Math?window:\"undefined\"!=typeof self&&self.Math==Math?self:Function(\"return this\")();\"number\"==typeof __g&&(__g=o)},function(e,t,o){var r=o(46)(\"wks\"),n=o(32),c=o(1).Symbol,a=\"function\"==typeof c;(e.exports=function(e){return r[e]||(r[e]=a&&c[e]||(a?c:n)(\"Symbol.\"+e))}).store=r},function(e,t,o){var r=o(1),n=o(0),c=o(14),a=o(11),s=function(e,t,o){var i,u,l,d=e&s.F,f=e&s.G,p=e&s.S,k=e&s.P,h=e&s.B,v=e&s.W,B=f?n:n[t]||(n[t]={}),m=B.prototype,w=f?r:p?r[t]:(r[t]||{}).prototype;f&&(o=t);for(i in o)(u=!d&&w&&void 0!==w[i])&&i in B||(l=u?w[i]:o[i],B[i]=f&&\"function\"!=typeof w[i]?o[i]:h&&u?c(l,r):v&&w[i]==l?function(e){var t=function(t,o,r){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,o)}return new e(t,o,r)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(l):k&&\"function\"==typeof l?c(Function.call,l):l,k&&((B.virtual||(B.virtual={}))[i]=l,e&s.R&&m&&!m[i]&&a(m,i,l)))};s.F=1,s.G=2,s.S=4,s.P=8,s.B=16,s.W=32,s.U=64,s.R=128,e.exports=s},function(e,t,o){var r=o(12);e.exports=function(e){if(!r(e))throw TypeError(e+\" is not an object!\");return e}},function(e,t,o){var r=o(4),n=o(66),c=o(49),a=Object.defineProperty;t.f=o(7)?Object.defineProperty:function(e,t,o){if(r(e),t=c(t,!0),r(o),n)try{return a(e,t,o)}catch(e){}if(\"get\"in o||\"set\"in o)throw TypeError(\"Accessors not supported!\");return\"value\"in o&&(e[t]=o.value),e}},function(e,t,o){var r=o(86),n=\"object\"==typeof self&&self&&self.Object===Object&&self,c=r||n||Function(\"return this\")();e.exports=c},function(e,t,o){e.exports=!o(15)(function(){return 7!=Object.defineProperty({},\"a\",{get:function(){return 7}}).a})},function(e,t,o){\"use strict\";t.__esModule=!0;var r=o(13),n=function(e){return e&&e.__esModule?e:{default:e}}(r);t.default=function(e){return function(){var t=e.apply(this,arguments);return new n.default(function(e,o){function r(c,a){try{var s=t[c](a),i=s.value}catch(e){return void o(e)}if(!s.done)return n.default.resolve(i).then(function(e){r(\"next\",e)},function(e){r(\"throw\",e)});e(i)}return r(\"next\")})}}},function(e,t,o){e.exports=o(230)},function(e,t){var o={}.hasOwnProperty;e.exports=function(e,t){return o.call(e,t)}},function(e,t,o){var r=o(5),n=o(20);e.exports=o(7)?function(e,t,o){return r.f(e,t,n(1,o))}:function(e,t,o){return e[t]=o,e}},function(e,t){e.exports=function(e){return\"object\"==typeof e?null!==e:\"function\"==typeof e}},function(e,t,o){e.exports={default:o(122),__esModule:!0}},function(e,t,o){var r=o(26);e.exports=function(e,t,o){if(r(e),void 0===t)return e;switch(o){case 1:return function(o){return e.call(t,o)};case 2:return function(o,r){return e.call(t,o,r)};case 3:return function(o,r,n){return e.call(t,o,r,n)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,o){var r=o(67),n=o(39);e.exports=function(e){return r(n(e))}},function(e,t,o){function r(e,t){var o=c(e,t);return n(o)?o:void 0}var n=o(177),c=o(190);e.exports=r},function(e,t){var o={}.toString;e.exports=function(e){return o.call(e).slice(8,-1)}},function(e,t){e.exports={}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,o){function r(e){return null==e?void 0===e?i:s:u&&u in Object(e)?c(e):a(e)}var n=o(54),c=o(187),a=o(213),s=\"[object Null]\",i=\"[object Undefined]\",u=n?n.toStringTag:void 0;e.exports=r},function(e,t){function o(e){return null!=e&&\"object\"==typeof e}e.exports=o},function(e,t){e.exports=function(e,t,o,r){var n,c=e=e||{},a=typeof e.default;\"object\"!==a&&\"function\"!==a||(n=e,c=e.default);var s=\"function\"==typeof c?c.options:c;if(t&&(s.render=t.render,s.staticRenderFns=t.staticRenderFns),o&&(s._scopeId=o),r){var i=s.computed||(s.computed={});Object.keys(r).forEach(function(e){var t=r[e];i[e]=function(){return t}})}return{esModule:n,exports:c,options:s}}},function(e,t,o){\"use strict\";function r(e){var t=new u.a;return new a.a(function(o){t.onmessage=function(e){o(e.data),t.terminate()},t.postMessage(e,[e.data.buffer])})}function n(e,t){var o=t.detectHandler,r=t.locateHandler,n=t.minDelay,c=null,a=null,s=performance.now(),i=new u.a,l=!1,d=!0;i.onmessage=function(e){l=!1;var t=e.data,n=t.content,s=t.location;null!==n&&n!==c&&o(e.data),s!==a&&r(s),c=n||c,a=s};return function t(o){if(d){if(window.requestAnimationFrame(t),o-s>=n&&(s=o,!1===l)){l=!0;var r=e.captureFrame();i.postMessage(r,[r.data.buffer])}}else i.terminate()}(),function(){d=!1}}t.a=r,t.b=n;var c=o(13),a=o.n(c),s=o(238),i=(o.n(s),o(236)),u=o.n(i)},function(e,t,o){\"use strict\";t.__esModule=!0;var r=o(106),n=function(e){return e&&e.__esModule?e:{default:e}}(r);t.default=n.default||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(e[r]=o[r])}return e}},function(e,t){e.exports=function(e){if(\"function\"!=typeof e)throw TypeError(e+\" is not a function!\");return e}},function(e,t){e.exports=!0},function(e,t,o){var r=o(75),n=o(41);e.exports=Object.keys||function(e){return r(e,n)}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t,o){var r=o(5).f,n=o(10),c=o(2)(\"toStringTag\");e.exports=function(e,t,o){e&&!n(e=o?e:e.prototype,c)&&r(e,c,{configurable:!0,value:t})}},function(e,t,o){var r=o(39);e.exports=function(e){return Object(r(e))}},function(e,t){var o=0,r=Math.random();e.exports=function(e){return\"Symbol(\".concat(void 0===e?\"\":e,\")_\",(++o+r).toString(36))}},function(e,t,o){function r(e){var t=-1,o=null==e?0:e.length;for(this.clear();++t<o;){var r=e[t];this.set(r[0],r[1])}}var n=o(200),c=o(201),a=o(202),s=o(203),i=o(204);r.prototype.clear=n,r.prototype.delete=c,r.prototype.get=a,r.prototype.has=s,r.prototype.set=i,e.exports=r},function(e,t,o){function r(e,t){for(var o=e.length;o--;)if(n(e[o][0],t))return o;return-1}var n=o(88);e.exports=r},function(e,t,o){function r(e,t){var o=e.__data__;return n(t)?o[\"string\"==typeof t?\"string\":\"hash\"]:o.map}var n=o(197);e.exports=r},function(e,t,o){var r=o(17),n=r(Object,\"create\");e.exports=n},function(e,t,o){var r=o(23)(o(104),null,null,null);e.exports=r.exports},function(e,t,o){\"use strict\";function r(e,t,o){var r=Math.min(1,f.width/t,f.height/o),n=r*t,c=r*o;return p.drawImage(e,0,0,n,c),p.getImageData(0,0,n,c)}function n(e){return r(e,e.naturalWidth,e.naturalHeight)}function c(e){return r(e,e.videoWidth,e.videoHeight)}t.c=c,o.d(t,\"b\",function(){return k}),o.d(t,\"a\",function(){return h});var a=o(9),s=o.n(a),i=o(8),u=o.n(i),l=o(59),d=o(60),f=document.createElement(\"canvas\"),p=f.getContext(\"2d\");f.width=1920,f.height=1080;var k=function(){var e=u()(s.a.mark(function e(t){var r,c;return s.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!t.startsWith(\"http\")||!1!==t.includes(location.host)){e.next=2;break}throw new l.a;case 2:return r=document.createElement(\"img\"),c=o.i(d.a)(r,\"load\"),r.src=t,e.next=7,c;case 7:return e.abrupt(\"return\",n(r));case 8:case\"end\":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),h=function(){var e=u()(s.a.mark(function e(t){var r,n,c;return s.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!/image.*/.test(t.type)){e.next=10;break}return r=new FileReader,n=o.i(d.a)(r,\"load\"),r.readAsDataURL(t),e.next=6,n;case 6:return c=e.sent.target.result,e.abrupt(\"return\",k(c));case 10:throw new l.b;case 11:case\"end\":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}()},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError(\"Can't call method on  \"+e);return e}},function(e,t,o){var r=o(12),n=o(1).document,c=r(n)&&r(n.createElement);e.exports=function(e){return c?n.createElement(e):{}}},function(e,t){e.exports=\"constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf\".split(\",\")},function(e,t,o){\"use strict\";function r(e){var t,o;this.promise=new e(function(e,r){if(void 0!==t||void 0!==o)throw TypeError(\"Bad Promise constructor\");t=e,o=r}),this.resolve=n(t),this.reject=n(o)}var n=o(26);e.exports.f=function(e){return new r(e)}},function(e,t,o){var r=o(4),n=o(138),c=o(41),a=o(45)(\"IE_PROTO\"),s=function(){},i=function(){var e,t=o(40)(\"iframe\"),r=c.length;for(t.style.display=\"none\",o(65).appendChild(t),t.src=\"javascript:\",e=t.contentWindow.document,e.open(),e.write(\"<script>document.F=Object<\\/script>\"),e.close(),i=e.F;r--;)delete i.prototype[c[r]];return i()};e.exports=Object.create||function(e,t){var o;return null!==e?(s.prototype=r(e),o=new s,s.prototype=null,o[a]=e):o=i(),void 0===t?o:n(o,t)}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,o){var r=o(46)(\"keys\"),n=o(32);e.exports=function(e){return r[e]||(r[e]=n(e))}},function(e,t,o){var r=o(1),n=r[\"__core-js_shared__\"]||(r[\"__core-js_shared__\"]={});e.exports=function(e){return n[e]||(n[e]={})}},function(e,t){var o=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:o)(e)}},function(e,t,o){var r=o(47),n=Math.min;e.exports=function(e){return e>0?n(r(e),9007199254740991):0}},function(e,t,o){var r=o(12);e.exports=function(e,t){if(!r(e))return e;var o,n;if(t&&\"function\"==typeof(o=e.toString)&&!r(n=o.call(e)))return n;if(\"function\"==typeof(o=e.valueOf)&&!r(n=o.call(e)))return n;if(!t&&\"function\"==typeof(o=e.toString)&&!r(n=o.call(e)))return n;throw TypeError(\"Can't convert object to primitive value\")}},function(e,t,o){var r=o(1),n=o(0),c=o(27),a=o(51),s=o(5).f;e.exports=function(e){var t=n.Symbol||(n.Symbol=c?{}:r.Symbol||{});\"_\"==e.charAt(0)||e in t||s(t,e,{value:a.f(e)})}},function(e,t,o){t.f=o(2)},function(e,t,o){\"use strict\";var r=o(144)(!0);o(70)(String,\"String\",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,o=this._i;return o>=t.length?{value:void 0,done:!0}:(e=r(t,o),this._i+=e.length,{value:e,done:!1})})},function(e,t,o){var r=o(17),n=o(6),c=r(n,\"Map\");e.exports=c},function(e,t,o){var r=o(6),n=r.Symbol;e.exports=n},function(e,t){var o=Array.isArray;e.exports=o},function(e,t){function o(e){var t=typeof e;return null!=e&&(\"object\"==t||\"function\"==t)}e.exports=o},function(e,t,o){var r=o(23)(o(101),o(233),null,null);e.exports=r.exports},function(e,t,o){\"use strict\";var r=o(9),n=o.n(r),c=o(8),a=o.n(c),s=o(61),i=o.n(s),u=o(113),l=o.n(u),d=o(59),f=o(38),p=o(60),k=function(){function e(t,o){i()(this,e),this.videoEl=t,this.stream=o}return l()(e,[{key:\"stop\",value:function(){this.stream.getTracks().forEach(function(e){return e.stop()})}},{key:\"captureFrame\",value:function(){return o.i(f.c)(this.videoEl)}}]),e}();t.a=function(){var e=a()(n.a.mark(function e(t,r){var c,a;return n.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){e.next=2;break}throw new d.c;case 2:return e.next=4,navigator.mediaDevices.getUserMedia(t);case 4:return c=e.sent,a=o.i(p.a)(r,\"loadeddata\",\"error\"),void 0!==r.srcObject?r.srcObject=c:void 0!==r.mozSrcObject?r.mozSrcObject=c:window.URL.createObjectURL?r.src=window.URL.createObjectURL(c):window.webkitURL?r.src=window.webkitURL.createObjectURL(c):r.src=c,e.next=9,a;case 9:return e.abrupt(\"return\",new k(r,c));case 10:case\"end\":return e.stop()}},e,this)}));return function(t,o){return e.apply(this,arguments)}}()},function(e,t,o){\"use strict\";o.d(t,\"a\",function(){return d}),o.d(t,\"b\",function(){return f}),o.d(t,\"c\",function(){return p});var r=o(109),n=o.n(r),c=o(61),a=o.n(c),s=o(115),i=o.n(s),u=o(114),l=o.n(u),d=function(e){function t(){a()(this,t);var e=i()(this,(t.__proto__||n()(t)).call(this,\"can't process cross-origin image\"));return e.name=\"DropImageFetchError\",e}return l()(t,e),t}(Error),f=function(e){function t(){a()(this,t);var e=i()(this,(t.__proto__||n()(t)).call(this,\"drag-and-dropped file is not of type image and can't be decoded\"));return e.name=\"DropImageDecodeError\",e}return l()(t,e),t}(Error),p=function(e){function t(){a()(this,t);var e=i()(this,(t.__proto__||n()(t)).call(this,\"this browser has no Stream API support\"));return e.name=\"StreamApiNotSupportedError\",e}return l()(t,e),t}(Error)},function(e,t,o){\"use strict\";function r(e,t,o){return new c.a(function(r,n){e.addEventListener(t,r,{once:!0}),void 0!==o&&e.addEventListener(o,n,{once:!0})})}t.a=r;var n=o(13),c=o.n(n)},function(e,t,o){\"use strict\";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}},function(e,t,o){\"use strict\";t.__esModule=!0;var r=o(105),n=function(e){return e&&e.__esModule?e:{default:e}}(r);t.default=function(e){if(Array.isArray(e)){for(var t=0,o=Array(e.length);t<e.length;t++)o[t]=e[t];return o}return(0,n.default)(e)}},function(e,t,o){\"use strict\";function r(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var n=o(112),c=r(n),a=o(111),s=r(a),i=\"function\"==typeof s.default&&\"symbol\"==typeof c.default?function(e){return typeof e}:function(e){return e&&\"function\"==typeof s.default&&e.constructor===s.default&&e!==s.default.prototype?\"symbol\":typeof e};t.default=\"function\"==typeof s.default&&\"symbol\"===i(c.default)?function(e){return void 0===e?\"undefined\":i(e)}:function(e){return e&&\"function\"==typeof s.default&&e.constructor===s.default&&e!==s.default.prototype?\"symbol\":void 0===e?\"undefined\":i(e)}},function(e,t,o){var r=o(18),n=o(2)(\"toStringTag\"),c=\"Arguments\"==r(function(){return arguments}()),a=function(e,t){try{return e[t]}catch(e){}};e.exports=function(e){var t,o,s;return void 0===e?\"Undefined\":null===e?\"Null\":\"string\"==typeof(o=a(t=Object(e),n))?o:c?r(t):\"Object\"==(s=r(t))&&\"function\"==typeof t.callee?\"Arguments\":s}},function(e,t,o){var r=o(1).document;e.exports=r&&r.documentElement},function(e,t,o){e.exports=!o(7)&&!o(15)(function(){return 7!=Object.defineProperty(o(40)(\"div\"),\"a\",{get:function(){return 7}}).a})},function(e,t,o){var r=o(18);e.exports=Object(\"z\").propertyIsEnumerable(0)?Object:function(e){return\"String\"==r(e)?e.split(\"\"):Object(e)}},function(e,t,o){var r=o(19),n=o(2)(\"iterator\"),c=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||c[n]===e)}},function(e,t,o){var r=o(4);e.exports=function(e,t,o,n){try{return n?t(r(o)[0],o[1]):t(o)}catch(t){var c=e.return;throw void 0!==c&&r(c.call(e)),t}}},function(e,t,o){\"use strict\";var r=o(27),n=o(3),c=o(78),a=o(11),s=o(10),i=o(19),u=o(133),l=o(30),d=o(74),f=o(2)(\"iterator\"),p=!([].keys&&\"next\"in[].keys()),k=function(){return this};e.exports=function(e,t,o,h,v,B,m){u(o,t,h);var w,y,C,P=function(e){if(!p&&e in _)return _[e];switch(e){case\"keys\":case\"values\":return function(){return new o(this,e)}}return function(){return new o(this,e)}},b=t+\" Iterator\",g=\"values\"==v,x=!1,_=e.prototype,j=_[f]||_[\"@@iterator\"]||v&&_[v],M=j||P(v),O=v?g?P(\"entries\"):M:void 0,L=\"Array\"==t?_.entries||j:j;if(L&&(C=d(L.call(new e)))!==Object.prototype&&C.next&&(l(C,b,!0),r||s(C,f)||a(C,f,k)),g&&j&&\"values\"!==j.name&&(x=!0,M=function(){return j.call(this)}),r&&!m||!p&&!x&&_[f]||a(_,f,M),i[t]=M,i[b]=k,v)if(w={values:g?M:P(\"values\"),keys:B?M:P(\"keys\"),entries:O},m)for(y in w)y in _||c(_,y,w[y]);else n(n.P+n.F*(p||x),t,w);return w}},function(e,t,o){var r=o(2)(\"iterator\"),n=!1;try{var c=[7][r]();c.return=function(){n=!0},Array.from(c,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!n)return!1;var o=!1;try{var c=[7],a=c[r]();a.next=function(){return{done:o=!0}},c[r]=function(){return a},e(c)}catch(e){}return o}},function(e,t,o){var r=o(29),n=o(20),c=o(16),a=o(49),s=o(10),i=o(66),u=Object.getOwnPropertyDescriptor;t.f=o(7)?u:function(e,t){if(e=c(e),t=a(t,!0),i)try{return u(e,t)}catch(e){}if(s(e,t))return n(!r.f.call(e,t),e[t])}},function(e,t,o){var r=o(75),n=o(41).concat(\"length\",\"prototype\");t.f=Object.getOwnPropertyNames||function(e){return r(e,n)}},function(e,t,o){var r=o(10),n=o(31),c=o(45)(\"IE_PROTO\"),a=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=n(e),r(e,c)?e[c]:\"function\"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},function(e,t,o){var r=o(10),n=o(16),c=o(127)(!1),a=o(45)(\"IE_PROTO\");e.exports=function(e,t){var o,s=n(e),i=0,u=[];for(o in s)o!=a&&r(s,o)&&u.push(o);for(;t.length>i;)r(s,o=t[i++])&&(~c(u,o)||u.push(o));return u}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,o){var r=o(4),n=o(12),c=o(42);e.exports=function(e,t){if(r(e),n(t)&&t.constructor===e)return t;var o=c.f(e);return(0,o.resolve)(t),o.promise}},function(e,t,o){e.exports=o(11)},function(e,t,o){var r=o(4),n=o(26),c=o(2)(\"species\");e.exports=function(e,t){var o,a=r(e).constructor;return void 0===a||void 0==(o=r(a)[c])?t:n(o)}},function(e,t,o){var r,n,c,a=o(14),s=o(131),i=o(65),u=o(40),l=o(1),d=l.process,f=l.setImmediate,p=l.clearImmediate,k=l.MessageChannel,h=l.Dispatch,v=0,B={},m=function(){var e=+this;if(B.hasOwnProperty(e)){var t=B[e];delete B[e],t()}},w=function(e){m.call(e.data)};f&&p||(f=function(e){for(var t=[],o=1;arguments.length>o;)t.push(arguments[o++]);return B[++v]=function(){s(\"function\"==typeof e?e:Function(e),t)},r(v),v},p=function(e){delete B[e]},\"process\"==o(18)(d)?r=function(e){d.nextTick(a(m,e,1))}:h&&h.now?r=function(e){h.now(a(m,e,1))}:k?(n=new k,c=n.port2,n.port1.onmessage=w,r=a(c.postMessage,c,1)):l.addEventListener&&\"function\"==typeof postMessage&&!l.importScripts?(r=function(e){l.postMessage(e+\"\",\"*\")},l.addEventListener(\"message\",w,!1)):r=\"onreadystatechange\"in u(\"script\")?function(e){i.appendChild(u(\"script\")).onreadystatechange=function(){i.removeChild(this),m.call(e)}}:function(e){setTimeout(a(m,e,1),0)}),e.exports={set:f,clear:p}},function(e,t,o){var r=o(64),n=o(2)(\"iterator\"),c=o(19);e.exports=o(0).getIteratorMethod=function(e){if(void 0!=e)return e[n]||e[\"@@iterator\"]||c[r(e)]}},function(e,t){},function(e,t,o){o(147);for(var r=o(1),n=o(11),c=o(19),a=o(2)(\"toStringTag\"),s=\"CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList\".split(\",\"),i=0;i<s.length;i++){var u=s[i],l=r[u],d=l&&l.prototype;d&&!d[a]&&n(d,a,u),c[u]=c.Array}},function(e,t,o){function r(e){var t=-1,o=null==e?0:e.length;for(this.clear();++t<o;){var r=e[t];this.set(r[0],r[1])}}var n=o(205),c=o(206),a=o(207),s=o(208),i=o(209);r.prototype.clear=n,r.prototype.delete=c,r.prototype.get=a,r.prototype.has=s,r.prototype.set=i,e.exports=r},function(e,t,o){function r(e,t,o,r,u,l){var d=o&s,f=e.length,p=t.length;if(f!=p&&!(d&&p>f))return!1;var k=l.get(e);if(k&&l.get(t))return k==t;var h=-1,v=!0,B=o&i?new n:void 0;for(l.set(e,t),l.set(t,e);++h<f;){var m=e[h],w=t[h];if(r)var y=d?r(w,m,h,t,e,l):r(m,w,h,e,t,l);if(void 0!==y){if(y)continue;v=!1;break}if(B){if(!c(t,function(e,t){if(!a(B,t)&&(m===e||u(m,e,o,r,l)))return B.push(t)})){v=!1;break}}else if(m!==w&&!u(m,w,o,r,l)){v=!1;break}}return l.delete(e),l.delete(t),v}var n=o(165),c=o(172),a=o(182),s=1,i=2;e.exports=r},function(e,t){var o=\"object\"==typeof global&&global&&global.Object===Object&&global;e.exports=o},function(e,t){function o(e){if(null!=e){try{return n.call(e)}catch(e){}try{return e+\"\"}catch(e){}}return\"\"}var r=Function.prototype,n=r.toString;e.exports=o},function(e,t){function o(e,t){return e===t||e!==e&&t!==t}e.exports=o},function(e,t,o){function r(e){return!0===e||!1===e||c(e)&&n(e)==a}var n=o(21),c=o(22),a=\"[object Boolean]\";e.exports=r},function(e,t,o){(function(e){var r=o(6),n=o(228),c=\"object\"==typeof t&&t&&!t.nodeType&&t,a=c&&\"object\"==typeof e&&e&&!e.nodeType&&e,s=a&&a.exports===c,i=s?r.Buffer:void 0,u=i?i.isBuffer:void 0,l=u||n;e.exports=l}).call(t,o(94)(e))},function(e,t,o){function r(e){if(!c(e))return!1;var t=n(e);return t==s||t==i||t==a||t==u}var n=o(21),c=o(56),a=\"[object AsyncFunction]\",s=\"[object Function]\",i=\"[object GeneratorFunction]\",u=\"[object Proxy]\";e.exports=r},function(e,t){function o(e){return\"number\"==typeof e&&e>-1&&e%1==0&&e<=r}var r=9007199254740991;e.exports=o},function(e,t,o){var r=o(178),n=o(181),c=o(212),a=c&&c.isTypedArray,s=a?n(a):r;e.exports=s},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,\"loaded\",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,\"id\",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,o){var r=o(23)(o(100),o(235),null,null);e.exports=r.exports},function(e,t,o){o(160);var r=o(23)(o(102),o(234),null,null);e.exports=r.exports},function(e,t,o){o(159);var r=o(23)(o(103),o(232),null,null);e.exports=r.exports},function(e,t,o){\"use strict\";function r(e){e.component(\"qrcode-reader\",c.a),e.component(\"qrcode-stream\",s.a),e.component(\"qrcode-capture\",u.a),e.component(\"qrcode-drop-zone\",d.a)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.install=r;var n=o(96),c=o.n(n),a=o(97),s=o.n(a),i=o(95),u=o.n(i),l=o(57),d=o.n(l);o.d(t,\"QrcodeReader\",function(){return c.a}),o.d(t,\"QrcodeStream\",function(){return s.a}),o.d(t,\"QrcodeCapture\",function(){return u.a}),o.d(t,\"QrcodeDropZone\",function(){return d.a});var f={install:r};t.default=f;var p=null;\"undefined\"!=typeof window?p=window.Vue:\"undefined\"!=typeof global&&(p=global.Vue),p&&p.use(f)},function(e,t,o){\"use strict\";function r(e){e.color;return function(e,t){var o=e.topLeftCorner,r=e.topRightCorner,n=e.bottomLeftCorner,c=e.bottomRightCorner;t.strokeStyle=\"red\",t.beginPath(),t.moveTo(o.x,o.y),t.lineTo(n.x,n.y),t.lineTo(c.x,c.y),t.lineTo(r.x,r.y),t.lineTo(o.x,o.y),t.closePath(),t.stroke()}}t.a=r},function(e,t,o){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=o(9),n=o.n(r),c=o(25),a=o.n(c),s=o(8),i=o.n(s),u=o(13),l=o.n(u),d=o(62),f=o.n(d),p=o(24),k=o(38),h=o(37),v=o.n(h);t.default={mixins:[v.a],methods:{onChangeInput:function(e){var t=[].concat(f()(e.target.files)),o=t.map(this.processFile);o.forEach(this.onDetect),console.log(l.a.all(o))},processFile:function(e){var t=this;return i()(n.a.mark(function r(){var c,s;return n.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,o.i(k.a)(e);case 2:return c=t.sent,t.next=5,o.i(p.a)(c);case 5:return s=t.sent,t.abrupt(\"return\",a()({source:\"file\"},s));case 7:case\"end\":return t.stop()}},r,t)}))()}}}},function(e,t,o){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=o(9),n=o.n(r),c=o(25),a=o.n(c),s=o(8),i=o.n(s),u=o(62),l=o.n(u),d=o(24),f=o(38),p=o(37),k=o.n(p);t.default={mixins:[k.a],methods:{onDrop:function(e){var t=this,o=e.dataTransfer,r=[].concat(l()(o.files)),n=o.getData(\"text\");r.forEach(function(e){t.onDetect(t.processFile(e))}),\"\"!==n&&this.onDetect(this.processUrl(n))},processFile:function(e){var t=this;return i()(n.a.mark(function r(){var c,s;return n.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,o.i(f.a)(e);case 2:return c=t.sent,t.next=5,o.i(d.a)(c);case 5:return s=t.sent,t.abrupt(\"return\",a()({source:\"file\"},s));case 7:case\"end\":return t.stop()}},r,t)}))()},processUrl:function(e){var t=this;return i()(n.a.mark(function r(){var c,s;return n.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,o.i(f.b)(e);case 2:return c=t.sent,t.next=5,o.i(d.a)(c);case 5:return s=t.sent,t.abrupt(\"return\",a()({source:\"url\"},s));case 7:case\"end\":return t.stop()}},r,t)}))()}}}},function(e,t,o){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=o(13),n=o.n(r),c=o(9),a=o.n(c),s=o(8),i=o.n(s),u=o(25),l=o.n(u),d=o(24),f=o(58),p=o(89),k=o.n(p),h=o(57),v=o.n(h),B=o(37),m=o.n(B);t.default={components:{QrcodeDropZone:v.a},mixins:[m.a],props:{paused:{type:Boolean,default:!1},videoConstraints:{type:[Object,Boolean],default:void 0},camera:{type:[Object,Boolean],default:void 0},track:{type:[Function,Boolean],default:!0}},data:function(){return{cameraInstance:null,destroyed:!1}},computed:{shouldStream:function(){return!1===this.paused&&!1===this.destroyed&&!1!==this.constraints.video},shouldScan:function(){return!0===this.shouldStream&&null!==this.cameraInstance},scanInterval:function(){return!1===this.track?500:40},constraints:function(){var e={};return void 0!==this.camera?e=this.camera:void 0!==this.videoConstraints&&(console.warn(\"The `video-constraints` prop is deprecated. Use `camera` instead.\"),e=this.videoConstraints),k()(e)?{audio:!1,video:e}:{audio:!1,video:l()({facingMode:{ideal:\"environment\"},width:{min:360,ideal:640,max:1920},height:{min:240,ideal:480,max:1080}},e)}},trackRepaintFunction:function(){return!0===this.track?function(e,t){var o=e.topLeftCorner,r=e.topRightCorner,n=e.bottomLeftCorner,c=e.bottomRightCorner;t.strokeStyle=\"red\",t.beginPath(),t.moveTo(o.x,o.y),t.lineTo(n.x,n.y),t.lineTo(c.x,c.y),t.lineTo(r.x,r.y),t.lineTo(o.x,o.y),t.closePath(),t.stroke()}:!1===this.track?null:this.track}},watch:{shouldStream:function(e){if(!e){var t=this.cameraInstance.captureFrame();this.paintPauseFrame(t)}},shouldScan:function(e){e&&(this.clearPauseFrame(),this.clearTrackingLayer(),this.startScanning())},constraints:{deep:!0,handler:function(){this.$emit(\"init\",this.init())}}},mounted:function(){this.$emit(\"init\",this.init())},beforeDestroy:function(){this.beforeResetCamera(),this.destroyed=!0},methods:{init:function(){var e=this;return i()(a.a.mark(function t(){return a.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(e.beforeResetCamera(),!1!==e.constraints.video){t.next=5;break}e.cameraInstance=null,t.next=9;break;case 5:return t.next=7,o.i(f.a)(e.constraints,e.$refs.video);case 7:e.cameraInstance=t.sent,e.destroyed&&e.cameraInstance.stop();case 9:case\"end\":return t.stop()}},t,e)}))()},startScanning:function(){var e=this,t=function(t){e.onDetect(n.a.resolve(l()({source:\"stream\"},t)))};o.i(d.b)(this.cameraInstance,{detectHandler:t,locateHandler:this.onLocate,shouldContinue:function(){return e.shouldScan},minDelay:this.scanInterval})},beforeResetCamera:function(){null!==this.cameraInstance&&(this.cameraInstance.stop(),this.cameraInstance=null)},onLocate:function(e){null!==this.trackRepaintFunction&&(null===e?this.clearTrackingLayer():this.repaintTrackingLayer(e))},normalizeLocation:function(e,t,o){var r={};for(var n in o)r[n]={x:Math.floor(o[n].x*e),y:Math.floor(o[n].y*t)};return r},repaintTrackingLayer:function(e){var t=this,o=this.$refs.video,r=this.$refs.trackingLayer,n=r.getContext(\"2d\"),c=o.offsetWidth,a=o.offsetWidth,s=o.videoWidth,i=o.videoHeight;window.requestAnimationFrame(function(){r.width=c,r.height=a;var o=c/s,u=a/i;e=t.normalizeLocation(o,u,e),t.trackRepaintFunction(e,n)})},clearTrackingLayer:function(){var e=this.$refs.trackingLayer,t=e.getContext(\"2d\");window.requestAnimationFrame(function(){t.clearRect(0,0,e.width,e.height)})},paintPauseFrame:function(e){var t=this.$refs.pauseFrame,o=t.getContext(\"2d\");window.requestAnimationFrame(function(){t.width=e.width,t.height=e.height,o.putImageData(e,0,0)})},clearPauseFrame:function(){var e=this.$refs.pauseFrame,t=e.getContext(\"2d\");window.requestAnimationFrame(function(){t.clearRect(0,0,e.width,e.height)})}}}},function(e,t,o){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=o(13),n=o.n(r),c=o(9),a=o.n(c),s=o(8),i=o.n(s),u=o(25),l=o.n(u),d=o(24),f=o(99),p=o(58),k=o(37),h=o.n(k),v=o(225),B=o.n(v),m=o(89),w=o.n(m),y=o(56),C=o.n(y),P=o(229),b=o.n(P);t.default={mixins:[h.a],props:{paused:{type:Boolean,default:!1},camera:{type:[Object,Boolean],default:b.a},track:{type:[Function,Boolean],default:!0}},data:function(){return{cameraInstance:null,destroyed:!1,constraints:{},stopScanning:function(){}}},computed:{shouldStream:function(){return!1===this.paused&&!1===this.destroyed&&!1!==this.constraints.video},shouldScan:function(){return!0===this.shouldStream&&null!==this.cameraInstance},scanInterval:function(){return!1===this.track?500:40},trackRepaintFunction:function(){return!0===this.track?o.i(f.a)({color:\"red\"}):!1===this.track?null:this.track}},watch:{shouldStream:function(e){if(!e){var t=this.cameraInstance.captureFrame();this.paintPauseFrame(t)}},shouldScan:function(e){e?(this.clearPauseFrame(),this.clearTrackingLayer(),this.startScanning()):this.stopScanning()},camera:{deep:!0,immediate:!0,handler:function(e,t){B()(e,t)||(w()(e)?this.constraints={audio:!1,video:e}:C()(e)&&(this.constraints={audio:!1,video:l()({facingMode:{ideal:\"environment\"},width:{min:360,ideal:640,max:1920},height:{min:240,ideal:480,max:1080}},e)}))}},constraints:function(){this.$emit(\"init\",this.init())}},mounted:function(){this.$emit(\"init\",this.init())},beforeDestroy:function(){this.beforeResetCamera(),this.destroyed=!0},methods:{init:function(){var e=this;return i()(a.a.mark(function t(){return a.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(e.beforeResetCamera(),!1!==e.constraints.video){t.next=5;break}e.cameraInstance=null,t.next=9;break;case 5:return t.next=7,o.i(p.a)(e.constraints,e.$refs.video);case 7:e.cameraInstance=t.sent,e.destroyed&&e.cameraInstance.stop();case 9:case\"end\":return t.stop()}},t,e)}))()},startScanning:function(){var e=this,t=function(t){e.onDetect(n.a.resolve(l()({source:\"stream\"},t)))};this.stopScanning=o.i(d.b)(this.cameraInstance,{detectHandler:t,locateHandler:this.onLocate,minDelay:this.scanInterval})},beforeResetCamera:function(){null!==this.cameraInstance&&(this.cameraInstance.stop(),this.cameraInstance=null)},onLocate:function(e){null!==this.trackRepaintFunction&&(null===e?this.clearTrackingLayer():this.repaintTrackingLayer(e))},normalizeLocation:function(e,t,o){var r={};for(var n in o)r[n]={x:Math.floor(o[n].x*e),y:Math.floor(o[n].y*t)};return r},repaintTrackingLayer:function(e){var t=this,o=this.$refs.video,r=this.$refs.trackingLayer,n=r.getContext(\"2d\"),c=o.offsetWidth,a=o.offsetWidth,s=o.videoWidth,i=o.videoHeight;window.requestAnimationFrame(function(){r.width=c,r.height=a;var o=c/s,u=a/i;e=t.normalizeLocation(o,u,e),t.trackRepaintFunction(e,n)})},clearTrackingLayer:function(){var e=this.$refs.trackingLayer,t=e.getContext(\"2d\");window.requestAnimationFrame(function(){t.clearRect(0,0,e.width,e.height)})},paintPauseFrame:function(e){var t=this.$refs.pauseFrame,o=t.getContext(\"2d\");window.requestAnimationFrame(function(){t.width=e.width,t.height=e.height,o.putImageData(e,0,0)})},clearPauseFrame:function(){var e=this.$refs.pauseFrame,t=e.getContext(\"2d\");window.requestAnimationFrame(function(){t.clearRect(0,0,e.width,e.height)})}}}},function(e,t,o){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=o(9),n=o.n(r),c=o(8),a=o.n(c);t.default={methods:{onDetect:function(e){var t=this;return a()(n.a.mark(function o(){var r,c;return n.a.wrap(function(o){for(;;)switch(o.prev=o.next){case 0:return t.$emit(\"detect\",e),o.prev=1,o.next=4,e;case 4:r=o.sent,c=r.content,null!==c&&t.$emit(\"decode\",c),o.next=11;break;case 9:o.prev=9,o.t0=o.catch(1);case 11:case\"end\":return o.stop()}},o,t,[[1,9]])}))()}}}},function(e,t,o){e.exports={default:o(116),__esModule:!0}},function(e,t,o){e.exports={default:o(117),__esModule:!0}},function(e,t,o){e.exports={default:o(118),__esModule:!0}},function(e,t,o){e.exports={default:o(119),__esModule:!0}},function(e,t,o){e.exports={default:o(120),__esModule:!0}},function(e,t,o){e.exports={default:o(121),__esModule:!0}},function(e,t,o){e.exports={default:o(123),__esModule:!0}},function(e,t,o){e.exports={default:o(124),__esModule:!0}},function(e,t,o){\"use strict\";t.__esModule=!0;var r=o(108),n=function(e){return e&&e.__esModule?e:{default:e}}(r);t.default=function(){function e(e,t){for(var o=0;o<t.length;o++){var r=t[o];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),(0,n.default)(e,r.key,r)}}return function(t,o,r){return o&&e(t.prototype,o),r&&e(t,r),t}}()},function(e,t,o){\"use strict\";function r(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var n=o(110),c=r(n),a=o(107),s=r(a),i=o(63),u=r(i);t.default=function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+(void 0===t?\"undefined\":(0,u.default)(t)));e.prototype=(0,s.default)(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(c.default?(0,c.default)(e,t):e.__proto__=t)}},function(e,t,o){\"use strict\";t.__esModule=!0;var r=o(63),n=function(e){return e&&e.__esModule?e:{default:e}}(r);t.default=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!==(void 0===t?\"undefined\":(0,n.default)(t))&&\"function\"!=typeof t?e:t}},function(e,t,o){o(52),o(146),e.exports=o(0).Array.from},function(e,t,o){o(148),e.exports=o(0).Object.assign},function(e,t,o){o(149);var r=o(0).Object;e.exports=function(e,t){return r.create(e,t)}},function(e,t,o){o(150);var r=o(0).Object;e.exports=function(e,t,o){return r.defineProperty(e,t,o)}},function(e,t,o){o(151),e.exports=o(0).Object.getPrototypeOf},function(e,t,o){o(152),e.exports=o(0).Object.setPrototypeOf},function(e,t,o){o(82),o(52),o(83),o(153),o(155),o(156),e.exports=o(0).Promise},function(e,t,o){o(154),o(82),o(157),o(158),e.exports=o(0).Symbol},function(e,t,o){o(52),o(83),e.exports=o(51).f(\"iterator\")},function(e,t){e.exports=function(){}},function(e,t){e.exports=function(e,t,o,r){if(!(e instanceof t)||void 0!==r&&r in e)throw TypeError(o+\": incorrect invocation!\");return e}},function(e,t,o){var r=o(16),n=o(48),c=o(145);e.exports=function(e){return function(t,o,a){var s,i=r(t),u=n(i.length),l=c(a,u);if(e&&o!=o){for(;u>l;)if((s=i[l++])!=s)return!0}else for(;u>l;l++)if((e||l in i)&&i[l]===o)return e||l||0;return!e&&-1}}},function(e,t,o){\"use strict\";var r=o(5),n=o(20);e.exports=function(e,t,o){t in e?r.f(e,t,n(0,o)):e[t]=o}},function(e,t,o){var r=o(28),n=o(44),c=o(29);e.exports=function(e){var t=r(e),o=n.f;if(o)for(var a,s=o(e),i=c.f,u=0;s.length>u;)i.call(e,a=s[u++])&&t.push(a);return t}},function(e,t,o){var r=o(14),n=o(69),c=o(68),a=o(4),s=o(48),i=o(81),u={},l={},t=e.exports=function(e,t,o,d,f){var p,k,h,v,B=f?function(){return e}:i(e),m=r(o,d,t?2:1),w=0;if(\"function\"!=typeof B)throw TypeError(e+\" is not iterable!\");if(c(B)){for(p=s(e.length);p>w;w++)if((v=t?m(a(k=e[w])[0],k[1]):m(e[w]))===u||v===l)return v}else for(h=B.call(e);!(k=h.next()).done;)if((v=n(h,m,k.value,t))===u||v===l)return v};t.BREAK=u,t.RETURN=l},function(e,t){e.exports=function(e,t,o){var r=void 0===o;switch(t.length){case 0:return r?e():e.call(o);case 1:return r?e(t[0]):e.call(o,t[0]);case 2:return r?e(t[0],t[1]):e.call(o,t[0],t[1]);case 3:return r?e(t[0],t[1],t[2]):e.call(o,t[0],t[1],t[2]);case 4:return r?e(t[0],t[1],t[2],t[3]):e.call(o,t[0],t[1],t[2],t[3])}return e.apply(o,t)}},function(e,t,o){var r=o(18);e.exports=Array.isArray||function(e){return\"Array\"==r(e)}},function(e,t,o){\"use strict\";var r=o(43),n=o(20),c=o(30),a={};o(11)(a,o(2)(\"iterator\"),function(){return this}),e.exports=function(e,t,o){e.prototype=r(a,{next:n(1,o)}),c(e,t+\" Iterator\")}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,o){var r=o(32)(\"meta\"),n=o(12),c=o(10),a=o(5).f,s=0,i=Object.isExtensible||function(){return!0},u=!o(15)(function(){return i(Object.preventExtensions({}))}),l=function(e){a(e,r,{value:{i:\"O\"+ ++s,w:{}}})},d=function(e,t){if(!n(e))return\"symbol\"==typeof e?e:(\"string\"==typeof e?\"S\":\"P\")+e;if(!c(e,r)){if(!i(e))return\"F\";if(!t)return\"E\";l(e)}return e[r].i},f=function(e,t){if(!c(e,r)){if(!i(e))return!0;if(!t)return!1;l(e)}return e[r].w},p=function(e){return u&&k.NEED&&i(e)&&!c(e,r)&&l(e),e},k=e.exports={KEY:r,NEED:!1,fastKey:d,getWeak:f,onFreeze:p}},function(e,t,o){var r=o(1),n=o(80).set,c=r.MutationObserver||r.WebKitMutationObserver,a=r.process,s=r.Promise,i=\"process\"==o(18)(a);e.exports=function(){var e,t,o,u=function(){var r,n;for(i&&(r=a.domain)&&r.exit();e;){n=e.fn,e=e.next;try{n()}catch(r){throw e?o():t=void 0,r}}t=void 0,r&&r.enter()};if(i)o=function(){a.nextTick(u)};else if(c){var l=!0,d=document.createTextNode(\"\");new c(u).observe(d,{characterData:!0}),o=function(){d.data=l=!l}}else if(s&&s.resolve){var f=s.resolve();o=function(){f.then(u)}}else o=function(){n.call(r,u)};return function(r){var n={fn:r,next:void 0};t&&(t.next=n),e||(e=n,o()),t=n}}},function(e,t,o){\"use strict\";var r=o(28),n=o(44),c=o(29),a=o(31),s=o(67),i=Object.assign;e.exports=!i||o(15)(function(){var e={},t={},o=Symbol(),r=\"abcdefghijklmnopqrst\";return e[o]=7,r.split(\"\").forEach(function(e){t[e]=e}),7!=i({},e)[o]||Object.keys(i({},t)).join(\"\")!=r})?function(e,t){for(var o=a(e),i=arguments.length,u=1,l=n.f,d=c.f;i>u;)for(var f,p=s(arguments[u++]),k=l?r(p).concat(l(p)):r(p),h=k.length,v=0;h>v;)d.call(p,f=k[v++])&&(o[f]=p[f]);return o}:i},function(e,t,o){var r=o(5),n=o(4),c=o(28);e.exports=o(7)?Object.defineProperties:function(e,t){n(e);for(var o,a=c(t),s=a.length,i=0;s>i;)r.f(e,o=a[i++],t[o]);return e}},function(e,t,o){var r=o(16),n=o(73).f,c={}.toString,a=\"object\"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],s=function(e){try{return n(e)}catch(e){return a.slice()}};e.exports.f=function(e){return a&&\"[object Window]\"==c.call(e)?s(e):n(r(e))}},function(e,t,o){var r=o(3),n=o(0),c=o(15);e.exports=function(e,t){var o=(n.Object||{})[e]||Object[e],a={};a[e]=t(o),r(r.S+r.F*c(function(){o(1)}),\"Object\",a)}},function(e,t,o){var r=o(11);e.exports=function(e,t,o){for(var n in t)o&&e[n]?e[n]=t[n]:r(e,n,t[n]);return e}},function(e,t,o){var r=o(12),n=o(4),c=function(e,t){if(n(e),!r(t)&&null!==t)throw TypeError(t+\": can't set as prototype!\")};e.exports={set:Object.setPrototypeOf||(\"__proto__\"in{}?function(e,t,r){try{r=o(14)(Function.call,o(72).f(Object.prototype,\"__proto__\").set,2),r(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,o){return c(e,o),t?e.__proto__=o:r(e,o),e}}({},!1):void 0),check:c}},function(e,t,o){\"use strict\";var r=o(1),n=o(0),c=o(5),a=o(7),s=o(2)(\"species\");e.exports=function(e){var t=\"function\"==typeof n[e]?n[e]:r[e];a&&t&&!t[s]&&c.f(t,s,{configurable:!0,get:function(){return this}})}},function(e,t,o){var r=o(47),n=o(39);e.exports=function(e){return function(t,o){var c,a,s=String(n(t)),i=r(o),u=s.length;return i<0||i>=u?e?\"\":void 0:(c=s.charCodeAt(i),c<55296||c>56319||i+1===u||(a=s.charCodeAt(i+1))<56320||a>57343?e?s.charAt(i):c:e?s.slice(i,i+2):a-56320+(c-55296<<10)+65536)}}},function(e,t,o){var r=o(47),n=Math.max,c=Math.min;e.exports=function(e,t){return e=r(e),e<0?n(e+t,0):c(e,t)}},function(e,t,o){\"use strict\";var r=o(14),n=o(3),c=o(31),a=o(69),s=o(68),i=o(48),u=o(128),l=o(81);n(n.S+n.F*!o(71)(function(e){Array.from(e)}),\"Array\",{from:function(e){var t,o,n,d,f=c(e),p=\"function\"==typeof this?this:Array,k=arguments.length,h=k>1?arguments[1]:void 0,v=void 0!==h,B=0,m=l(f);if(v&&(h=r(h,k>2?arguments[2]:void 0,2)),void 0==m||p==Array&&s(m))for(t=i(f.length),o=new p(t);t>B;B++)u(o,B,v?h(f[B],B):f[B]);else for(d=m.call(f),o=new p;!(n=d.next()).done;B++)u(o,B,v?a(d,h,[n.value,B],!0):n.value);return o.length=B,o}})},function(e,t,o){\"use strict\";var r=o(125),n=o(134),c=o(19),a=o(16);e.exports=o(70)(Array,\"Array\",function(e,t){this._t=a(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,o=this._i++;return!e||o>=e.length?(this._t=void 0,n(1)):\"keys\"==t?n(0,o):\"values\"==t?n(0,e[o]):n(0,[o,e[o]])},\"values\"),c.Arguments=c.Array,r(\"keys\"),r(\"values\"),r(\"entries\")},function(e,t,o){var r=o(3);r(r.S+r.F,\"Object\",{assign:o(137)})},function(e,t,o){var r=o(3);r(r.S,\"Object\",{create:o(43)})},function(e,t,o){var r=o(3);r(r.S+r.F*!o(7),\"Object\",{defineProperty:o(5).f})},function(e,t,o){var r=o(31),n=o(74);o(140)(\"getPrototypeOf\",function(){return function(e){return n(r(e))}})},function(e,t,o){var r=o(3);r(r.S,\"Object\",{setPrototypeOf:o(142).set})},function(e,t,o){\"use strict\";var r,n,c,a,s=o(27),i=o(1),u=o(14),l=o(64),d=o(3),f=o(12),p=o(26),k=o(126),h=o(130),v=o(79),B=o(80).set,m=o(136)(),w=o(42),y=o(76),C=o(77),P=i.TypeError,b=i.process,g=i.Promise,x=\"process\"==l(b),_=function(){},j=n=w.f,M=!!function(){try{var e=g.resolve(1),t=(e.constructor={})[o(2)(\"species\")]=function(e){e(_,_)};return(x||\"function\"==typeof PromiseRejectionEvent)&&e.then(_)instanceof t}catch(e){}}(),O=function(e){var t;return!(!f(e)||\"function\"!=typeof(t=e.then))&&t},L=function(e,t){if(!e._n){e._n=!0;var o=e._c;m(function(){for(var r=e._v,n=1==e._s,c=0;o.length>c;)!function(t){var o,c,a=n?t.ok:t.fail,s=t.resolve,i=t.reject,u=t.domain;try{a?(n||(2==e._h&&I(e),e._h=1),!0===a?o=r:(u&&u.enter(),o=a(r),u&&u.exit()),o===t.promise?i(P(\"Promise-chain cycle\")):(c=O(o))?c.call(o,s,i):s(o)):i(r)}catch(e){i(e)}}(o[c++]);e._c=[],e._n=!1,t&&!e._h&&S(e)})}},S=function(e){B.call(i,function(){var t,o,r,n=e._v,c=E(e);if(c&&(t=y(function(){x?b.emit(\"unhandledRejection\",n,e):(o=i.onunhandledrejection)?o({promise:e,reason:n}):(r=i.console)&&r.error&&r.error(\"Unhandled promise rejection\",n)}),e._h=x||E(e)?2:1),e._a=void 0,c&&t.e)throw t.v})},E=function(e){if(1==e._h)return!1;for(var t,o=e._a||e._c,r=0;o.length>r;)if(t=o[r++],t.fail||!E(t.promise))return!1;return!0},I=function(e){B.call(i,function(){var t;x?b.emit(\"rejectionHandled\",e):(t=i.onrejectionhandled)&&t({promise:e,reason:e._v})})},F=function(e){var t=this;t._d||(t._d=!0,t=t._w||t,t._v=e,t._s=2,t._a||(t._a=t._c.slice()),L(t,!0))},A=function(e){var t,o=this;if(!o._d){o._d=!0,o=o._w||o;try{if(o===e)throw P(\"Promise can't be resolved itself\");(t=O(e))?m(function(){var r={_w:o,_d:!1};try{t.call(e,u(A,r,1),u(F,r,1))}catch(e){F.call(r,e)}}):(o._v=e,o._s=1,L(o,!1))}catch(e){F.call({_w:o,_d:!1},e)}}};M||(g=function(e){k(this,g,\"Promise\",\"_h\"),p(e),r.call(this);try{e(u(A,this,1),u(F,this,1))}catch(e){F.call(this,e)}},r=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1},r.prototype=o(141)(g.prototype,{then:function(e,t){var o=j(v(this,g));return o.ok=\"function\"!=typeof e||e,o.fail=\"function\"==typeof t&&t,o.domain=x?b.domain:void 0,this._c.push(o),this._a&&this._a.push(o),this._s&&L(this,!1),o.promise},catch:function(e){return this.then(void 0,e)}}),c=function(){var e=new r;this.promise=e,this.resolve=u(A,e,1),this.reject=u(F,e,1)},w.f=j=function(e){return e===g||e===a?new c(e):n(e)}),d(d.G+d.W+d.F*!M,{Promise:g}),o(30)(g,\"Promise\"),o(143)(\"Promise\"),a=o(0).Promise,d(d.S+d.F*!M,\"Promise\",{reject:function(e){var t=j(this);return(0,t.reject)(e),t.promise}}),d(d.S+d.F*(s||!M),\"Promise\",{resolve:function(e){return C(s&&this===a?g:this,e)}}),d(d.S+d.F*!(M&&o(71)(function(e){g.all(e).catch(_)})),\"Promise\",{all:function(e){var t=this,o=j(t),r=o.resolve,n=o.reject,c=y(function(){var o=[],c=0,a=1;h(e,!1,function(e){var s=c++,i=!1;o.push(void 0),a++,t.resolve(e).then(function(e){i||(i=!0,o[s]=e,--a||r(o))},n)}),--a||r(o)});return c.e&&n(c.v),o.promise},race:function(e){var t=this,o=j(t),r=o.reject,n=y(function(){h(e,!1,function(e){t.resolve(e).then(o.resolve,r)})});return n.e&&r(n.v),o.promise}})},function(e,t,o){\"use strict\";var r=o(1),n=o(10),c=o(7),a=o(3),s=o(78),i=o(135).KEY,u=o(15),l=o(46),d=o(30),f=o(32),p=o(2),k=o(51),h=o(50),v=o(129),B=o(132),m=o(4),w=o(16),y=o(49),C=o(20),P=o(43),b=o(139),g=o(72),x=o(5),_=o(28),j=g.f,M=x.f,O=b.f,L=r.Symbol,S=r.JSON,E=S&&S.stringify,I=p(\"_hidden\"),F=p(\"toPrimitive\"),A={}.propertyIsEnumerable,N=l(\"symbol-registry\"),T=l(\"symbols\"),R=l(\"op-symbols\"),z=Object.prototype,D=\"function\"==typeof L,U=r.QObject,X=!U||!U.prototype||!U.prototype.findChild,q=c&&u(function(){return 7!=P(M({},\"a\",{get:function(){return M(this,\"a\",{value:7}).a}})).a})?function(e,t,o){var r=j(z,t);r&&delete z[t],M(e,t,o),r&&e!==z&&M(z,t,r)}:M,$=function(e){var t=T[e]=P(L.prototype);return t._k=e,t},G=D&&\"symbol\"==typeof L.iterator?function(e){return\"symbol\"==typeof e}:function(e){return e instanceof L},W=function(e,t,o){return e===z&&W(R,t,o),m(e),t=y(t,!0),m(o),n(T,t)?(o.enumerable?(n(e,I)&&e[I][t]&&(e[I][t]=!1),o=P(o,{enumerable:C(0,!1)})):(n(e,I)||M(e,I,C(1,{})),e[I][t]=!0),q(e,t,o)):M(e,t,o)},V=function(e,t){m(e);for(var o,r=v(t=w(t)),n=0,c=r.length;c>n;)W(e,o=r[n++],t[o]);return e},H=function(e,t){return void 0===t?P(e):V(P(e),t)},K=function(e){var t=A.call(this,e=y(e,!0));return!(this===z&&n(T,e)&&!n(R,e))&&(!(t||!n(this,e)||!n(T,e)||n(this,I)&&this[I][e])||t)},Z=function(e,t){if(e=w(e),t=y(t,!0),e!==z||!n(T,t)||n(R,t)){var o=j(e,t);return!o||!n(T,t)||n(e,I)&&e[I][t]||(o.enumerable=!0),o}},Q=function(e){for(var t,o=O(w(e)),r=[],c=0;o.length>c;)n(T,t=o[c++])||t==I||t==i||r.push(t);return r},J=function(e){for(var t,o=e===z,r=O(o?R:w(e)),c=[],a=0;r.length>a;)!n(T,t=r[a++])||o&&!n(z,t)||c.push(T[t]);return c};D||(L=function(){if(this instanceof L)throw TypeError(\"Symbol is not a constructor!\");var e=f(arguments.length>0?arguments[0]:void 0),t=function(o){this===z&&t.call(R,o),n(this,I)&&n(this[I],e)&&(this[I][e]=!1),q(this,e,C(1,o))};return c&&X&&q(z,e,{configurable:!0,set:t}),$(e)},s(L.prototype,\"toString\",function(){return this._k}),g.f=Z,x.f=W,o(73).f=b.f=Q,o(29).f=K,o(44).f=J,c&&!o(27)&&s(z,\"propertyIsEnumerable\",K,!0),k.f=function(e){return $(p(e))}),a(a.G+a.W+a.F*!D,{Symbol:L});for(var Y=\"hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\".split(\",\"),ee=0;Y.length>ee;)p(Y[ee++]);for(var te=_(p.store),oe=0;te.length>oe;)h(te[oe++]);a(a.S+a.F*!D,\"Symbol\",{for:function(e){return n(N,e+=\"\")?N[e]:N[e]=L(e)},keyFor:function(e){if(!G(e))throw TypeError(e+\" is not a symbol!\");for(var t in N)if(N[t]===e)return t},useSetter:function(){X=!0},useSimple:function(){X=!1}}),a(a.S+a.F*!D,\"Object\",{create:H,defineProperty:W,defineProperties:V,getOwnPropertyDescriptor:Z,getOwnPropertyNames:Q,getOwnPropertySymbols:J}),S&&a(a.S+a.F*(!D||u(function(){var e=L();return\"[null]\"!=E([e])||\"{}\"!=E({a:e})||\"{}\"!=E(Object(e))})),\"JSON\",{stringify:function(e){if(void 0!==e&&!G(e)){for(var t,o,r=[e],n=1;arguments.length>n;)r.push(arguments[n++]);return t=r[1],\"function\"==typeof t&&(o=t),!o&&B(t)||(t=function(e,t){if(o&&(t=o.call(this,e,t)),!G(t))return t}),r[1]=t,E.apply(S,r)}}}),L.prototype[F]||o(11)(L.prototype,F,L.prototype.valueOf),d(L,\"Symbol\"),d(Math,\"Math\",!0),d(r.JSON,\"JSON\",!0)},function(e,t,o){\"use strict\";var r=o(3),n=o(0),c=o(1),a=o(79),s=o(77);r(r.P+r.R,\"Promise\",{finally:function(e){var t=a(this,n.Promise||c.Promise),o=\"function\"==typeof e;return this.then(o?function(o){return s(t,e()).then(function(){return o})}:e,o?function(o){return s(t,e()).then(function(){throw o})}:e)}})},function(e,t,o){\"use strict\";var r=o(3),n=o(42),c=o(76);r(r.S,\"Promise\",{try:function(e){var t=n.f(this),o=c(e);return(o.e?t.reject:t.resolve)(o.v),t.promise}})},function(e,t,o){o(50)(\"asyncIterator\")},function(e,t,o){o(50)(\"observable\")},function(e,t){},function(e,t){},function(e,t,o){var r=o(17),n=o(6),c=r(n,\"DataView\");e.exports=c},function(e,t,o){function r(e){var t=-1,o=null==e?0:e.length;for(this.clear();++t<o;){var r=e[t];this.set(r[0],r[1])}}var n=o(191),c=o(192),a=o(193),s=o(194),i=o(195);r.prototype.clear=n,r.prototype.delete=c,r.prototype.get=a,r.prototype.has=s,r.prototype.set=i,e.exports=r},function(e,t,o){var r=o(17),n=o(6),c=r(n,\"Promise\");e.exports=c},function(e,t,o){var r=o(17),n=o(6),c=r(n,\"Set\");e.exports=c},function(e,t,o){function r(e){var t=-1,o=null==e?0:e.length;for(this.__data__=new n;++t<o;)this.add(e[t])}var n=o(84),c=o(215),a=o(216);r.prototype.add=r.prototype.push=c,r.prototype.has=a,e.exports=r},function(e,t,o){function r(e){var t=this.__data__=new n(e);this.size=t.size}var n=o(33),c=o(218),a=o(219),s=o(220),i=o(221),u=o(222);r.prototype.clear=c,r.prototype.delete=a,r.prototype.get=s,r.prototype.has=i,r.prototype.set=u,e.exports=r},function(e,t,o){var r=o(6),n=r.Uint8Array;e.exports=n},function(e,t,o){var r=o(17),n=o(6),c=r(n,\"WeakMap\");e.exports=c},function(e,t){function o(e,t){for(var o=-1,r=null==e?0:e.length,n=0,c=[];++o<r;){var a=e[o];t(a,o,e)&&(c[n++]=a)}return c}e.exports=o},function(e,t,o){function r(e,t){var o=a(e),r=!o&&c(e),l=!o&&!r&&s(e),f=!o&&!r&&!l&&u(e),p=o||r||l||f,k=p?n(e.length,String):[],h=k.length;for(var v in e)!t&&!d.call(e,v)||p&&(\"length\"==v||l&&(\"offset\"==v||\"parent\"==v)||f&&(\"buffer\"==v||\"byteLength\"==v||\"byteOffset\"==v)||i(v,h))||k.push(v);return k}var n=o(180),c=o(223),a=o(55),s=o(90),i=o(196),u=o(93),l=Object.prototype,d=l.hasOwnProperty;e.exports=r},function(e,t){function o(e,t){for(var o=-1,r=t.length,n=e.length;++o<r;)e[n+o]=t[o];return e}e.exports=o},function(e,t){function o(e,t){for(var o=-1,r=null==e?0:e.length;++o<r;)if(t(e[o],o,e))return!0;return!1}e.exports=o},function(e,t,o){function r(e,t,o){var r=t(e);return c(e)?r:n(r,o(e))}var n=o(171),c=o(55);e.exports=r},function(e,t,o){function r(e){return c(e)&&n(e)==a}var n=o(21),c=o(22),a=\"[object Arguments]\";e.exports=r},function(e,t,o){function r(e,t,o,a,s){return e===t||(null==e||null==t||!c(e)&&!c(t)?e!==e&&t!==t:n(e,t,o,a,r,s))}var n=o(176),c=o(22);e.exports=r},function(e,t,o){function r(e,t,o,r,v,m){var w=u(e),y=u(t),C=w?k:i(e),P=y?k:i(t);C=C==p?h:C,P=P==p?h:P;var b=C==h,g=P==h,x=C==P;if(x&&l(e)){if(!l(t))return!1;w=!0,b=!1}if(x&&!b)return m||(m=new n),w||d(e)?c(e,t,o,r,v,m):a(e,t,C,o,r,v,m);if(!(o&f)){var _=b&&B.call(e,\"__wrapped__\"),j=g&&B.call(t,\"__wrapped__\");if(_||j){var M=_?e.value():e,O=j?t.value():t;return m||(m=new n),v(M,O,o,r,m)}}return!!x&&(m||(m=new n),s(e,t,o,r,v,m))}var n=o(166),c=o(85),a=o(184),s=o(185),i=o(189),u=o(55),l=o(90),d=o(93),f=1,p=\"[object Arguments]\",k=\"[object Array]\",h=\"[object Object]\",v=Object.prototype,B=v.hasOwnProperty;e.exports=r},function(e,t,o){function r(e){return!(!a(e)||c(e))&&(n(e)?k:u).test(s(e))}var n=o(91),c=o(198),a=o(56),s=o(87),i=/[\\\\^$.*+?()[\\]{}|]/g,u=/^\\[object .+?Constructor\\]$/,l=Function.prototype,d=Object.prototype,f=l.toString,p=d.hasOwnProperty,k=RegExp(\"^\"+f.call(p).replace(i,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\");e.exports=r},function(e,t,o){function r(e){return a(e)&&c(e.length)&&!!s[n(e)]}var n=o(21),c=o(92),a=o(22),s={};s[\"[object Float32Array]\"]=s[\"[object Float64Array]\"]=s[\"[object Int8Array]\"]=s[\"[object Int16Array]\"]=s[\"[object Int32Array]\"]=s[\"[object Uint8Array]\"]=s[\"[object Uint8ClampedArray]\"]=s[\"[object Uint16Array]\"]=s[\"[object Uint32Array]\"]=!0,s[\"[object Arguments]\"]=s[\"[object Array]\"]=s[\"[object ArrayBuffer]\"]=s[\"[object Boolean]\"]=s[\"[object DataView]\"]=s[\"[object Date]\"]=s[\"[object Error]\"]=s[\"[object Function]\"]=s[\"[object Map]\"]=s[\"[object Number]\"]=s[\"[object Object]\"]=s[\"[object RegExp]\"]=s[\"[object Set]\"]=s[\"[object String]\"]=s[\"[object WeakMap]\"]=!1,e.exports=r},function(e,t,o){function r(e){if(!n(e))return c(e);var t=[];for(var o in Object(e))s.call(e,o)&&\"constructor\"!=o&&t.push(o);return t}var n=o(199),c=o(211),a=Object.prototype,s=a.hasOwnProperty;e.exports=r},function(e,t){function o(e,t){for(var o=-1,r=Array(e);++o<e;)r[o]=t(o);return r}e.exports=o},function(e,t){function o(e){return function(t){return e(t)}}e.exports=o},function(e,t){function o(e,t){return e.has(t)}e.exports=o},function(e,t,o){var r=o(6),n=r[\"__core-js_shared__\"];e.exports=n},function(e,t,o){function r(e,t,o,r,n,b,x){switch(o){case P:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case C:return!(e.byteLength!=t.byteLength||!b(new c(e),new c(t)));case f:case p:case v:return a(+e,+t);case k:return e.name==t.name&&e.message==t.message;case B:case w:return e==t+\"\";case h:var _=i;case m:var j=r&l;if(_||(_=u),e.size!=t.size&&!j)return!1;var M=x.get(e);if(M)return M==t;r|=d,x.set(e,t);var O=s(_(e),_(t),r,n,b,x);return x.delete(e),O;case y:if(g)return g.call(e)==g.call(t)}return!1}var n=o(54),c=o(167),a=o(88),s=o(85),i=o(210),u=o(217),l=1,d=2,f=\"[object Boolean]\",p=\"[object Date]\",k=\"[object Error]\",h=\"[object Map]\",v=\"[object Number]\",B=\"[object RegExp]\",m=\"[object Set]\",w=\"[object String]\",y=\"[object Symbol]\",C=\"[object ArrayBuffer]\",P=\"[object DataView]\",b=n?n.prototype:void 0,g=b?b.valueOf:void 0;e.exports=r},function(e,t,o){function r(e,t,o,r,a,i){var u=o&c,l=n(e),d=l.length;if(d!=n(t).length&&!u)return!1;for(var f=d;f--;){var p=l[f];if(!(u?p in t:s.call(t,p)))return!1}var k=i.get(e);if(k&&i.get(t))return k==t;var h=!0;i.set(e,t),i.set(t,e);for(var v=u;++f<d;){p=l[f];var B=e[p],m=t[p];if(r)var w=u?r(m,B,p,t,e,i):r(B,m,p,e,t,i);if(!(void 0===w?B===m||a(B,m,o,r,i):w)){h=!1;break}v||(v=\"constructor\"==p)}if(h&&!v){var y=e.constructor,C=t.constructor;y!=C&&\"constructor\"in e&&\"constructor\"in t&&!(\"function\"==typeof y&&y instanceof y&&\"function\"==typeof C&&C instanceof C)&&(h=!1)}return i.delete(e),i.delete(t),h}var n=o(186),c=1,a=Object.prototype,s=a.hasOwnProperty;e.exports=r},function(e,t,o){function r(e){return n(e,a,c)}var n=o(173),c=o(188),a=o(226);e.exports=r},function(e,t,o){function r(e){var t=a.call(e,i),o=e[i];try{e[i]=void 0;var r=!0}catch(e){}var n=s.call(e);return r&&(t?e[i]=o:delete e[i]),n}var n=o(54),c=Object.prototype,a=c.hasOwnProperty,s=c.toString,i=n?n.toStringTag:void 0;e.exports=r},function(e,t,o){var r=o(169),n=o(227),c=Object.prototype,a=c.propertyIsEnumerable,s=Object.getOwnPropertySymbols,i=s?function(e){return null==e?[]:(e=Object(e),r(s(e),function(t){return a.call(e,t)}))}:n;e.exports=i},function(e,t,o){var r=o(161),n=o(53),c=o(163),a=o(164),s=o(168),i=o(21),u=o(87),l=u(r),d=u(n),f=u(c),p=u(a),k=u(s),h=i;(r&&\"[object DataView]\"!=h(new r(new ArrayBuffer(1)))||n&&\"[object Map]\"!=h(new n)||c&&\"[object Promise]\"!=h(c.resolve())||a&&\"[object Set]\"!=h(new a)||s&&\"[object WeakMap]\"!=h(new s))&&(h=function(e){var t=i(e),o=\"[object Object]\"==t?e.constructor:void 0,r=o?u(o):\"\";if(r)switch(r){case l:return\"[object DataView]\";case d:return\"[object Map]\";case f:return\"[object Promise]\";case p:return\"[object Set]\";case k:return\"[object WeakMap]\"}return t}),e.exports=h},function(e,t){function o(e,t){return null==e?void 0:e[t]}e.exports=o},function(e,t,o){function r(){this.__data__=n?n(null):{},this.size=0}var n=o(36);e.exports=r},function(e,t){function o(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}e.exports=o},function(e,t,o){function r(e){var t=this.__data__;if(n){var o=t[e];return o===c?void 0:o}return s.call(t,e)?t[e]:void 0}var n=o(36),c=\"__lodash_hash_undefined__\",a=Object.prototype,s=a.hasOwnProperty;e.exports=r},function(e,t,o){function r(e){var t=this.__data__;return n?void 0!==t[e]:a.call(t,e)}var n=o(36),c=Object.prototype,a=c.hasOwnProperty;e.exports=r},function(e,t,o){function r(e,t){var o=this.__data__;return this.size+=this.has(e)?0:1,o[e]=n&&void 0===t?c:t,this}var n=o(36),c=\"__lodash_hash_undefined__\";e.exports=r},function(e,t){function o(e,t){var o=typeof e;return!!(t=null==t?r:t)&&(\"number\"==o||\"symbol\"!=o&&n.test(e))&&e>-1&&e%1==0&&e<t}var r=9007199254740991,n=/^(?:0|[1-9]\\d*)$/;e.exports=o},function(e,t){function o(e){var t=typeof e;return\"string\"==t||\"number\"==t||\"symbol\"==t||\"boolean\"==t?\"__proto__\"!==e:null===e}e.exports=o},function(e,t,o){function r(e){return!!c&&c in e}var n=o(183),c=function(){var e=/[^.]+$/.exec(n&&n.keys&&n.keys.IE_PROTO||\"\");return e?\"Symbol(src)_1.\"+e:\"\"}();e.exports=r},function(e,t){function o(e){var t=e&&e.constructor;return e===(\"function\"==typeof t&&t.prototype||r)}var r=Object.prototype;e.exports=o},function(e,t){function o(){this.__data__=[],this.size=0}e.exports=o},function(e,t,o){function r(e){var t=this.__data__,o=n(t,e);return!(o<0)&&(o==t.length-1?t.pop():a.call(t,o,1),--this.size,!0)}var n=o(34),c=Array.prototype,a=c.splice;e.exports=r},function(e,t,o){function r(e){var t=this.__data__,o=n(t,e);return o<0?void 0:t[o][1]}var n=o(34);e.exports=r},function(e,t,o){function r(e){return n(this.__data__,e)>-1}var n=o(34);e.exports=r},function(e,t,o){function r(e,t){var o=this.__data__,r=n(o,e);return r<0?(++this.size,o.push([e,t])):o[r][1]=t,this}var n=o(34);e.exports=r},function(e,t,o){function r(){this.size=0,this.__data__={hash:new n,map:new(a||c),string:new n}}var n=o(162),c=o(33),a=o(53);e.exports=r},function(e,t,o){function r(e){var t=n(this,e).delete(e);return this.size-=t?1:0,t}var n=o(35);e.exports=r},function(e,t,o){function r(e){return n(this,e).get(e)}var n=o(35);e.exports=r},function(e,t,o){function r(e){return n(this,e).has(e)}var n=o(35);e.exports=r},function(e,t,o){function r(e,t){var o=n(this,e),r=o.size;return o.set(e,t),this.size+=o.size==r?0:1,this}var n=o(35);e.exports=r},function(e,t){function o(e){var t=-1,o=Array(e.size);return e.forEach(function(e,r){o[++t]=[r,e]}),o}e.exports=o},function(e,t,o){var r=o(214),n=r(Object.keys,Object);e.exports=n},function(e,t,o){(function(e){var r=o(86),n=\"object\"==typeof t&&t&&!t.nodeType&&t,c=n&&\"object\"==typeof e&&e&&!e.nodeType&&e,a=c&&c.exports===n,s=a&&r.process,i=function(){try{var e=c&&c.require&&c.require(\"util\").types;return e||s&&s.binding&&s.binding(\"util\")}catch(e){}}();e.exports=i}).call(t,o(94)(e))},function(e,t){function o(e){return n.call(e)}var r=Object.prototype,n=r.toString;e.exports=o},function(e,t){function o(e,t){return function(o){return e(t(o))}}e.exports=o},function(e,t){function o(e){return this.__data__.set(e,r),this}var r=\"__lodash_hash_undefined__\";e.exports=o},function(e,t){function o(e){return this.__data__.has(e)}e.exports=o},function(e,t){function o(e){var t=-1,o=Array(e.size);return e.forEach(function(e){o[++t]=e}),o}e.exports=o},function(e,t,o){function r(){this.__data__=new n,this.size=0}var n=o(33);e.exports=r},function(e,t){function o(e){var t=this.__data__,o=t.delete(e);return this.size=t.size,o}e.exports=o},function(e,t){function o(e){return this.__data__.get(e)}e.exports=o},function(e,t){function o(e){return this.__data__.has(e)}e.exports=o},function(e,t,o){function r(e,t){var o=this.__data__;if(o instanceof n){var r=o.__data__;if(!c||r.length<s-1)return r.push([e,t]),this.size=++o.size,this;o=this.__data__=new a(r)}return o.set(e,t),this.size=o.size,this}var n=o(33),c=o(53),a=o(84),s=200;e.exports=r},function(e,t,o){var r=o(174),n=o(22),c=Object.prototype,a=c.hasOwnProperty,s=c.propertyIsEnumerable,i=r(function(){return arguments}())?r:function(e){return n(e)&&a.call(e,\"callee\")&&!s.call(e,\"callee\")};e.exports=i},function(e,t,o){function r(e){return null!=e&&c(e.length)&&!n(e)}var n=o(91),c=o(92);e.exports=r},function(e,t,o){function r(e,t){return n(e,t)}var n=o(175);e.exports=r},function(e,t,o){function r(e){return a(e)?n(e):c(e)}var n=o(170),c=o(179),a=o(224);e.exports=r},function(e,t){function o(){return[]}e.exports=o},function(e,t){function o(){return!1}e.exports=o},function(e,t){function o(){return{}}e.exports=o},function(e,t,o){var r=function(){return this}()||Function(\"return this\")(),n=r.regeneratorRuntime&&Object.getOwnPropertyNames(r).indexOf(\"regeneratorRuntime\")>=0,c=n&&r.regeneratorRuntime;if(r.regeneratorRuntime=void 0,e.exports=o(231),n)r.regeneratorRuntime=c;else try{delete r.regeneratorRuntime}catch(e){r.regeneratorRuntime=void 0}},function(e,t){!function(t){\"use strict\";function o(e,t,o,r){var c=t&&t.prototype instanceof n?t:n,a=Object.create(c.prototype),s=new p(r||[]);return a._invoke=u(e,o,s),a}function r(e,t,o){try{return{type:\"normal\",arg:e.call(t,o)}}catch(e){return{type:\"throw\",arg:e}}}function n(){}function c(){}function a(){}function s(e){[\"next\",\"throw\",\"return\"].forEach(function(t){e[t]=function(e){return this._invoke(t,e)}})}function i(e){function t(o,n,c,a){var s=r(e[o],e,n);if(\"throw\"!==s.type){var i=s.arg,u=i.value;return u&&\"object\"==typeof u&&m.call(u,\"__await\")?Promise.resolve(u.__await).then(function(e){t(\"next\",e,c,a)},function(e){t(\"throw\",e,c,a)}):Promise.resolve(u).then(function(e){i.value=e,c(i)},a)}a(s.arg)}function o(e,o){function r(){return new Promise(function(r,n){t(e,o,r,n)})}return n=n?n.then(r,r):r()}var n;this._invoke=o}function u(e,t,o){var n=x;return function(c,a){if(n===j)throw new Error(\"Generator is already running\");if(n===M){if(\"throw\"===c)throw a;return h()}for(o.method=c,o.arg=a;;){var s=o.delegate;if(s){var i=l(s,o);if(i){if(i===O)continue;return i}}if(\"next\"===o.method)o.sent=o._sent=o.arg;else if(\"throw\"===o.method){if(n===x)throw n=M,o.arg;o.dispatchException(o.arg)}else\"return\"===o.method&&o.abrupt(\"return\",o.arg);n=j;var u=r(e,t,o);if(\"normal\"===u.type){if(n=o.done?M:_,u.arg===O)continue;return{value:u.arg,done:o.done}}\"throw\"===u.type&&(n=M,o.method=\"throw\",o.arg=u.arg)}}}function l(e,t){var o=e.iterator[t.method];if(o===v){if(t.delegate=null,\"throw\"===t.method){if(e.iterator.return&&(t.method=\"return\",t.arg=v,l(e,t),\"throw\"===t.method))return O;t.method=\"throw\",t.arg=new TypeError(\"The iterator does not provide a 'throw' method\")}return O}var n=r(o,e.iterator,t.arg);if(\"throw\"===n.type)return t.method=\"throw\",t.arg=n.arg,t.delegate=null,O;var c=n.arg;return c?c.done?(t[e.resultName]=c.value,t.next=e.nextLoc,\"return\"!==t.method&&(t.method=\"next\",t.arg=v),t.delegate=null,O):c:(t.method=\"throw\",t.arg=new TypeError(\"iterator result is not an object\"),t.delegate=null,O)}function d(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function f(e){var t=e.completion||{};t.type=\"normal\",delete t.arg,e.completion=t}function p(e){this.tryEntries=[{tryLoc:\"root\"}],e.forEach(d,this),this.reset(!0)}function k(e){if(e){var t=e[y];if(t)return t.call(e);if(\"function\"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,r=function t(){for(;++o<e.length;)if(m.call(e,o))return t.value=e[o],t.done=!1,t;return t.value=v,t.done=!0,t};return r.next=r}}return{next:h}}function h(){return{value:v,done:!0}}var v,B=Object.prototype,m=B.hasOwnProperty,w=\"function\"==typeof Symbol?Symbol:{},y=w.iterator||\"@@iterator\",C=w.asyncIterator||\"@@asyncIterator\",P=w.toStringTag||\"@@toStringTag\",b=\"object\"==typeof e,g=t.regeneratorRuntime;if(g)return void(b&&(e.exports=g));g=t.regeneratorRuntime=b?e.exports:{},g.wrap=o;var x=\"suspendedStart\",_=\"suspendedYield\",j=\"executing\",M=\"completed\",O={},L={};L[y]=function(){return this};var S=Object.getPrototypeOf,E=S&&S(S(k([])));E&&E!==B&&m.call(E,y)&&(L=E);var I=a.prototype=n.prototype=Object.create(L);c.prototype=I.constructor=a,a.constructor=c,a[P]=c.displayName=\"GeneratorFunction\",g.isGeneratorFunction=function(e){var t=\"function\"==typeof e&&e.constructor;return!!t&&(t===c||\"GeneratorFunction\"===(t.displayName||t.name))},g.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,a):(e.__proto__=a,P in e||(e[P]=\"GeneratorFunction\")),e.prototype=Object.create(I),e},g.awrap=function(e){return{__await:e}},s(i.prototype),i.prototype[C]=function(){return this},g.AsyncIterator=i,g.async=function(e,t,r,n){var c=new i(o(e,t,r,n));return g.isGeneratorFunction(t)?c:c.next().then(function(e){return e.done?e.value:c.next()})},s(I),I[P]=\"Generator\",I[y]=function(){return this},I.toString=function(){return\"[object Generator]\"},g.keys=function(e){var t=[];for(var o in e)t.push(o);return t.reverse(),function o(){for(;t.length;){var r=t.pop();if(r in e)return o.value=r,o.done=!1,o}return o.done=!0,o}},g.values=k,p.prototype={constructor:p,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=v,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=v,this.tryEntries.forEach(f),!e)for(var t in this)\"t\"===t.charAt(0)&&m.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=v)},stop:function(){this.done=!0;var e=this.tryEntries[0],t=e.completion;if(\"throw\"===t.type)throw t.arg;return this.rval},dispatchException:function(e){function t(t,r){return c.type=\"throw\",c.arg=e,o.next=t,r&&(o.method=\"next\",o.arg=v),!!r}if(this.done)throw e;for(var o=this,r=this.tryEntries.length-1;r>=0;--r){var n=this.tryEntries[r],c=n.completion;if(\"root\"===n.tryLoc)return t(\"end\");if(n.tryLoc<=this.prev){var a=m.call(n,\"catchLoc\"),s=m.call(n,\"finallyLoc\");if(a&&s){if(this.prev<n.catchLoc)return t(n.catchLoc,!0);if(this.prev<n.finallyLoc)return t(n.finallyLoc)}else if(a){if(this.prev<n.catchLoc)return t(n.catchLoc,!0)}else{if(!s)throw new Error(\"try statement without catch or finally\");if(this.prev<n.finallyLoc)return t(n.finallyLoc)}}}},abrupt:function(e,t){for(var o=this.tryEntries.length-1;o>=0;--o){var r=this.tryEntries[o];if(r.tryLoc<=this.prev&&m.call(r,\"finallyLoc\")&&this.prev<r.finallyLoc){var n=r;break}}n&&(\"break\"===e||\"continue\"===e)&&n.tryLoc<=t&&t<=n.finallyLoc&&(n=null);var c=n?n.completion:{};return c.type=e,c.arg=t,n?(this.method=\"next\",this.next=n.finallyLoc,O):this.complete(c)},complete:function(e,t){if(\"throw\"===e.type)throw e.arg;return\"break\"===e.type||\"continue\"===e.type?this.next=e.arg:\"return\"===e.type?(this.rval=this.arg=e.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===e.type&&t&&(this.next=t),O},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var o=this.tryEntries[t];if(o.finallyLoc===e)return this.complete(o.completion,o.afterLoc),f(o),O}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var o=this.tryEntries[t];if(o.tryLoc===e){var r=o.completion;if(\"throw\"===r.type){var n=r.arg;f(o)}return n}}throw new Error(\"illegal catch attempt\")},delegateYield:function(e,t,o){return this.delegate={iterator:k(e),resultName:t,nextLoc:o},\"next\"===this.method&&(this.arg=v),O}}}(function(){return this}()||Function(\"return this\")())},function(e,t){e.exports={render:function(){var e=this,t=e.$createElement,o=e._self._c||t;return o(\"div\",{staticClass:\"qrcode-stream\"},[o(\"div\",{staticClass:\"qrcode-stream__inner-wrapper\"},[o(\"video\",{directives:[{name:\"show\",rawName:\"v-show\",value:e.shouldScan,expression:\"shouldScan\"}],ref:\"video\",staticClass:\"qrcode-stream__camera\",attrs:{autoplay:\"\",muted:\"\",playsinline:\"\"},domProps:{muted:!0}}),e._v(\" \"),o(\"canvas\",{directives:[{name:\"show\",rawName:\"v-show\",value:!e.shouldScan,expression:\"!shouldScan\"}],ref:\"pauseFrame\",staticClass:\"qrcode-stream__pause-frame\"}),e._v(\" \"),o(\"canvas\",{ref:\"trackingLayer\",staticClass:\"qrcode-stream__tracking-layer\"}),e._v(\" \"),o(\"div\",{staticClass:\"qrcode-stream__overlay\"},[e._t(\"default\")],2)])])},staticRenderFns:[]}},function(e,t){e.exports={render:function(){var e=this,t=e.$createElement;return(e._self._c||t)(\"div\",{on:{drop:function(t){t.preventDefault(),t.stopPropagation(),e.onDrop(t)},dragover:function(e){e.preventDefault(),e.stopPropagation()},dragenter:function(e){e.preventDefault(),e.stopPropagation()},dragleave:function(e){e.preventDefault(),e.stopPropagation()}}},[e._t(\"default\")],2)},staticRenderFns:[]}},function(e,t){e.exports={render:function(){var e=this,t=e.$createElement,o=e._self._c||t;return o(\"div\",{staticClass:\"qrcode-reader\"},[o(\"div\",{staticClass:\"qrcode-reader__inner-wrapper\"},[o(\"video\",{directives:[{name:\"show\",rawName:\"v-show\",value:e.shouldScan,expression:\"shouldScan\"}],ref:\"video\",staticClass:\"qrcode-reader__camera\",attrs:{autoplay:\"\",muted:\"\",playsinline:\"\"},domProps:{muted:!0}}),e._v(\" \"),o(\"canvas\",{directives:[{name:\"show\",rawName:\"v-show\",value:!e.shouldScan,expression:\"!shouldScan\"}],ref:\"pauseFrame\",staticClass:\"qrcode-reader__pause-frame\"}),e._v(\" \"),o(\"canvas\",{ref:\"trackingLayer\",staticClass:\"qrcode-reader__tracking-layer\"}),e._v(\" \"),o(\"QrcodeDropZone\",{staticClass:\"qrcode-reader__overlay\",on:{detect:e.onDetect}},[e._t(\"default\")],2)],1)])},staticRenderFns:[]}},function(e,t){e.exports={render:function(){var e=this,t=e.$createElement;return(e._self._c||t)(\"input\",{attrs:{type:\"file\",name:\"image\",accept:\"image/*\",capture:\"environment\",multiple:\"\"},on:{change:e.onChangeInput}})},staticRenderFns:[]}},function(e,t,o){e.exports=function(){return o(237)('!function(o){function e(t){if(r[t])return r[t].exports;var c=r[t]={i:t,l:!1,exports:{}};return o[t].call(c.exports,c,c.exports,e),c.l=!0,c.exports}var r={};e.m=o,e.c=r,e.i=function(o){return o},e.d=function(o,r,t){e.o(o,r)||Object.defineProperty(o,r,{configurable:!1,enumerable:!0,get:t})},e.n=function(o){var r=o&&o.__esModule?function(){return o.default}:function(){return o};return e.d(r,\"a\",r),r},e.o=function(o,e){return Object.prototype.hasOwnProperty.call(o,e)},e.p=\"\",e(e.s=1)}([function(o,e,r){!function(e,r){o.exports=r()}(\"undefined\"!=typeof self&&self,function(){return function(o){function e(t){if(r[t])return r[t].exports;var c=r[t]={i:t,l:!1,exports:{}};return o[t].call(c.exports,c,c.exports,e),c.l=!0,c.exports}var r={};return e.m=o,e.c=r,e.d=function(o,r,t){e.o(o,r)||Object.defineProperty(o,r,{configurable:!1,enumerable:!0,get:t})},e.n=function(o){var r=o&&o.__esModule?function(){return o.default}:function(){return o};return e.d(r,\"a\",r),r},e.o=function(o,e){return Object.prototype.hasOwnProperty.call(o,e)},e.p=\"\",e(e.s=3)}([function(o,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var t=function(){function o(o,e){this.width=e,this.height=o.length/e,this.data=o}return o.createEmpty=function(e,r){return new o(new Uint8ClampedArray(e*r),e)},o.prototype.get=function(o,e){return!(o<0||o>=this.width||e<0||e>=this.height)&&!!this.data[e*this.width+o]},o.prototype.set=function(o,e,r){this.data[e*this.width+o]=r?1:0},o.prototype.setRegion=function(o,e,r,t,c){for(var s=e;s<e+t;s++)for(var a=o;a<o+r;a++)this.set(a,s,!!c)},o.prototype.getInverted=function(){return new o(this.data.map(function(o){return 0===o?1:0}),this.width)},o}();e.BitMatrix=t},function(o,e,r){\"use strict\";function t(o,e){return o^e}Object.defineProperty(e,\"__esModule\",{value:!0});var c=r(2);e.addOrSubtractGF=t;var s=function(){function o(o,e,r){this.primitive=o,this.size=e,this.generatorBase=r,this.expTable=new Array(this.size),this.logTable=new Array(this.size);for(var t=1,s=0;s<this.size;s++)this.expTable[s]=t,(t*=2)>=this.size&&(t=(t^this.primitive)&this.size-1);for(var s=0;s<this.size-1;s++)this.logTable[this.expTable[s]]=s;this.zero=new c.default(this,Uint8ClampedArray.from([0])),this.one=new c.default(this,Uint8ClampedArray.from([1]))}return o.prototype.multiply=function(o,e){return 0===o||0===e?0:this.expTable[(this.logTable[o]+this.logTable[e])%(this.size-1)]},o.prototype.inverse=function(o){if(0===o)throw new Error(\"Can\\'t invert 0\");return this.expTable[this.size-this.logTable[o]-1]},o.prototype.buildMonomial=function(o,e){if(o<0)throw new Error(\"Invalid monomial degree less than 0\");if(0===e)return this.zero;var r=new Uint8ClampedArray(o+1);return r[0]=e,new c.default(this,r)},o.prototype.log=function(o){if(0===o)throw new Error(\"Can\\'t take log(0)\");return this.logTable[o]},o.prototype.exp=function(o){return this.expTable[o]},o}();e.default=s},function(o,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var t=r(1),c=function(){function o(o,e){if(0===e.length)throw new Error(\"No coefficients.\");this.field=o;var r=e.length;if(r>1&&0===e[0]){for(var t=1;t<r&&0===e[t];)t++;if(t===r)this.coefficients=o.zero.coefficients;else{this.coefficients=new Uint8ClampedArray(r-t);for(var c=0;c<this.coefficients.length;c++)this.coefficients[c]=e[t+c]}}else this.coefficients=e}return o.prototype.degree=function(){return this.coefficients.length-1},o.prototype.isZero=function(){return 0===this.coefficients[0]},o.prototype.getCoefficient=function(o){return this.coefficients[this.coefficients.length-1-o]},o.prototype.addOrSubtract=function(e){if(this.isZero())return e;if(e.isZero())return this;var r=this.coefficients,c=e.coefficients;r.length>c.length&&(n=[c,r],r=n[0],c=n[1]);for(var s=new Uint8ClampedArray(c.length),a=c.length-r.length,d=0;d<a;d++)s[d]=c[d];for(var d=a;d<c.length;d++)s[d]=t.addOrSubtractGF(r[d-a],c[d]);return new o(this.field,s);var n},o.prototype.multiply=function(e){if(0===e)return this.field.zero;if(1===e)return this;for(var r=this.coefficients.length,t=new Uint8ClampedArray(r),c=0;c<r;c++)t[c]=this.field.multiply(this.coefficients[c],e);return new o(this.field,t)},o.prototype.multiplyPoly=function(e){if(this.isZero()||e.isZero())return this.field.zero;for(var r=this.coefficients,c=r.length,s=e.coefficients,a=s.length,d=new Uint8ClampedArray(c+a-1),n=0;n<c;n++)for(var l=r[n],i=0;i<a;i++)d[n+i]=t.addOrSubtractGF(d[n+i],this.field.multiply(l,s[i]));return new o(this.field,d)},o.prototype.multiplyByMonomial=function(e,r){if(e<0)throw new Error(\"Invalid degree less than 0\");if(0===r)return this.field.zero;for(var t=this.coefficients.length,c=new Uint8ClampedArray(t+e),s=0;s<t;s++)c[s]=this.field.multiply(this.coefficients[s],r);return new o(this.field,c)},o.prototype.evaluateAt=function(o){var e=0;if(0===o)return this.getCoefficient(0);var r=this.coefficients.length;if(1===o)return this.coefficients.forEach(function(o){e=t.addOrSubtractGF(e,o)}),e;e=this.coefficients[0];for(var c=1;c<r;c++)e=t.addOrSubtractGF(this.field.multiply(o,e),this.coefficients[c]);return e},o}();e.default=c},function(o,e,r){\"use strict\";function t(o){var e=n.locate(o);if(!e)return null;var r=d.extract(o,e),t=a.decode(r.matrix);return t?{binaryData:t.bytes,data:t.text,chunks:t.chunks,location:{topRightCorner:r.mappingFunction(e.dimension,0),topLeftCorner:r.mappingFunction(0,0),bottomRightCorner:r.mappingFunction(e.dimension,e.dimension),bottomLeftCorner:r.mappingFunction(0,e.dimension),topRightFinderPattern:e.topRight,topLeftFinderPattern:e.topLeft,bottomLeftFinderPattern:e.bottomLeft,bottomRightAlignmentPattern:e.alignmentPattern}}:null}function c(o,e,r){var c=s.binarize(o,e,r),a=t(c);return a||(a=t(c.getInverted())),a}Object.defineProperty(e,\"__esModule\",{value:!0});var s=r(4),a=r(5),d=r(11),n=r(12);c.default=c,e.default=c},function(o,e,r){\"use strict\";function t(o,e,r){return o<e?e:o>r?r:o}function c(o,e,r){if(o.length!==e*r*4)throw new Error(\"Malformed data passed to binarizer.\");for(var c=new n(e,r),l=0;l<e;l++)for(var i=0;i<r;i++){var B=o[4*(i*e+l)+0],k=o[4*(i*e+l)+1],u=o[4*(i*e+l)+2];c.set(l,i,.2126*B+.7152*k+.0722*u)}for(var C=Math.ceil(e/a),f=Math.ceil(r/a),m=new n(C,f),w=0;w<f;w++)for(var P=0;P<C;P++){for(var v=0,h=1/0,p=0,i=0;i<a;i++)for(var l=0;l<a;l++){var y=c.get(P*a+l,w*a+i);v+=y,h=Math.min(h,y),p=Math.max(p,y)}var b=v/Math.pow(a,2);if(p-h<=d&&(b=h/2,w>0&&P>0)){var g=(m.get(P,w-1)+2*m.get(P-1,w)+m.get(P-1,w-1))/4;h<g&&(b=g)}m.set(P,w,b)}for(var x=s.BitMatrix.createEmpty(e,r),w=0;w<f;w++)for(var P=0;P<C;P++){for(var M=t(P,2,C-3),L=t(w,2,f-3),v=0,N=-2;N<=2;N++)for(var I=-2;I<=2;I++)v+=m.get(M+N,L+I);for(var O=v/25,l=0;l<a;l++)for(var i=0;i<a;i++){var S=c.get(P*a+l,w*a+i);x.set(P*a+l,w*a+i,S<=O)}}return x}Object.defineProperty(e,\"__esModule\",{value:!0});var s=r(0),a=8,d=24,n=function(){function o(o,e){this.width=o,this.data=new Uint8ClampedArray(o*e)}return o.prototype.get=function(o,e){return this.data[e*this.width+o]},o.prototype.set=function(o,e,r){this.data[e*this.width+o]=r},o}();e.binarize=c},function(o,e,r){\"use strict\";function t(o,e){for(var r=o^e,t=0;r;)t++,r&=r-1;return t}function c(o,e){return e<<1|o}function s(o){var e=17+4*o.versionNumber,r=k.BitMatrix.createEmpty(e,e);r.setRegion(0,0,9,9,!0),r.setRegion(e-8,0,8,9,!0),r.setRegion(0,e-8,9,8,!0);for(var t=0,c=o.alignmentPatternCenters;t<c.length;t++)for(var s=c[t],a=0,d=o.alignmentPatternCenters;a<d.length;a++){var n=d[a];6===s&&6===n||6===s&&n===e-7||s===e-7&&6===n||r.setRegion(s-2,n-2,5,5,!0)}return r.setRegion(6,9,1,e-17,!0),r.setRegion(9,6,e-17,1,!0),o.versionNumber>6&&(r.setRegion(e-11,0,3,6,!0),r.setRegion(0,e-11,6,3,!0)),r}function a(o,e,r){for(var t=w[r.dataMask],a=o.height,d=s(e),n=[],l=0,i=0,B=!0,k=a-1;k>0;k-=2){6===k&&k--;for(var u=0;u<a;u++)for(var C=B?a-1-u:u,f=0;f<2;f++){var m=k-f;if(!d.get(m,C)){i++;var P=o.get(m,C);t({y:C,x:m})&&(P=!P),l=c(P,l),8===i&&(n.push(l),i=0,l=0)}}B=!B}return n}function d(o){var e=o.height,r=Math.floor((e-17)/4);if(r<=6)return f.VERSIONS[r-1];for(var s=0,a=5;a>=0;a--)for(var d=e-9;d>=e-11;d--)s=c(o.get(d,a),s);for(var n=0,d=5;d>=0;d--)for(var a=e-9;a>=e-11;a--)n=c(o.get(d,a),n);for(var l,i=1/0,B=0,k=f.VERSIONS;B<k.length;B++){var u=k[B];if(u.infoBits===s||u.infoBits===n)return u;var C=t(s,u.infoBits);C<i&&(l=u,i=C),C=t(n,u.infoBits),C<i&&(l=u,i=C)}return i<=3?l:void 0}function n(o){for(var e=0,r=0;r<=8;r++)6!==r&&(e=c(o.get(r,8),e));for(var s=7;s>=0;s--)6!==s&&(e=c(o.get(8,s),e));for(var a=o.height,d=0,s=a-1;s>=a-7;s--)d=c(o.get(8,s),d);for(var r=a-8;r<a;r++)d=c(o.get(r,8),d);for(var n=1/0,l=null,i=0,B=m;i<B.length;i++){var k=B[i],u=k.bits,C=k.formatInfo;if(u===e||u===d)return C;var f=t(e,u);f<n&&(l=C,n=f),e!==d&&(f=t(d,u))<n&&(l=C,n=f)}return n<=3?l:null}function l(o,e,r){var t=e.errorCorrectionLevels[r],c=[],s=0;if(t.ecBlocks.forEach(function(o){for(var e=0;e<o.numBlocks;e++)c.push({numDataCodewords:o.dataCodewordsPerBlock,codewords:[]}),s+=o.dataCodewordsPerBlock+t.ecCodewordsPerBlock}),o.length<s)return null;o=o.slice(0,s);for(var a=t.ecBlocks[0].dataCodewordsPerBlock,d=0;d<a;d++)for(var n=0,l=c;n<l.length;n++){var i=l[n];i.codewords.push(o.shift())}if(t.ecBlocks.length>1)for(var B=t.ecBlocks[0].numBlocks,k=t.ecBlocks[1].numBlocks,d=0;d<k;d++)c[B+d].codewords.push(o.shift());for(;o.length>0;)for(var u=0,C=c;u<C.length;u++){var i=C[u];i.codewords.push(o.shift())}return c}function i(o){var e=d(o);if(!e)return null;var r=n(o);if(!r)return null;var t=a(o,e,r),c=l(t,e,r.errorCorrectionLevel);if(!c)return null;for(var s=c.reduce(function(o,e){return o+e.numDataCodewords},0),i=new Uint8ClampedArray(s),B=0,k=0,f=c;k<f.length;k++){var m=f[k],w=C.decode(m.codewords,m.codewords.length-m.numDataCodewords);if(!w)return null;for(var P=0;P<m.numDataCodewords;P++)i[B++]=w[P]}try{return u.decode(i,e.versionNumber)}catch(o){return null}}function B(o){if(null==o)return null;var e=i(o);if(e)return e;for(var r=0;r<o.width;r++)for(var t=r+1;t<o.height;t++)o.get(r,t)!==o.get(t,r)&&(o.set(r,t,!o.get(r,t)),o.set(t,r,!o.get(t,r)));return i(o)}Object.defineProperty(e,\"__esModule\",{value:!0});var k=r(0),u=r(6),C=r(9),f=r(10),m=[{bits:21522,formatInfo:{errorCorrectionLevel:1,dataMask:0}},{bits:20773,formatInfo:{errorCorrectionLevel:1,dataMask:1}},{bits:24188,formatInfo:{errorCorrectionLevel:1,dataMask:2}},{bits:23371,formatInfo:{errorCorrectionLevel:1,dataMask:3}},{bits:17913,formatInfo:{errorCorrectionLevel:1,dataMask:4}},{bits:16590,formatInfo:{errorCorrectionLevel:1,dataMask:5}},{bits:20375,formatInfo:{errorCorrectionLevel:1,dataMask:6}},{bits:19104,formatInfo:{errorCorrectionLevel:1,dataMask:7}},{bits:30660,formatInfo:{errorCorrectionLevel:0,dataMask:0}},{bits:29427,formatInfo:{errorCorrectionLevel:0,dataMask:1}},{bits:32170,formatInfo:{errorCorrectionLevel:0,dataMask:2}},{bits:30877,formatInfo:{errorCorrectionLevel:0,dataMask:3}},{bits:26159,formatInfo:{errorCorrectionLevel:0,dataMask:4}},{bits:25368,formatInfo:{errorCorrectionLevel:0,dataMask:5}},{bits:27713,formatInfo:{errorCorrectionLevel:0,dataMask:6}},{bits:26998,formatInfo:{errorCorrectionLevel:0,dataMask:7}},{bits:5769,formatInfo:{errorCorrectionLevel:3,dataMask:0}},{bits:5054,formatInfo:{errorCorrectionLevel:3,dataMask:1}},{bits:7399,formatInfo:{errorCorrectionLevel:3,dataMask:2}},{bits:6608,formatInfo:{errorCorrectionLevel:3,dataMask:3}},{bits:1890,formatInfo:{errorCorrectionLevel:3,dataMask:4}},{bits:597,formatInfo:{errorCorrectionLevel:3,dataMask:5}},{bits:3340,formatInfo:{errorCorrectionLevel:3,dataMask:6}},{bits:2107,formatInfo:{errorCorrectionLevel:3,dataMask:7}},{bits:13663,formatInfo:{errorCorrectionLevel:2,dataMask:0}},{bits:12392,formatInfo:{errorCorrectionLevel:2,dataMask:1}},{bits:16177,formatInfo:{errorCorrectionLevel:2,dataMask:2}},{bits:14854,formatInfo:{errorCorrectionLevel:2,dataMask:3}},{bits:9396,formatInfo:{errorCorrectionLevel:2,dataMask:4}},{bits:8579,formatInfo:{errorCorrectionLevel:2,dataMask:5}},{bits:11994,formatInfo:{errorCorrectionLevel:2,dataMask:6}},{bits:11245,formatInfo:{errorCorrectionLevel:2,dataMask:7}}],w=[function(o){return(o.y+o.x)%2==0},function(o){return o.y%2==0},function(o){return o.x%3==0},function(o){return(o.y+o.x)%3==0},function(o){return(Math.floor(o.y/2)+Math.floor(o.x/3))%2==0},function(o){return o.x*o.y%2+o.x*o.y%3==0},function(o){return(o.y*o.x%2+o.y*o.x%3)%2==0},function(o){return((o.y+o.x)%2+o.y*o.x%3)%2==0}];e.decode=B},function(o,e,r){\"use strict\";function t(o,e){for(var r=[],t=\"\",c=[10,12,14][e],s=o.readBits(c);s>=3;){var a=o.readBits(10);if(a>=1e3)throw new Error(\"Invalid numeric value above 999\");var d=Math.floor(a/100),n=Math.floor(a/10)%10,l=a%10;r.push(48+d,48+n,48+l),t+=d.toString()+n.toString()+l.toString(),s-=3}if(2===s){var a=o.readBits(7);if(a>=100)throw new Error(\"Invalid numeric value above 99\");var d=Math.floor(a/10),n=a%10;r.push(48+d,48+n),t+=d.toString()+n.toString()}else if(1===s){var a=o.readBits(4);if(a>=10)throw new Error(\"Invalid numeric value above 9\");r.push(48+a),t+=a.toString()}return{bytes:r,text:t}}function c(o,e){for(var r=[],t=\"\",c=[9,11,13][e],s=o.readBits(c);s>=2;){var a=o.readBits(11),d=Math.floor(a/45),n=a%45;r.push(k[d].charCodeAt(0),k[n].charCodeAt(0)),t+=k[d]+k[n],s-=2}if(1===s){var d=o.readBits(6);r.push(k[d].charCodeAt(0)),t+=k[d]}return{bytes:r,text:t}}function s(o,e){for(var r=[],t=\"\",c=[8,16,16][e],s=o.readBits(c),a=0;a<s;a++){var d=o.readBits(8);r.push(d)}try{t+=decodeURIComponent(r.map(function(o){return\"%\"+(\"0\"+o.toString(16)).substr(-2)}).join(\"\"))}catch(o){}return{bytes:r,text:t}}function a(o,e){for(var r=[],t=\"\",c=[8,10,12][e],s=o.readBits(c),a=0;a<s;a++){var d=o.readBits(13),n=Math.floor(d/192)<<8|d%192;n+=n<7936?33088:49472,r.push(n>>8,255&n),t+=String.fromCharCode(i.shiftJISTable[n])}return{bytes:r,text:t}}function d(o,e){for(var r=new l.BitStream(o),d=e<=9?0:e<=26?1:2,i={text:\"\",bytes:[],chunks:[]};r.available()>=4;){var k=r.readBits(4);if(k===B.Terminator)return i;if(k===B.ECI)0===r.readBits(1)?i.chunks.push({type:n.ECI,assignmentNumber:r.readBits(7)}):0===r.readBits(1)?i.chunks.push({type:n.ECI,assignmentNumber:r.readBits(14)}):0===r.readBits(1)?i.chunks.push({type:n.ECI,assignmentNumber:r.readBits(21)}):i.chunks.push({type:n.ECI,assignmentNumber:-1});else if(k===B.Numeric){var u=t(r,d);i.text+=u.text,(w=i.bytes).push.apply(w,u.bytes),i.chunks.push({type:n.Numeric,text:u.text})}else if(k===B.Alphanumeric){var C=c(r,d);i.text+=C.text,(P=i.bytes).push.apply(P,C.bytes),i.chunks.push({type:n.Alphanumeric,text:C.text})}else if(k===B.Byte){var f=s(r,d);i.text+=f.text,(v=i.bytes).push.apply(v,f.bytes),i.chunks.push({type:n.Byte,bytes:f.bytes,text:f.text})}else if(k===B.Kanji){var m=a(r,d);i.text+=m.text,(h=i.bytes).push.apply(h,m.bytes),i.chunks.push({type:n.Kanji,bytes:m.bytes,text:m.text})}}var w,P,v,h}Object.defineProperty(e,\"__esModule\",{value:!0});var n,l=r(7),i=r(8);!function(o){o.Numeric=\"numeric\",o.Alphanumeric=\"alphanumeric\",o.Byte=\"byte\",o.Kanji=\"kanji\",o.ECI=\"eci\"}(n=e.Mode||(e.Mode={}));var B;!function(o){o[o.Terminator=0]=\"Terminator\",o[o.Numeric=1]=\"Numeric\",o[o.Alphanumeric=2]=\"Alphanumeric\",o[o.Byte=4]=\"Byte\",o[o.Kanji=8]=\"Kanji\",o[o.ECI=7]=\"ECI\"}(B||(B={}));var k=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\" \",\"$\",\"%\",\"*\",\"+\",\"-\",\".\",\"/\",\":\"];e.decode=d},function(o,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var t=function(){function o(o){this.byteOffset=0,this.bitOffset=0,this.bytes=o}return o.prototype.readBits=function(o){if(o<1||o>32||o>this.available())throw new Error(\"Cannot read \"+o.toString()+\" bits\");var e=0;if(this.bitOffset>0){var r=8-this.bitOffset,t=o<r?o:r,c=r-t,s=255>>8-t<<c;e=(this.bytes[this.byteOffset]&s)>>c,o-=t,this.bitOffset+=t,8===this.bitOffset&&(this.bitOffset=0,this.byteOffset++)}if(o>0){for(;o>=8;)e=e<<8|255&this.bytes[this.byteOffset],this.byteOffset++,o-=8;if(o>0){var c=8-o,s=255>>c<<c;e=e<<o|(this.bytes[this.byteOffset]&s)>>c,this.bitOffset+=o}}return e},o.prototype.available=function(){return 8*(this.bytes.length-this.byteOffset)-this.bitOffset},o}();e.BitStream=t},function(o,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.shiftJISTable={32:32,33:33,34:34,35:35,36:36,37:37,38:38,39:39,40:40,41:41,42:42,43:43,44:44,45:45,46:46,47:47,48:48,49:49,50:50,51:51,52:52,53:53,54:54,55:55,56:56,57:57,58:58,59:59,60:60,61:61,62:62,63:63,64:64,65:65,66:66,67:67,68:68,69:69,70:70,71:71,72:72,73:73,74:74,75:75,76:76,77:77,78:78,79:79,80:80,81:81,82:82,83:83,84:84,85:85,86:86,87:87,88:88,89:89,90:90,91:91,92:165,93:93,94:94,95:95,96:96,97:97,98:98,99:99,100:100,101:101,102:102,103:103,104:104,105:105,106:106,107:107,108:108,109:109,110:110,111:111,112:112,113:113,114:114,115:115,116:116,117:117,118:118,119:119,120:120,121:121,122:122,123:123,124:124,125:125,126:8254,33088:12288,33089:12289,33090:12290,33091:65292,33092:65294,33093:12539,33094:65306,33095:65307,33096:65311,33097:65281,33098:12443,33099:12444,33100:180,33101:65344,33102:168,33103:65342,33104:65507,33105:65343,33106:12541,33107:12542,33108:12445,33109:12446,33110:12291,33111:20189,33112:12293,33113:12294,33114:12295,33115:12540,33116:8213,33117:8208,33118:65295,33119:92,33120:12316,33121:8214,33122:65372,33123:8230,33124:8229,33125:8216,33126:8217,33127:8220,33128:8221,33129:65288,33130:65289,33131:12308,33132:12309,33133:65339,33134:65341,33135:65371,33136:65373,33137:12296,33138:12297,33139:12298,33140:12299,33141:12300,33142:12301,33143:12302,33144:12303,33145:12304,33146:12305,33147:65291,33148:8722,33149:177,33150:215,33152:247,33153:65309,33154:8800,33155:65308,33156:65310,33157:8806,33158:8807,33159:8734,33160:8756,33161:9794,33162:9792,33163:176,33164:8242,33165:8243,33166:8451,33167:65509,33168:65284,33169:162,33170:163,33171:65285,33172:65283,33173:65286,33174:65290,33175:65312,33176:167,33177:9734,33178:9733,33179:9675,33180:9679,33181:9678,33182:9671,33183:9670,33184:9633,33185:9632,33186:9651,33187:9650,33188:9661,33189:9660,33190:8251,33191:12306,33192:8594,33193:8592,33194:8593,33195:8595,33196:12307,33208:8712,33209:8715,33210:8838,33211:8839,33212:8834,33213:8835,33214:8746,33215:8745,33224:8743,33225:8744,33226:172,33227:8658,33228:8660,33229:8704,33230:8707,33242:8736,33243:8869,33244:8978,33245:8706,33246:8711,33247:8801,33248:8786,33249:8810,33250:8811,33251:8730,33252:8765,33253:8733,33254:8757,33255:8747,33256:8748,33264:8491,33265:8240,33266:9839,33267:9837,33268:9834,33269:8224,33270:8225,33271:182,33276:9711,33359:65296,33360:65297,33361:65298,33362:65299,33363:65300,33364:65301,33365:65302,33366:65303,33367:65304,33368:65305,33376:65313,33377:65314,33378:65315,33379:65316,33380:65317,33381:65318,33382:65319,33383:65320,33384:65321,33385:65322,33386:65323,33387:65324,33388:65325,33389:65326,33390:65327,33391:65328,33392:65329,33393:65330,33394:65331,33395:65332,33396:65333,33397:65334,33398:65335,33399:65336,33400:65337,33401:65338,33409:65345,33410:65346,33411:65347,33412:65348,33413:65349,33414:65350,33415:65351,33416:65352,33417:65353,33418:65354,33419:65355,33420:65356,33421:65357,33422:65358,33423:65359,33424:65360,33425:65361,33426:65362,33427:65363,33428:65364,33429:65365,33430:65366,33431:65367,33432:65368,33433:65369,33434:65370,33439:12353,33440:12354,33441:12355,33442:12356,33443:12357,33444:12358,33445:12359,33446:12360,33447:12361,33448:12362,33449:12363,33450:12364,33451:12365,33452:12366,33453:12367,33454:12368,33455:12369,33456:12370,33457:12371,33458:12372,33459:12373,33460:12374,33461:12375,33462:12376,33463:12377,33464:12378,33465:12379,33466:12380,33467:12381,33468:12382,33469:12383,33470:12384,33471:12385,33472:12386,33473:12387,33474:12388,33475:12389,33476:12390,33477:12391,33478:12392,33479:12393,33480:12394,33481:12395,33482:12396,33483:12397,33484:12398,33485:12399,33486:12400,33487:12401,33488:12402,33489:12403,33490:12404,33491:12405,33492:12406,33493:12407,33494:12408,33495:12409,33496:12410,33497:12411,33498:12412,33499:12413,33500:12414,33501:12415,33502:12416,33503:12417,33504:12418,33505:12419,33506:12420,33507:12421,33508:12422,33509:12423,33510:12424,33511:12425,33512:12426,33513:12427,33514:12428,33515:12429,33516:12430,33517:12431,33518:12432,33519:12433,33520:12434,33521:12435,33600:12449,33601:12450,33602:12451,33603:12452,33604:12453,33605:12454,33606:12455,33607:12456,33608:12457,33609:12458,33610:12459,33611:12460,33612:12461,33613:12462,33614:12463,33615:12464,33616:12465,33617:12466,33618:12467,33619:12468,33620:12469,33621:12470,33622:12471,33623:12472,33624:12473,33625:12474,33626:12475,33627:12476,33628:12477,33629:12478,33630:12479,33631:12480,33632:12481,33633:12482,33634:12483,33635:12484,33636:12485,33637:12486,33638:12487,33639:12488,33640:12489,33641:12490,33642:12491,33643:12492,33644:12493,33645:12494,33646:12495,33647:12496,33648:12497,33649:12498,33650:12499,33651:12500,33652:12501,33653:12502,33654:12503,33655:12504,33656:12505,33657:12506,33658:12507,33659:12508,33660:12509,33661:12510,33662:12511,33664:12512,33665:12513,33666:12514,33667:12515,33668:12516,33669:12517,33670:12518,33671:12519,33672:12520,33673:12521,33674:12522,33675:12523,33676:12524,33677:12525,33678:12526,33679:12527,33680:12528,33681:12529,33682:12530,33683:12531,33684:12532,33685:12533,33686:12534,33695:913,33696:914,33697:915,33698:916,33699:917,33700:918,33701:919,33702:920,33703:921,33704:922,33705:923,33706:924,33707:925,33708:926,33709:927,33710:928,33711:929,33712:931,33713:932,33714:933,33715:934,33716:935,33717:936,33718:937,33727:945,33728:946,33729:947,33730:948,33731:949,33732:950,33733:951,33734:952,33735:953,33736:954,33737:955,33738:956,33739:957,33740:958,33741:959,33742:960,33743:961,33744:963,33745:964,33746:965,33747:966,33748:967,33749:968,33750:969,33856:1040,33857:1041,33858:1042,33859:1043,33860:1044,33861:1045,33862:1025,33863:1046,33864:1047,33865:1048,33866:1049,33867:1050,33868:1051,33869:1052,33870:1053,33871:1054,33872:1055,33873:1056,33874:1057,33875:1058,33876:1059,33877:1060,33878:1061,33879:1062,33880:1063,33881:1064,33882:1065,33883:1066,33884:1067,33885:1068,33886:1069,33887:1070,33888:1071,33904:1072,33905:1073,33906:1074,33907:1075,33908:1076,33909:1077,33910:1105,33911:1078,33912:1079,33913:1080,33914:1081,33915:1082,33916:1083,33917:1084,33918:1085,33920:1086,33921:1087,33922:1088,33923:1089,33924:1090,33925:1091,33926:1092,33927:1093,33928:1094,33929:1095,33930:1096,33931:1097,33932:1098,33933:1099,33934:1100,33935:1101,33936:1102,33937:1103,33951:9472,33952:9474,33953:9484,33954:9488,33955:9496,33956:9492,33957:9500,33958:9516,33959:9508,33960:9524,33961:9532,33962:9473,33963:9475,33964:9487,33965:9491,33966:9499,33967:9495,33968:9507,33969:9523,33970:9515,33971:9531,33972:9547,33973:9504,33974:9519,33975:9512,33976:9527,33977:9535,33978:9501,33979:9520,33980:9509,33981:9528,33982:9538,34975:20124,34976:21782,34977:23043,34978:38463,34979:21696,34980:24859,34981:25384,34982:23030,34983:36898,34984:33909,34985:33564,34986:31312,34987:24746,34988:25569,34989:28197,34990:26093,34991:33894,34992:33446,34993:39925,34994:26771,34995:22311,34996:26017,34997:25201,34998:23451,34999:22992,35e3:34427,35001:39156,35002:32098,35003:32190,35004:39822,35005:25110,35006:31903,35007:34999,35008:23433,35009:24245,35010:25353,35011:26263,35012:26696,35013:38343,35014:38797,35015:26447,35016:20197,35017:20234,35018:20301,35019:20381,35020:20553,35021:22258,35022:22839,35023:22996,35024:23041,35025:23561,35026:24799,35027:24847,35028:24944,35029:26131,35030:26885,35031:28858,35032:30031,35033:30064,35034:31227,35035:32173,35036:32239,35037:32963,35038:33806,35039:34915,35040:35586,35041:36949,35042:36986,35043:21307,35044:20117,35045:20133,35046:22495,35047:32946,35048:37057,35049:30959,35050:19968,35051:22769,35052:28322,35053:36920,35054:31282,35055:33576,35056:33419,35057:39983,35058:20801,35059:21360,35060:21693,35061:21729,35062:22240,35063:23035,35064:24341,35065:39154,35066:28139,35067:32996,35068:34093,35136:38498,35137:38512,35138:38560,35139:38907,35140:21515,35141:21491,35142:23431,35143:28879,35144:32701,35145:36802,35146:38632,35147:21359,35148:40284,35149:31418,35150:19985,35151:30867,35152:33276,35153:28198,35154:22040,35155:21764,35156:27421,35157:34074,35158:39995,35159:23013,35160:21417,35161:28006,35162:29916,35163:38287,35164:22082,35165:20113,35166:36939,35167:38642,35168:33615,35169:39180,35170:21473,35171:21942,35172:23344,35173:24433,35174:26144,35175:26355,35176:26628,35177:27704,35178:27891,35179:27945,35180:29787,35181:30408,35182:31310,35183:38964,35184:33521,35185:34907,35186:35424,35187:37613,35188:28082,35189:30123,35190:30410,35191:39365,35192:24742,35193:35585,35194:36234,35195:38322,35196:27022,35197:21421,35198:20870,35200:22290,35201:22576,35202:22852,35203:23476,35204:24310,35205:24616,35206:25513,35207:25588,35208:27839,35209:28436,35210:28814,35211:28948,35212:29017,35213:29141,35214:29503,35215:32257,35216:33398,35217:33489,35218:34199,35219:36960,35220:37467,35221:40219,35222:22633,35223:26044,35224:27738,35225:29989,35226:20985,35227:22830,35228:22885,35229:24448,35230:24540,35231:25276,35232:26106,35233:27178,35234:27431,35235:27572,35236:29579,35237:32705,35238:35158,35239:40236,35240:40206,35241:40644,35242:23713,35243:27798,35244:33659,35245:20740,35246:23627,35247:25014,35248:33222,35249:26742,35250:29281,35251:20057,35252:20474,35253:21368,35254:24681,35255:28201,35256:31311,35257:38899,35258:19979,35259:21270,35260:20206,35261:20309,35262:20285,35263:20385,35264:20339,35265:21152,35266:21487,35267:22025,35268:22799,35269:23233,35270:23478,35271:23521,35272:31185,35273:26247,35274:26524,35275:26550,35276:27468,35277:27827,35278:28779,35279:29634,35280:31117,35281:31166,35282:31292,35283:31623,35284:33457,35285:33499,35286:33540,35287:33655,35288:33775,35289:33747,35290:34662,35291:35506,35292:22057,35293:36008,35294:36838,35295:36942,35296:38686,35297:34442,35298:20420,35299:23784,35300:25105,35301:29273,35302:30011,35303:33253,35304:33469,35305:34558,35306:36032,35307:38597,35308:39187,35309:39381,35310:20171,35311:20250,35312:35299,35313:22238,35314:22602,35315:22730,35316:24315,35317:24555,35318:24618,35319:24724,35320:24674,35321:25040,35322:25106,35323:25296,35324:25913,35392:39745,35393:26214,35394:26800,35395:28023,35396:28784,35397:30028,35398:30342,35399:32117,35400:33445,35401:34809,35402:38283,35403:38542,35404:35997,35405:20977,35406:21182,35407:22806,35408:21683,35409:23475,35410:23830,35411:24936,35412:27010,35413:28079,35414:30861,35415:33995,35416:34903,35417:35442,35418:37799,35419:39608,35420:28012,35421:39336,35422:34521,35423:22435,35424:26623,35425:34510,35426:37390,35427:21123,35428:22151,35429:21508,35430:24275,35431:25313,35432:25785,35433:26684,35434:26680,35435:27579,35436:29554,35437:30906,35438:31339,35439:35226,35440:35282,35441:36203,35442:36611,35443:37101,35444:38307,35445:38548,35446:38761,35447:23398,35448:23731,35449:27005,35450:38989,35451:38990,35452:25499,35453:31520,35454:27179,35456:27263,35457:26806,35458:39949,35459:28511,35460:21106,35461:21917,35462:24688,35463:25324,35464:27963,35465:28167,35466:28369,35467:33883,35468:35088,35469:36676,35470:19988,35471:39993,35472:21494,35473:26907,35474:27194,35475:38788,35476:26666,35477:20828,35478:31427,35479:33970,35480:37340,35481:37772,35482:22107,35483:40232,35484:26658,35485:33541,35486:33841,35487:31909,35488:21e3,35489:33477,35490:29926,35491:20094,35492:20355,35493:20896,35494:23506,35495:21002,35496:21208,35497:21223,35498:24059,35499:21914,35500:22570,35501:23014,35502:23436,35503:23448,35504:23515,35505:24178,35506:24185,35507:24739,35508:24863,35509:24931,35510:25022,35511:25563,35512:25954,35513:26577,35514:26707,35515:26874,35516:27454,35517:27475,35518:27735,35519:28450,35520:28567,35521:28485,35522:29872,35523:29976,35524:30435,35525:30475,35526:31487,35527:31649,35528:31777,35529:32233,35530:32566,35531:32752,35532:32925,35533:33382,35534:33694,35535:35251,35536:35532,35537:36011,35538:36996,35539:37969,35540:38291,35541:38289,35542:38306,35543:38501,35544:38867,35545:39208,35546:33304,35547:20024,35548:21547,35549:23736,35550:24012,35551:29609,35552:30284,35553:30524,35554:23721,35555:32747,35556:36107,35557:38593,35558:38929,35559:38996,35560:39e3,35561:20225,35562:20238,35563:21361,35564:21916,35565:22120,35566:22522,35567:22855,35568:23305,35569:23492,35570:23696,35571:24076,35572:24190,35573:24524,35574:25582,35575:26426,35576:26071,35577:26082,35578:26399,35579:26827,35580:26820,35648:27231,35649:24112,35650:27589,35651:27671,35652:27773,35653:30079,35654:31048,35655:23395,35656:31232,35657:32e3,35658:24509,35659:35215,35660:35352,35661:36020,35662:36215,35663:36556,35664:36637,35665:39138,35666:39438,35667:39740,35668:20096,35669:20605,35670:20736,35671:22931,35672:23452,35673:25135,35674:25216,35675:25836,35676:27450,35677:29344,35678:30097,35679:31047,35680:32681,35681:34811,35682:35516,35683:35696,35684:25516,35685:33738,35686:38816,35687:21513,35688:21507,35689:21931,35690:26708,35691:27224,35692:35440,35693:30759,35694:26485,35695:40653,35696:21364,35697:23458,35698:33050,35699:34384,35700:36870,35701:19992,35702:20037,35703:20167,35704:20241,35705:21450,35706:21560,35707:23470,35708:24339,35709:24613,35710:25937,35712:26429,35713:27714,35714:27762,35715:27875,35716:28792,35717:29699,35718:31350,35719:31406,35720:31496,35721:32026,35722:31998,35723:32102,35724:26087,35725:29275,35726:21435,35727:23621,35728:24040,35729:25298,35730:25312,35731:25369,35732:28192,35733:34394,35734:35377,35735:36317,35736:37624,35737:28417,35738:31142,35739:39770,35740:20136,35741:20139,35742:20140,35743:20379,35744:20384,35745:20689,35746:20807,35747:31478,35748:20849,35749:20982,35750:21332,35751:21281,35752:21375,35753:21483,35754:21932,35755:22659,35756:23777,35757:24375,35758:24394,35759:24623,35760:24656,35761:24685,35762:25375,35763:25945,35764:27211,35765:27841,35766:29378,35767:29421,35768:30703,35769:33016,35770:33029,35771:33288,35772:34126,35773:37111,35774:37857,35775:38911,35776:39255,35777:39514,35778:20208,35779:20957,35780:23597,35781:26241,35782:26989,35783:23616,35784:26354,35785:26997,35786:29577,35787:26704,35788:31873,35789:20677,35790:21220,35791:22343,35792:24062,35793:37670,35794:26020,35795:27427,35796:27453,35797:29748,35798:31105,35799:31165,35800:31563,35801:32202,35802:33465,35803:33740,35804:34943,35805:35167,35806:35641,35807:36817,35808:37329,35809:21535,35810:37504,35811:20061,35812:20534,35813:21477,35814:21306,35815:29399,35816:29590,35817:30697,35818:33510,35819:36527,35820:39366,35821:39368,35822:39378,35823:20855,35824:24858,35825:34398,35826:21936,35827:31354,35828:20598,35829:23507,35830:36935,35831:38533,35832:20018,35833:27355,35834:37351,35835:23633,35836:23624,35904:25496,35905:31391,35906:27795,35907:38772,35908:36705,35909:31402,35910:29066,35911:38536,35912:31874,35913:26647,35914:32368,35915:26705,35916:37740,35917:21234,35918:21531,35919:34219,35920:35347,35921:32676,35922:36557,35923:37089,35924:21350,35925:34952,35926:31041,35927:20418,35928:20670,35929:21009,35930:20804,35931:21843,35932:22317,35933:29674,35934:22411,35935:22865,35936:24418,35937:24452,35938:24693,35939:24950,35940:24935,35941:25001,35942:25522,35943:25658,35944:25964,35945:26223,35946:26690,35947:28179,35948:30054,35949:31293,35950:31995,35951:32076,35952:32153,35953:32331,35954:32619,35955:33550,35956:33610,35957:34509,35958:35336,35959:35427,35960:35686,35961:36605,35962:38938,35963:40335,35964:33464,35965:36814,35966:39912,35968:21127,35969:25119,35970:25731,35971:28608,35972:38553,35973:26689,35974:20625,35975:27424,35976:27770,35977:28500,35978:31348,35979:32080,35980:34880,35981:35363,35982:26376,35983:20214,35984:20537,35985:20518,35986:20581,35987:20860,35988:21048,35989:21091,35990:21927,35991:22287,35992:22533,35993:23244,35994:24314,35995:25010,35996:25080,35997:25331,35998:25458,35999:26908,36e3:27177,36001:29309,36002:29356,36003:29486,36004:30740,36005:30831,36006:32121,36007:30476,36008:32937,36009:35211,36010:35609,36011:36066,36012:36562,36013:36963,36014:37749,36015:38522,36016:38997,36017:39443,36018:40568,36019:20803,36020:21407,36021:21427,36022:24187,36023:24358,36024:28187,36025:28304,36026:29572,36027:29694,36028:32067,36029:33335,36030:35328,36031:35578,36032:38480,36033:20046,36034:20491,36035:21476,36036:21628,36037:22266,36038:22993,36039:23396,36040:24049,36041:24235,36042:24359,36043:25144,36044:25925,36045:26543,36046:28246,36047:29392,36048:31946,36049:34996,36050:32929,36051:32993,36052:33776,36053:34382,36054:35463,36055:36328,36056:37431,36057:38599,36058:39015,36059:40723,36060:20116,36061:20114,36062:20237,36063:21320,36064:21577,36065:21566,36066:23087,36067:24460,36068:24481,36069:24735,36070:26791,36071:27278,36072:29786,36073:30849,36074:35486,36075:35492,36076:35703,36077:37264,36078:20062,36079:39881,36080:20132,36081:20348,36082:20399,36083:20505,36084:20502,36085:20809,36086:20844,36087:21151,36088:21177,36089:21246,36090:21402,36091:21475,36092:21521,36160:21518,36161:21897,36162:22353,36163:22434,36164:22909,36165:23380,36166:23389,36167:23439,36168:24037,36169:24039,36170:24055,36171:24184,36172:24195,36173:24218,36174:24247,36175:24344,36176:24658,36177:24908,36178:25239,36179:25304,36180:25511,36181:25915,36182:26114,36183:26179,36184:26356,36185:26477,36186:26657,36187:26775,36188:27083,36189:27743,36190:27946,36191:28009,36192:28207,36193:28317,36194:30002,36195:30343,36196:30828,36197:31295,36198:31968,36199:32005,36200:32024,36201:32094,36202:32177,36203:32789,36204:32771,36205:32943,36206:32945,36207:33108,36208:33167,36209:33322,36210:33618,36211:34892,36212:34913,36213:35611,36214:36002,36215:36092,36216:37066,36217:37237,36218:37489,36219:30783,36220:37628,36221:38308,36222:38477,36224:38917,36225:39321,36226:39640,36227:40251,36228:21083,36229:21163,36230:21495,36231:21512,36232:22741,36233:25335,36234:28640,36235:35946,36236:36703,36237:40633,36238:20811,36239:21051,36240:21578,36241:22269,36242:31296,36243:37239,36244:40288,36245:40658,36246:29508,36247:28425,36248:33136,36249:29969,36250:24573,36251:24794,36252:39592,36253:29403,36254:36796,36255:27492,36256:38915,36257:20170,36258:22256,36259:22372,36260:22718,36261:23130,36262:24680,36263:25031,36264:26127,36265:26118,36266:26681,36267:26801,36268:28151,36269:30165,36270:32058,36271:33390,36272:39746,36273:20123,36274:20304,36275:21449,36276:21766,36277:23919,36278:24038,36279:24046,36280:26619,36281:27801,36282:29811,36283:30722,36284:35408,36285:37782,36286:35039,36287:22352,36288:24231,36289:25387,36290:20661,36291:20652,36292:20877,36293:26368,36294:21705,36295:22622,36296:22971,36297:23472,36298:24425,36299:25165,36300:25505,36301:26685,36302:27507,36303:28168,36304:28797,36305:37319,36306:29312,36307:30741,36308:30758,36309:31085,36310:25998,36311:32048,36312:33756,36313:35009,36314:36617,36315:38555,36316:21092,36317:22312,36318:26448,36319:32618,36320:36001,36321:20916,36322:22338,36323:38442,36324:22586,36325:27018,36326:32948,36327:21682,36328:23822,36329:22524,36330:30869,36331:40442,36332:20316,36333:21066,36334:21643,36335:25662,36336:26152,36337:26388,36338:26613,36339:31364,36340:31574,36341:32034,36342:37679,36343:26716,36344:39853,36345:31545,36346:21273,36347:20874,36348:21047,36416:23519,36417:25334,36418:25774,36419:25830,36420:26413,36421:27578,36422:34217,36423:38609,36424:30352,36425:39894,36426:25420,36427:37638,36428:39851,36429:30399,36430:26194,36431:19977,36432:20632,36433:21442,36434:23665,36435:24808,36436:25746,36437:25955,36438:26719,36439:29158,36440:29642,36441:29987,36442:31639,36443:32386,36444:34453,36445:35715,36446:36059,36447:37240,36448:39184,36449:26028,36450:26283,36451:27531,36452:20181,36453:20180,36454:20282,36455:20351,36456:21050,36457:21496,36458:21490,36459:21987,36460:22235,36461:22763,36462:22987,36463:22985,36464:23039,36465:23376,36466:23629,36467:24066,36468:24107,36469:24535,36470:24605,36471:25351,36472:25903,36473:23388,36474:26031,36475:26045,36476:26088,36477:26525,36478:27490,36480:27515,36481:27663,36482:29509,36483:31049,36484:31169,36485:31992,36486:32025,36487:32043,36488:32930,36489:33026,36490:33267,36491:35222,36492:35422,36493:35433,36494:35430,36495:35468,36496:35566,36497:36039,36498:36060,36499:38604,36500:39164,36501:27503,36502:20107,36503:20284,36504:20365,36505:20816,36506:23383,36507:23546,36508:24904,36509:25345,36510:26178,36511:27425,36512:28363,36513:27835,36514:29246,36515:29885,36516:30164,36517:30913,36518:31034,36519:32780,36520:32819,36521:33258,36522:33940,36523:36766,36524:27728,36525:40575,36526:24335,36527:35672,36528:40235,36529:31482,36530:36600,36531:23437,36532:38635,36533:19971,36534:21489,36535:22519,36536:22833,36537:23241,36538:23460,36539:24713,36540:28287,36541:28422,36542:30142,36543:36074,36544:23455,36545:34048,36546:31712,36547:20594,36548:26612,36549:33437,36550:23649,36551:34122,36552:32286,36553:33294,36554:20889,36555:23556,36556:25448,36557:36198,36558:26012,36559:29038,36560:31038,36561:32023,36562:32773,36563:35613,36564:36554,36565:36974,36566:34503,36567:37034,36568:20511,36569:21242,36570:23610,36571:26451,36572:28796,36573:29237,36574:37196,36575:37320,36576:37675,36577:33509,36578:23490,36579:24369,36580:24825,36581:20027,36582:21462,36583:23432,36584:25163,36585:26417,36586:27530,36587:29417,36588:29664,36589:31278,36590:33131,36591:36259,36592:37202,36593:39318,36594:20754,36595:21463,36596:21610,36597:23551,36598:25480,36599:27193,36600:32172,36601:38656,36602:22234,36603:21454,36604:21608,36672:23447,36673:23601,36674:24030,36675:20462,36676:24833,36677:25342,36678:27954,36679:31168,36680:31179,36681:32066,36682:32333,36683:32722,36684:33261,36685:33311,36686:33936,36687:34886,36688:35186,36689:35728,36690:36468,36691:36655,36692:36913,36693:37195,36694:37228,36695:38598,36696:37276,36697:20160,36698:20303,36699:20805,36700:21313,36701:24467,36702:25102,36703:26580,36704:27713,36705:28171,36706:29539,36707:32294,36708:37325,36709:37507,36710:21460,36711:22809,36712:23487,36713:28113,36714:31069,36715:32302,36716:31899,36717:22654,36718:29087,36719:20986,36720:34899,36721:36848,36722:20426,36723:23803,36724:26149,36725:30636,36726:31459,36727:33308,36728:39423,36729:20934,36730:24490,36731:26092,36732:26991,36733:27529,36734:28147,36736:28310,36737:28516,36738:30462,36739:32020,36740:24033,36741:36981,36742:37255,36743:38918,36744:20966,36745:21021,36746:25152,36747:26257,36748:26329,36749:28186,36750:24246,36751:32210,36752:32626,36753:26360,36754:34223,36755:34295,36756:35576,36757:21161,36758:21465,36759:22899,36760:24207,36761:24464,36762:24661,36763:37604,36764:38500,36765:20663,36766:20767,36767:21213,36768:21280,36769:21319,36770:21484,36771:21736,36772:21830,36773:21809,36774:22039,36775:22888,36776:22974,36777:23100,36778:23477,36779:23558,36780:23567,36781:23569,36782:23578,36783:24196,36784:24202,36785:24288,36786:24432,36787:25215,36788:25220,36789:25307,36790:25484,36791:25463,36792:26119,36793:26124,36794:26157,36795:26230,36796:26494,36797:26786,36798:27167,36799:27189,36800:27836,36801:28040,36802:28169,36803:28248,36804:28988,36805:28966,36806:29031,36807:30151,36808:30465,36809:30813,36810:30977,36811:31077,36812:31216,36813:31456,36814:31505,36815:31911,36816:32057,36817:32918,36818:33750,36819:33931,36820:34121,36821:34909,36822:35059,36823:35359,36824:35388,36825:35412,36826:35443,36827:35937,36828:36062,36829:37284,36830:37478,36831:37758,36832:37912,36833:38556,36834:38808,36835:19978,36836:19976,36837:19998,36838:20055,36839:20887,36840:21104,36841:22478,36842:22580,36843:22732,36844:23330,36845:24120,36846:24773,36847:25854,36848:26465,36849:26454,36850:27972,36851:29366,36852:30067,36853:31331,36854:33976,36855:35698,36856:37304,36857:37664,36858:22065,36859:22516,36860:39166,36928:25325,36929:26893,36930:27542,36931:29165,36932:32340,36933:32887,36934:33394,36935:35302,36936:39135,36937:34645,36938:36785,36939:23611,36940:20280,36941:20449,36942:20405,36943:21767,36944:23072,36945:23517,36946:23529,36947:24515,36948:24910,36949:25391,36950:26032,36951:26187,36952:26862,36953:27035,36954:28024,36955:28145,36956:30003,36957:30137,36958:30495,36959:31070,36960:31206,36961:32051,36962:33251,36963:33455,36964:34218,36965:35242,36966:35386,36967:36523,36968:36763,36969:36914,36970:37341,36971:38663,36972:20154,36973:20161,36974:20995,36975:22645,36976:22764,36977:23563,36978:29978,36979:23613,36980:33102,36981:35338,36982:36805,36983:38499,36984:38765,36985:31525,36986:35535,36987:38920,36988:37218,36989:22259,36990:21416,36992:36887,36993:21561,36994:22402,36995:24101,36996:25512,36997:27700,36998:28810,36999:30561,37e3:31883,37001:32736,37002:34928,37003:36930,37004:37204,37005:37648,37006:37656,37007:38543,37008:29790,37009:39620,37010:23815,37011:23913,37012:25968,37013:26530,37014:36264,37015:38619,37016:25454,37017:26441,37018:26905,37019:33733,37020:38935,37021:38592,37022:35070,37023:28548,37024:25722,37025:23544,37026:19990,37027:28716,37028:30045,37029:26159,37030:20932,37031:21046,37032:21218,37033:22995,37034:24449,37035:24615,37036:25104,37037:25919,37038:25972,37039:26143,37040:26228,37041:26866,37042:26646,37043:27491,37044:28165,37045:29298,37046:29983,37047:30427,37048:31934,37049:32854,37050:22768,37051:35069,37052:35199,37053:35488,37054:35475,37055:35531,37056:36893,37057:37266,37058:38738,37059:38745,37060:25993,37061:31246,37062:33030,37063:38587,37064:24109,37065:24796,37066:25114,37067:26021,37068:26132,37069:26512,37070:30707,37071:31309,37072:31821,37073:32318,37074:33034,37075:36012,37076:36196,37077:36321,37078:36447,37079:30889,37080:20999,37081:25305,37082:25509,37083:25666,37084:25240,37085:35373,37086:31363,37087:31680,37088:35500,37089:38634,37090:32118,37091:33292,37092:34633,37093:20185,37094:20808,37095:21315,37096:21344,37097:23459,37098:23554,37099:23574,37100:24029,37101:25126,37102:25159,37103:25776,37104:26643,37105:26676,37106:27849,37107:27973,37108:27927,37109:26579,37110:28508,37111:29006,37112:29053,37113:26059,37114:31359,37115:31661,37116:32218,37184:32330,37185:32680,37186:33146,37187:33307,37188:33337,37189:34214,37190:35438,37191:36046,37192:36341,37193:36984,37194:36983,37195:37549,37196:37521,37197:38275,37198:39854,37199:21069,37200:21892,37201:28472,37202:28982,37203:20840,37204:31109,37205:32341,37206:33203,37207:31950,37208:22092,37209:22609,37210:23720,37211:25514,37212:26366,37213:26365,37214:26970,37215:29401,37216:30095,37217:30094,37218:30990,37219:31062,37220:31199,37221:31895,37222:32032,37223:32068,37224:34311,37225:35380,37226:38459,37227:36961,37228:40736,37229:20711,37230:21109,37231:21452,37232:21474,37233:20489,37234:21930,37235:22766,37236:22863,37237:29245,37238:23435,37239:23652,37240:21277,37241:24803,37242:24819,37243:25436,37244:25475,37245:25407,37246:25531,37248:25805,37249:26089,37250:26361,37251:24035,37252:27085,37253:27133,37254:28437,37255:29157,37256:20105,37257:30185,37258:30456,37259:31379,37260:31967,37261:32207,37262:32156,37263:32865,37264:33609,37265:33624,37266:33900,37267:33980,37268:34299,37269:35013,37270:36208,37271:36865,37272:36973,37273:37783,37274:38684,37275:39442,37276:20687,37277:22679,37278:24974,37279:33235,37280:34101,37281:36104,37282:36896,37283:20419,37284:20596,37285:21063,37286:21363,37287:24687,37288:25417,37289:26463,37290:28204,37291:36275,37292:36895,37293:20439,37294:23646,37295:36042,37296:26063,37297:32154,37298:21330,37299:34966,37300:20854,37301:25539,37302:23384,37303:23403,37304:23562,37305:25613,37306:26449,37307:36956,37308:20182,37309:22810,37310:22826,37311:27760,37312:35409,37313:21822,37314:22549,37315:22949,37316:24816,37317:25171,37318:26561,37319:33333,37320:26965,37321:38464,37322:39364,37323:39464,37324:20307,37325:22534,37326:23550,37327:32784,37328:23729,37329:24111,37330:24453,37331:24608,37332:24907,37333:25140,37334:26367,37335:27888,37336:28382,37337:32974,37338:33151,37339:33492,37340:34955,37341:36024,37342:36864,37343:36910,37344:38538,37345:40667,37346:39899,37347:20195,37348:21488,37349:22823,37350:31532,37351:37261,37352:38988,37353:40441,37354:28381,37355:28711,37356:21331,37357:21828,37358:23429,37359:25176,37360:25246,37361:25299,37362:27810,37363:28655,37364:29730,37365:35351,37366:37944,37367:28609,37368:35582,37369:33592,37370:20967,37371:34552,37372:21482,37440:21481,37441:20294,37442:36948,37443:36784,37444:22890,37445:33073,37446:24061,37447:31466,37448:36799,37449:26842,37450:35895,37451:29432,37452:40008,37453:27197,37454:35504,37455:20025,37456:21336,37457:22022,37458:22374,37459:25285,37460:25506,37461:26086,37462:27470,37463:28129,37464:28251,37465:28845,37466:30701,37467:31471,37468:31658,37469:32187,37470:32829,37471:32966,37472:34507,37473:35477,37474:37723,37475:22243,37476:22727,37477:24382,37478:26029,37479:26262,37480:27264,37481:27573,37482:30007,37483:35527,37484:20516,37485:30693,37486:22320,37487:24347,37488:24677,37489:26234,37490:27744,37491:30196,37492:31258,37493:32622,37494:33268,37495:34584,37496:36933,37497:39347,37498:31689,37499:30044,37500:31481,37501:31569,37502:33988,37504:36880,37505:31209,37506:31378,37507:33590,37508:23265,37509:30528,37510:20013,37511:20210,37512:23449,37513:24544,37514:25277,37515:26172,37516:26609,37517:27880,37518:34411,37519:34935,37520:35387,37521:37198,37522:37619,37523:39376,37524:27159,37525:28710,37526:29482,37527:33511,37528:33879,37529:36015,37530:19969,37531:20806,37532:20939,37533:21899,37534:23541,37535:24086,37536:24115,37537:24193,37538:24340,37539:24373,37540:24427,37541:24500,37542:25074,37543:25361,37544:26274,37545:26397,37546:28526,37547:29266,37548:30010,37549:30522,37550:32884,37551:33081,37552:33144,37553:34678,37554:35519,37555:35548,37556:36229,37557:36339,37558:37530,37559:38263,37560:38914,37561:40165,37562:21189,37563:25431,37564:30452,37565:26389,37566:27784,37567:29645,37568:36035,37569:37806,37570:38515,37571:27941,37572:22684,37573:26894,37574:27084,37575:36861,37576:37786,37577:30171,37578:36890,37579:22618,37580:26626,37581:25524,37582:27131,37583:20291,37584:28460,37585:26584,37586:36795,37587:34086,37588:32180,37589:37716,37590:26943,37591:28528,37592:22378,37593:22775,37594:23340,37595:32044,37596:29226,37597:21514,37598:37347,37599:40372,37600:20141,37601:20302,37602:20572,37603:20597,37604:21059,37605:35998,37606:21576,37607:22564,37608:23450,37609:24093,37610:24213,37611:24237,37612:24311,37613:24351,37614:24716,37615:25269,37616:25402,37617:25552,37618:26799,37619:27712,37620:30855,37621:31118,37622:31243,37623:32224,37624:33351,37625:35330,37626:35558,37627:36420,37628:36883,37696:37048,37697:37165,37698:37336,37699:40718,37700:27877,37701:25688,37702:25826,37703:25973,37704:28404,37705:30340,37706:31515,37707:36969,37708:37841,37709:28346,37710:21746,37711:24505,37712:25764,37713:36685,37714:36845,37715:37444,37716:20856,37717:22635,37718:22825,37719:23637,37720:24215,37721:28155,37722:32399,37723:29980,37724:36028,37725:36578,37726:39003,37727:28857,37728:20253,37729:27583,37730:28593,37731:3e4,37732:38651,37733:20814,37734:21520,37735:22581,37736:22615,37737:22956,37738:23648,37739:24466,37740:26007,37741:26460,37742:28193,37743:30331,37744:33759,37745:36077,37746:36884,37747:37117,37748:37709,37749:30757,37750:30778,37751:21162,37752:24230,37753:22303,37754:22900,37755:24594,37756:20498,37757:20826,37758:20908,37760:20941,37761:20992,37762:21776,37763:22612,37764:22616,37765:22871,37766:23445,37767:23798,37768:23947,37769:24764,37770:25237,37771:25645,37772:26481,37773:26691,37774:26812,37775:26847,37776:30423,37777:28120,37778:28271,37779:28059,37780:28783,37781:29128,37782:24403,37783:30168,37784:31095,37785:31561,37786:31572,37787:31570,37788:31958,37789:32113,37790:21040,37791:33891,37792:34153,37793:34276,37794:35342,37795:35588,37796:35910,37797:36367,37798:36867,37799:36879,37800:37913,37801:38518,37802:38957,37803:39472,37804:38360,37805:20685,37806:21205,37807:21516,37808:22530,37809:23566,37810:24999,37811:25758,37812:27934,37813:30643,37814:31461,37815:33012,37816:33796,37817:36947,37818:37509,37819:23776,37820:40199,37821:21311,37822:24471,37823:24499,37824:28060,37825:29305,37826:30563,37827:31167,37828:31716,37829:27602,37830:29420,37831:35501,37832:26627,37833:27233,37834:20984,37835:31361,37836:26932,37837:23626,37838:40182,37839:33515,37840:23493,37841:37193,37842:28702,37843:22136,37844:23663,37845:24775,37846:25958,37847:27788,37848:35930,37849:36929,37850:38931,37851:21585,37852:26311,37853:37389,37854:22856,37855:37027,37856:20869,37857:20045,37858:20970,37859:34201,37860:35598,37861:28760,37862:25466,37863:37707,37864:26978,37865:39348,37866:32260,37867:30071,37868:21335,37869:26976,37870:36575,37871:38627,37872:27741,37873:20108,37874:23612,37875:24336,37876:36841,37877:21250,37878:36049,37879:32905,37880:34425,37881:24319,37882:26085,37883:20083,37884:20837,37952:22914,37953:23615,37954:38894,37955:20219,37956:22922,37957:24525,37958:35469,37959:28641,37960:31152,37961:31074,37962:23527,37963:33905,37964:29483,37965:29105,37966:24180,37967:24565,37968:25467,37969:25754,37970:29123,37971:31896,37972:20035,37973:24316,37974:20043,37975:22492,37976:22178,37977:24745,37978:28611,37979:32013,37980:33021,37981:33075,37982:33215,37983:36786,37984:35223,37985:34468,37986:24052,37987:25226,37988:25773,37989:35207,37990:26487,37991:27874,37992:27966,37993:29750,37994:30772,37995:23110,37996:32629,37997:33453,37998:39340,37999:20467,38e3:24259,38001:25309,38002:25490,38003:25943,38004:26479,38005:30403,38006:29260,38007:32972,38008:32954,38009:36649,38010:37197,38011:20493,38012:22521,38013:23186,38014:26757,38016:26995,38017:29028,38018:29437,38019:36023,38020:22770,38021:36064,38022:38506,38023:36889,38024:34687,38025:31204,38026:30695,38027:33833,38028:20271,38029:21093,38030:21338,38031:25293,38032:26575,38033:27850,38034:30333,38035:31636,38036:31893,38037:33334,38038:34180,38039:36843,38040:26333,38041:28448,38042:29190,38043:32283,38044:33707,38045:39361,38046:40614,38047:20989,38048:31665,38049:30834,38050:31672,38051:32903,38052:31560,38053:27368,38054:24161,38055:32908,38056:30033,38057:30048,38058:20843,38059:37474,38060:28300,38061:30330,38062:37271,38063:39658,38064:20240,38065:32624,38066:25244,38067:31567,38068:38309,38069:40169,38070:22138,38071:22617,38072:34532,38073:38588,38074:20276,38075:21028,38076:21322,38077:21453,38078:21467,38079:24070,38080:25644,38081:26001,38082:26495,38083:27710,38084:27726,38085:29256,38086:29359,38087:29677,38088:30036,38089:32321,38090:33324,38091:34281,38092:36009,38093:31684,38094:37318,38095:29033,38096:38930,38097:39151,38098:25405,38099:26217,38100:30058,38101:30436,38102:30928,38103:34115,38104:34542,38105:21290,38106:21329,38107:21542,38108:22915,38109:24199,38110:24444,38111:24754,38112:25161,38113:25209,38114:25259,38115:26e3,38116:27604,38117:27852,38118:30130,38119:30382,38120:30865,38121:31192,38122:32203,38123:32631,38124:32933,38125:34987,38126:35513,38127:36027,38128:36991,38129:38750,38130:39131,38131:27147,38132:31800,38133:20633,38134:23614,38135:24494,38136:26503,38137:27608,38138:29749,38139:30473,38140:32654,38208:40763,38209:26570,38210:31255,38211:21305,38212:30091,38213:39661,38214:24422,38215:33181,38216:33777,38217:32920,38218:24380,38219:24517,38220:30050,38221:31558,38222:36924,38223:26727,38224:23019,38225:23195,38226:32016,38227:30334,38228:35628,38229:20469,38230:24426,38231:27161,38232:27703,38233:28418,38234:29922,38235:31080,38236:34920,38237:35413,38238:35961,38239:24287,38240:25551,38241:30149,38242:31186,38243:33495,38244:37672,38245:37618,38246:33948,38247:34541,38248:39981,38249:21697,38250:24428,38251:25996,38252:27996,38253:28693,38254:36007,38255:36051,38256:38971,38257:25935,38258:29942,38259:19981,38260:20184,38261:22496,38262:22827,38263:23142,38264:23500,38265:20904,38266:24067,38267:24220,38268:24598,38269:25206,38270:25975,38272:26023,38273:26222,38274:28014,38275:29238,38276:31526,38277:33104,38278:33178,38279:33433,38280:35676,38281:36e3,38282:36070,38283:36212,38284:38428,38285:38468,38286:20398,38287:25771,38288:27494,38289:33310,38290:33889,38291:34154,38292:37096,38293:23553,38294:26963,38295:39080,38296:33914,38297:34135,38298:20239,38299:21103,38300:24489,38301:24133,38302:26381,38303:31119,38304:33145,38305:35079,38306:35206,38307:28149,38308:24343,38309:25173,38310:27832,38311:20175,38312:29289,38313:39826,38314:20998,38315:21563,38316:22132,38317:22707,38318:24996,38319:25198,38320:28954,38321:22894,38322:31881,38323:31966,38324:32027,38325:38640,38326:25991,38327:32862,38328:19993,38329:20341,38330:20853,38331:22592,38332:24163,38333:24179,38334:24330,38335:26564,38336:20006,38337:34109,38338:38281,38339:38491,38340:31859,38341:38913,38342:20731,38343:22721,38344:30294,38345:30887,38346:21029,38347:30629,38348:34065,38349:31622,38350:20559,38351:22793,38352:29255,38353:31687,38354:32232,38355:36794,38356:36820,38357:36941,38358:20415,38359:21193,38360:23081,38361:24321,38362:38829,38363:20445,38364:33303,38365:37610,38366:22275,38367:25429,38368:27497,38369:29995,38370:35036,38371:36628,38372:31298,38373:21215,38374:22675,38375:24917,38376:25098,38377:26286,38378:27597,38379:31807,38380:33769,38381:20515,38382:20472,38383:21253,38384:21574,38385:22577,38386:22857,38387:23453,38388:23792,38389:23791,38390:23849,38391:24214,38392:25265,38393:25447,38394:25918,38395:26041,38396:26379,38464:27861,38465:27873,38466:28921,38467:30770,38468:32299,38469:32990,38470:33459,38471:33804,38472:34028,38473:34562,38474:35090,38475:35370,38476:35914,38477:37030,38478:37586,38479:39165,38480:40179,38481:40300,38482:20047,38483:20129,38484:20621,38485:21078,38486:22346,38487:22952,38488:24125,38489:24536,38490:24537,38491:25151,38492:26292,38493:26395,38494:26576,38495:26834,38496:20882,38497:32033,38498:32938,38499:33192,38500:35584,38501:35980,38502:36031,38503:37502,38504:38450,38505:21536,38506:38956,38507:21271,38508:20693,38509:21340,38510:22696,38511:25778,38512:26420,38513:29287,38514:30566,38515:31302,38516:37350,38517:21187,38518:27809,38519:27526,38520:22528,38521:24140,38522:22868,38523:26412,38524:32763,38525:20961,38526:30406,38528:25705,38529:30952,38530:39764,38531:40635,38532:22475,38533:22969,38534:26151,38535:26522,38536:27598,38537:21737,38538:27097,38539:24149,38540:33180,38541:26517,38542:39850,38543:26622,38544:40018,38545:26717,38546:20134,38547:20451,38548:21448,38549:25273,38550:26411,38551:27819,38552:36804,38553:20397,38554:32365,38555:40639,38556:19975,38557:24930,38558:28288,38559:28459,38560:34067,38561:21619,38562:26410,38563:39749,38564:24051,38565:31637,38566:23724,38567:23494,38568:34588,38569:28234,38570:34001,38571:31252,38572:33032,38573:22937,38574:31885,38575:27665,38576:30496,38577:21209,38578:22818,38579:28961,38580:29279,38581:30683,38582:38695,38583:40289,38584:26891,38585:23167,38586:23064,38587:20901,38588:21517,38589:21629,38590:26126,38591:30431,38592:36855,38593:37528,38594:40180,38595:23018,38596:29277,38597:28357,38598:20813,38599:26825,38600:32191,38601:32236,38602:38754,38603:40634,38604:25720,38605:27169,38606:33538,38607:22916,38608:23391,38609:27611,38610:29467,38611:30450,38612:32178,38613:32791,38614:33945,38615:20786,38616:26408,38617:40665,38618:30446,38619:26466,38620:21247,38621:39173,38622:23588,38623:25147,38624:31870,38625:36016,38626:21839,38627:24758,38628:32011,38629:38272,38630:21249,38631:20063,38632:20918,38633:22812,38634:29242,38635:32822,38636:37326,38637:24357,38638:30690,38639:21380,38640:24441,38641:32004,38642:34220,38643:35379,38644:36493,38645:38742,38646:26611,38647:34222,38648:37971,38649:24841,38650:24840,38651:27833,38652:30290,38720:35565,38721:36664,38722:21807,38723:20305,38724:20778,38725:21191,38726:21451,38727:23461,38728:24189,38729:24736,38730:24962,38731:25558,38732:26377,38733:26586,38734:28263,38735:28044,38736:29494,38737:29495,38738:30001,38739:31056,38740:35029,38741:35480,38742:36938,38743:37009,38744:37109,38745:38596,38746:34701,38747:22805,38748:20104,38749:20313,38750:19982,38751:35465,38752:36671,38753:38928,38754:20653,38755:24188,38756:22934,38757:23481,38758:24248,38759:25562,38760:25594,38761:25793,38762:26332,38763:26954,38764:27096,38765:27915,38766:28342,38767:29076,38768:29992,38769:31407,38770:32650,38771:32768,38772:33865,38773:33993,38774:35201,38775:35617,38776:36362,38777:36965,38778:38525,38779:39178,38780:24958,38781:25233,38782:27442,38784:27779,38785:28020,38786:32716,38787:32764,38788:28096,38789:32645,38790:34746,38791:35064,38792:26469,38793:33713,38794:38972,38795:38647,38796:27931,38797:32097,38798:33853,38799:37226,38800:20081,38801:21365,38802:23888,38803:27396,38804:28651,38805:34253,38806:34349,38807:35239,38808:21033,38809:21519,38810:23653,38811:26446,38812:26792,38813:29702,38814:29827,38815:30178,38816:35023,38817:35041,38818:37324,38819:38626,38820:38520,38821:24459,38822:29575,38823:31435,38824:33870,38825:25504,38826:30053,38827:21129,38828:27969,38829:28316,38830:29705,38831:30041,38832:30827,38833:31890,38834:38534,38835:31452,38836:40845,38837:20406,38838:24942,38839:26053,38840:34396,38841:20102,38842:20142,38843:20698,38844:20001,38845:20940,38846:23534,38847:26009,38848:26753,38849:28092,38850:29471,38851:30274,38852:30637,38853:31260,38854:31975,38855:33391,38856:35538,38857:36988,38858:37327,38859:38517,38860:38936,38861:21147,38862:32209,38863:20523,38864:21400,38865:26519,38866:28107,38867:29136,38868:29747,38869:33256,38870:36650,38871:38563,38872:40023,38873:40607,38874:29792,38875:22593,38876:28057,38877:32047,38878:39006,38879:20196,38880:20278,38881:20363,38882:20919,38883:21169,38884:23994,38885:24604,38886:29618,38887:31036,38888:33491,38889:37428,38890:38583,38891:38646,38892:38666,38893:40599,38894:40802,38895:26278,38896:27508,38897:21015,38898:21155,38899:28872,38900:35010,38901:24265,38902:24651,38903:24976,38904:28451,38905:29001,38906:31806,38907:32244,38908:32879,38976:34030,38977:36899,38978:37676,38979:21570,38980:39791,38981:27347,38982:28809,38983:36034,38984:36335,38985:38706,38986:21172,38987:23105,38988:24266,38989:24324,38990:26391,38991:27004,38992:27028,38993:28010,38994:28431,38995:29282,38996:29436,38997:31725,38998:32769,38999:32894,39e3:34635,39001:37070,39002:20845,39003:40595,39004:31108,39005:32907,39006:37682,39007:35542,39008:20525,39009:21644,39010:35441,39011:27498,39012:36036,39013:33031,39014:24785,39015:26528,39016:40434,39017:20121,39018:20120,39019:39952,39020:35435,39021:34241,39022:34152,39023:26880,39024:28286,39025:30871,39026:33109,39071:24332,39072:19984,39073:19989,39074:20010,39075:20017,39076:20022,39077:20028,39078:20031,39079:20034,39080:20054,39081:20056,39082:20098,39083:20101,39084:35947,39085:20106,39086:33298,39087:24333,39088:20110,39089:20126,39090:20127,39091:20128,39092:20130,39093:20144,39094:20147,39095:20150,39096:20174,39097:20173,39098:20164,39099:20166,39100:20162,39101:20183,39102:20190,39103:20205,39104:20191,39105:20215,39106:20233,39107:20314,39108:20272,39109:20315,39110:20317,39111:20311,39112:20295,39113:20342,39114:20360,39115:20367,39116:20376,39117:20347,39118:20329,39119:20336,39120:20369,39121:20335,39122:20358,39123:20374,39124:20760,39125:20436,39126:20447,39127:20430,39128:20440,39129:20443,39130:20433,39131:20442,39132:20432,39133:20452,39134:20453,39135:20506,39136:20520,39137:20500,39138:20522,39139:20517,39140:20485,39141:20252,39142:20470,39143:20513,39144:20521,39145:20524,39146:20478,39147:20463,39148:20497,39149:20486,39150:20547,39151:20551,39152:26371,39153:20565,39154:20560,39155:20552,39156:20570,39157:20566,39158:20588,39159:20600,39160:20608,39161:20634,39162:20613,39163:20660,39164:20658,39232:20681,39233:20682,39234:20659,39235:20674,39236:20694,39237:20702,39238:20709,39239:20717,39240:20707,39241:20718,39242:20729,39243:20725,39244:20745,39245:20737,39246:20738,39247:20758,39248:20757,39249:20756,39250:20762,39251:20769,39252:20794,39253:20791,39254:20796,39255:20795,39256:20799,39257:20800,39258:20818,39259:20812,39260:20820,39261:20834,39262:31480,39263:20841,39264:20842,39265:20846,39266:20864,39267:20866,39268:22232,39269:20876,39270:20873,39271:20879,39272:20881,39273:20883,39274:20885,39275:20886,39276:20900,39277:20902,39278:20898,39279:20905,39280:20906,39281:20907,39282:20915,39283:20913,39284:20914,39285:20912,39286:20917,39287:20925,39288:20933,39289:20937,39290:20955,39291:20960,39292:34389,39293:20969,39294:20973,39296:20976,39297:20981,39298:20990,39299:20996,39300:21003,39301:21012,39302:21006,39303:21031,39304:21034,39305:21038,39306:21043,39307:21049,39308:21071,39309:21060,39310:21067,39311:21068,39312:21086,39313:21076,39314:21098,39315:21108,39316:21097,39317:21107,39318:21119,39319:21117,39320:21133,39321:21140,39322:21138,39323:21105,39324:21128,39325:21137,39326:36776,39327:36775,39328:21164,39329:21165,39330:21180,39331:21173,39332:21185,39333:21197,39334:21207,39335:21214,39336:21219,39337:21222,39338:39149,39339:21216,39340:21235,39341:21237,39342:21240,39343:21241,39344:21254,39345:21256,39346:30008,39347:21261,39348:21264,39349:21263,39350:21269,39351:21274,39352:21283,39353:21295,39354:21297,39355:21299,39356:21304,39357:21312,39358:21318,39359:21317,39360:19991,39361:21321,39362:21325,39363:20950,39364:21342,39365:21353,39366:21358,39367:22808,39368:21371,39369:21367,39370:21378,39371:21398,39372:21408,39373:21414,39374:21413,39375:21422,39376:21424,39377:21430,39378:21443,39379:31762,39380:38617,39381:21471,39382:26364,39383:29166,39384:21486,39385:21480,39386:21485,39387:21498,39388:21505,39389:21565,39390:21568,39391:21548,39392:21549,39393:21564,39394:21550,39395:21558,39396:21545,39397:21533,39398:21582,39399:21647,39400:21621,39401:21646,39402:21599,39403:21617,39404:21623,39405:21616,39406:21650,39407:21627,39408:21632,39409:21622,39410:21636,39411:21648,39412:21638,39413:21703,39414:21666,39415:21688,39416:21669,39417:21676,39418:21700,39419:21704,39420:21672,39488:21675,39489:21698,39490:21668,39491:21694,39492:21692,39493:21720,39494:21733,39495:21734,39496:21775,39497:21780,39498:21757,39499:21742,39500:21741,39501:21754,39502:21730,39503:21817,39504:21824,39505:21859,39506:21836,39507:21806,39508:21852,39509:21829,39510:21846,39511:21847,39512:21816,39513:21811,39514:21853,39515:21913,39516:21888,39517:21679,39518:21898,39519:21919,39520:21883,39521:21886,39522:21912,39523:21918,39524:21934,39525:21884,39526:21891,39527:21929,39528:21895,39529:21928,39530:21978,39531:21957,39532:21983,39533:21956,39534:21980,39535:21988,39536:21972,39537:22036,39538:22007,39539:22038,39540:22014,39541:22013,39542:22043,39543:22009,39544:22094,39545:22096,39546:29151,39547:22068,39548:22070,39549:22066,39550:22072,39552:22123,39553:22116,39554:22063,39555:22124,39556:22122,39557:22150,39558:22144,39559:22154,39560:22176,39561:22164,39562:22159,39563:22181,39564:22190,39565:22198,39566:22196,39567:22210,39568:22204,39569:22209,39570:22211,39571:22208,39572:22216,39573:22222,39574:22225,39575:22227,39576:22231,39577:22254,39578:22265,39579:22272,39580:22271,39581:22276,39582:22281,39583:22280,39584:22283,39585:22285,39586:22291,39587:22296,39588:22294,39589:21959,39590:22300,39591:22310,39592:22327,39593:22328,39594:22350,39595:22331,39596:22336,39597:22351,39598:22377,39599:22464,39600:22408,39601:22369,39602:22399,39603:22409,39604:22419,39605:22432,39606:22451,39607:22436,39608:22442,39609:22448,39610:22467,39611:22470,39612:22484,39613:22482,39614:22483,39615:22538,39616:22486,39617:22499,39618:22539,39619:22553,39620:22557,39621:22642,39622:22561,39623:22626,39624:22603,39625:22640,39626:27584,39627:22610,39628:22589,39629:22649,39630:22661,39631:22713,39632:22687,39633:22699,39634:22714,39635:22750,39636:22715,39637:22712,39638:22702,39639:22725,39640:22739,39641:22737,39642:22743,39643:22745,39644:22744,39645:22757,39646:22748,39647:22756,39648:22751,39649:22767,39650:22778,39651:22777,39652:22779,39653:22780,39654:22781,39655:22786,39656:22794,39657:22800,39658:22811,39659:26790,39660:22821,39661:22828,39662:22829,39663:22834,39664:22840,39665:22846,39666:31442,39667:22869,39668:22864,39669:22862,39670:22874,39671:22872,39672:22882,39673:22880,39674:22887,39675:22892,39676:22889,39744:22904,39745:22913,39746:22941,39747:20318,39748:20395,39749:22947,39750:22962,39751:22982,39752:23016,39753:23004,39754:22925,39755:23001,39756:23002,39757:23077,39758:23071,39759:23057,39760:23068,39761:23049,39762:23066,39763:23104,39764:23148,39765:23113,39766:23093,39767:23094,39768:23138,39769:23146,39770:23194,39771:23228,39772:23230,39773:23243,39774:23234,39775:23229,39776:23267,39777:23255,39778:23270,39779:23273,39780:23254,39781:23290,39782:23291,39783:23308,39784:23307,39785:23318,39786:23346,39787:23248,39788:23338,39789:23350,39790:23358,39791:23363,39792:23365,39793:23360,39794:23377,39795:23381,39796:23386,39797:23387,39798:23397,39799:23401,39800:23408,39801:23411,39802:23413,39803:23416,39804:25992,39805:23418,39806:23424,39808:23427,39809:23462,39810:23480,39811:23491,39812:23495,39813:23497,39814:23508,39815:23504,39816:23524,39817:23526,39818:23522,39819:23518,39820:23525,39821:23531,39822:23536,39823:23542,39824:23539,39825:23557,39826:23559,39827:23560,39828:23565,39829:23571,39830:23584,39831:23586,39832:23592,39833:23608,39834:23609,39835:23617,39836:23622,39837:23630,39838:23635,39839:23632,39840:23631,39841:23409,39842:23660,39843:23662,39844:20066,39845:23670,39846:23673,39847:23692,39848:23697,39849:23700,39850:22939,39851:23723,39852:23739,39853:23734,39854:23740,39855:23735,39856:23749,39857:23742,39858:23751,39859:23769,39860:23785,39861:23805,39862:23802,39863:23789,39864:23948,39865:23786,39866:23819,39867:23829,39868:23831,39869:23900,39870:23839,39871:23835,39872:23825,39873:23828,39874:23842,39875:23834,39876:23833,39877:23832,39878:23884,39879:23890,39880:23886,39881:23883,39882:23916,39883:23923,39884:23926,39885:23943,39886:23940,39887:23938,39888:23970,39889:23965,39890:23980,39891:23982,39892:23997,39893:23952,39894:23991,39895:23996,39896:24009,39897:24013,39898:24019,39899:24018,39900:24022,39901:24027,39902:24043,39903:24050,39904:24053,39905:24075,39906:24090,39907:24089,39908:24081,39909:24091,39910:24118,39911:24119,39912:24132,39913:24131,39914:24128,39915:24142,39916:24151,39917:24148,39918:24159,39919:24162,39920:24164,39921:24135,39922:24181,39923:24182,39924:24186,39925:40636,39926:24191,39927:24224,39928:24257,39929:24258,39930:24264,39931:24272,39932:24271,4e4:24278,40001:24291,40002:24285,40003:24282,40004:24283,40005:24290,40006:24289,40007:24296,40008:24297,40009:24300,40010:24305,40011:24307,40012:24304,40013:24308,40014:24312,40015:24318,40016:24323,40017:24329,40018:24413,40019:24412,40020:24331,40021:24337,40022:24342,40023:24361,40024:24365,40025:24376,40026:24385,40027:24392,40028:24396,40029:24398,40030:24367,40031:24401,40032:24406,40033:24407,40034:24409,40035:24417,40036:24429,40037:24435,40038:24439,40039:24451,40040:24450,40041:24447,40042:24458,40043:24456,40044:24465,40045:24455,40046:24478,40047:24473,40048:24472,40049:24480,40050:24488,40051:24493,40052:24508,40053:24534,40054:24571,40055:24548,40056:24568,40057:24561,40058:24541,40059:24755,40060:24575,40061:24609,40062:24672,40064:24601,40065:24592,40066:24617,40067:24590,40068:24625,40069:24603,40070:24597,40071:24619,40072:24614,40073:24591,40074:24634,40075:24666,40076:24641,40077:24682,40078:24695,40079:24671,40080:24650,40081:24646,40082:24653,40083:24675,40084:24643,40085:24676,40086:24642,40087:24684,40088:24683,40089:24665,40090:24705,40091:24717,40092:24807,40093:24707,40094:24730,40095:24708,40096:24731,40097:24726,40098:24727,40099:24722,40100:24743,40101:24715,40102:24801,40103:24760,40104:24800,40105:24787,40106:24756,40107:24560,40108:24765,40109:24774,40110:24757,40111:24792,40112:24909,40113:24853,40114:24838,40115:24822,40116:24823,40117:24832,40118:24820,40119:24826,40120:24835,40121:24865,40122:24827,40123:24817,40124:24845,40125:24846,40126:24903,40127:24894,40128:24872,40129:24871,40130:24906,40131:24895,40132:24892,40133:24876,40134:24884,40135:24893,40136:24898,40137:24900,40138:24947,40139:24951,40140:24920,40141:24921,40142:24922,40143:24939,40144:24948,40145:24943,40146:24933,40147:24945,40148:24927,40149:24925,40150:24915,40151:24949,40152:24985,40153:24982,40154:24967,40155:25004,40156:24980,40157:24986,40158:24970,40159:24977,40160:25003,40161:25006,40162:25036,40163:25034,40164:25033,40165:25079,40166:25032,40167:25027,40168:25030,40169:25018,40170:25035,40171:32633,40172:25037,40173:25062,40174:25059,40175:25078,40176:25082,40177:25076,40178:25087,40179:25085,40180:25084,40181:25086,40182:25088,40183:25096,40184:25097,40185:25101,40186:25100,40187:25108,40188:25115,40256:25118,40257:25121,40258:25130,40259:25134,40260:25136,40261:25138,40262:25139,40263:25153,40264:25166,40265:25182,40266:25187,40267:25179,40268:25184,40269:25192,40270:25212,40271:25218,40272:25225,40273:25214,40274:25234,40275:25235,40276:25238,40277:25300,40278:25219,40279:25236,40280:25303,40281:25297,40282:25275,40283:25295,40284:25343,40285:25286,40286:25812,40287:25288,40288:25308,40289:25292,40290:25290,40291:25282,40292:25287,40293:25243,40294:25289,40295:25356,40296:25326,40297:25329,40298:25383,40299:25346,40300:25352,40301:25327,40302:25333,40303:25424,40304:25406,40305:25421,40306:25628,40307:25423,40308:25494,40309:25486,40310:25472,40311:25515,40312:25462,40313:25507,40314:25487,40315:25481,40316:25503,40317:25525,40318:25451,40320:25449,40321:25534,40322:25577,40323:25536,40324:25542,40325:25571,40326:25545,40327:25554,40328:25590,40329:25540,40330:25622,40331:25652,40332:25606,40333:25619,40334:25638,40335:25654,40336:25885,40337:25623,40338:25640,40339:25615,40340:25703,40341:25711,40342:25718,40343:25678,40344:25898,40345:25749,40346:25747,40347:25765,40348:25769,40349:25736,40350:25788,40351:25818,40352:25810,40353:25797,40354:25799,40355:25787,40356:25816,40357:25794,40358:25841,40359:25831,40360:33289,40361:25824,40362:25825,40363:25260,40364:25827,40365:25839,40366:25900,40367:25846,40368:25844,40369:25842,40370:25850,40371:25856,40372:25853,40373:25880,40374:25884,40375:25861,40376:25892,40377:25891,40378:25899,40379:25908,40380:25909,40381:25911,40382:25910,40383:25912,40384:30027,40385:25928,40386:25942,40387:25941,40388:25933,40389:25944,40390:25950,40391:25949,40392:25970,40393:25976,40394:25986,40395:25987,40396:35722,40397:26011,40398:26015,40399:26027,40400:26039,40401:26051,40402:26054,40403:26049,40404:26052,40405:26060,40406:26066,40407:26075,40408:26073,40409:26080,40410:26081,40411:26097,40412:26482,40413:26122,40414:26115,40415:26107,40416:26483,40417:26165,40418:26166,40419:26164,40420:26140,40421:26191,40422:26180,40423:26185,40424:26177,40425:26206,40426:26205,40427:26212,40428:26215,40429:26216,40430:26207,40431:26210,40432:26224,40433:26243,40434:26248,40435:26254,40436:26249,40437:26244,40438:26264,40439:26269,40440:26305,40441:26297,40442:26313,40443:26302,40444:26300,40512:26308,40513:26296,40514:26326,40515:26330,40516:26336,40517:26175,40518:26342,40519:26345,40520:26352,40521:26357,40522:26359,40523:26383,40524:26390,40525:26398,40526:26406,40527:26407,40528:38712,40529:26414,40530:26431,40531:26422,40532:26433,40533:26424,40534:26423,40535:26438,40536:26462,40537:26464,40538:26457,40539:26467,40540:26468,40541:26505,40542:26480,40543:26537,40544:26492,40545:26474,40546:26508,40547:26507,40548:26534,40549:26529,40550:26501,40551:26551,40552:26607,40553:26548,40554:26604,40555:26547,40556:26601,40557:26552,40558:26596,40559:26590,40560:26589,40561:26594,40562:26606,40563:26553,40564:26574,40565:26566,40566:26599,40567:27292,40568:26654,40569:26694,40570:26665,40571:26688,40572:26701,40573:26674,40574:26702,40576:26803,40577:26667,40578:26713,40579:26723,40580:26743,40581:26751,40582:26783,40583:26767,40584:26797,40585:26772,40586:26781,40587:26779,40588:26755,40589:27310,40590:26809,40591:26740,40592:26805,40593:26784,40594:26810,40595:26895,40596:26765,40597:26750,40598:26881,40599:26826,40600:26888,40601:26840,40602:26914,40603:26918,40604:26849,40605:26892,40606:26829,40607:26836,40608:26855,40609:26837,40610:26934,40611:26898,40612:26884,40613:26839,40614:26851,40615:26917,40616:26873,40617:26848,40618:26863,40619:26920,40620:26922,40621:26906,40622:26915,40623:26913,40624:26822,40625:27001,40626:26999,40627:26972,40628:27e3,40629:26987,40630:26964,40631:27006,40632:26990,40633:26937,40634:26996,40635:26941,40636:26969,40637:26928,40638:26977,40639:26974,40640:26973,40641:27009,40642:26986,40643:27058,40644:27054,40645:27088,40646:27071,40647:27073,40648:27091,40649:27070,40650:27086,40651:23528,40652:27082,40653:27101,40654:27067,40655:27075,40656:27047,40657:27182,40658:27025,40659:27040,40660:27036,40661:27029,40662:27060,40663:27102,40664:27112,40665:27138,40666:27163,40667:27135,40668:27402,40669:27129,40670:27122,40671:27111,40672:27141,40673:27057,40674:27166,40675:27117,40676:27156,40677:27115,40678:27146,40679:27154,40680:27329,40681:27171,40682:27155,40683:27204,40684:27148,40685:27250,40686:27190,40687:27256,40688:27207,40689:27234,40690:27225,40691:27238,40692:27208,40693:27192,40694:27170,40695:27280,40696:27277,40697:27296,40698:27268,40699:27298,40700:27299,40768:27287,40769:34327,40770:27323,40771:27331,40772:27330,40773:27320,40774:27315,40775:27308,40776:27358,40777:27345,40778:27359,40779:27306,40780:27354,40781:27370,40782:27387,40783:27397,40784:34326,40785:27386,40786:27410,40787:27414,40788:39729,40789:27423,40790:27448,40791:27447,40792:30428,40793:27449,40794:39150,40795:27463,40796:27459,40797:27465,40798:27472,40799:27481,40800:27476,40801:27483,40802:27487,40803:27489,40804:27512,40805:27513,40806:27519,40807:27520,40808:27524,40809:27523,40810:27533,40811:27544,40812:27541,40813:27550,40814:27556,40815:27562,40816:27563,40817:27567,40818:27570,40819:27569,40820:27571,40821:27575,40822:27580,40823:27590,40824:27595,40825:27603,40826:27615,40827:27628,40828:27627,40829:27635,40830:27631,40832:40638,40833:27656,40834:27667,40835:27668,40836:27675,40837:27684,40838:27683,40839:27742,40840:27733,40841:27746,40842:27754,40843:27778,40844:27789,40845:27802,40846:27777,40847:27803,40848:27774,40849:27752,40850:27763,40851:27794,40852:27792,40853:27844,40854:27889,40855:27859,40856:27837,40857:27863,40858:27845,40859:27869,40860:27822,40861:27825,40862:27838,40863:27834,40864:27867,40865:27887,40866:27865,40867:27882,40868:27935,40869:34893,40870:27958,40871:27947,40872:27965,40873:27960,40874:27929,40875:27957,40876:27955,40877:27922,40878:27916,40879:28003,40880:28051,40881:28004,40882:27994,40883:28025,40884:27993,40885:28046,40886:28053,40887:28644,40888:28037,40889:28153,40890:28181,40891:28170,40892:28085,40893:28103,40894:28134,40895:28088,40896:28102,40897:28140,40898:28126,40899:28108,40900:28136,40901:28114,40902:28101,40903:28154,40904:28121,40905:28132,40906:28117,40907:28138,40908:28142,40909:28205,40910:28270,40911:28206,40912:28185,40913:28274,40914:28255,40915:28222,40916:28195,40917:28267,40918:28203,40919:28278,40920:28237,40921:28191,40922:28227,40923:28218,40924:28238,40925:28196,40926:28415,40927:28189,40928:28216,40929:28290,40930:28330,40931:28312,40932:28361,40933:28343,40934:28371,40935:28349,40936:28335,40937:28356,40938:28338,40939:28372,40940:28373,40941:28303,40942:28325,40943:28354,40944:28319,40945:28481,40946:28433,40947:28748,40948:28396,40949:28408,40950:28414,40951:28479,40952:28402,40953:28465,40954:28399,40955:28466,40956:28364,161:65377,162:65378,163:65379,164:65380,165:65381,166:65382,167:65383,168:65384,169:65385,170:65386,171:65387,172:65388,173:65389,174:65390,175:65391,176:65392,177:65393,178:65394,179:65395,180:65396,181:65397,182:65398,183:65399,184:65400,185:65401,186:65402,187:65403,188:65404,189:65405,190:65406,191:65407,192:65408,193:65409,194:65410,195:65411,196:65412,197:65413,198:65414,199:65415,200:65416,201:65417,202:65418,203:65419,204:65420,205:65421,206:65422,207:65423,208:65424,209:65425,210:65426,211:65427,212:65428,213:65429,214:65430,215:65431,216:65432,217:65433,218:65434,219:65435,220:65436,221:65437,222:65438,223:65439,57408:28478,57409:28435,57410:28407,57411:28550,57412:28538,57413:28536,57414:28545,57415:28544,57416:28527,57417:28507,57418:28659,57419:28525,57420:28546,57421:28540,57422:28504,57423:28558,57424:28561,57425:28610,57426:28518,57427:28595,57428:28579,57429:28577,57430:28580,57431:28601,57432:28614,57433:28586,57434:28639,57435:28629,57436:28652,57437:28628,57438:28632,57439:28657,57440:28654,57441:28635,57442:28681,57443:28683,57444:28666,57445:28689,57446:28673,57447:28687,57448:28670,57449:28699,57450:28698,57451:28532,57452:28701,57453:28696,57454:28703,57455:28720,57456:28734,57457:28722,57458:28753,57459:28771,57460:28825,57461:28818,57462:28847,57463:28913,57464:28844,57465:28856,57466:28851,57467:28846,57468:28895,57469:28875,57470:28893,57472:28889,57473:28937,57474:28925,57475:28956,57476:28953,57477:29029,57478:29013,57479:29064,57480:29030,57481:29026,57482:29004,57483:29014,57484:29036,57485:29071,57486:29179,57487:29060,57488:29077,57489:29096,57490:29100,57491:29143,57492:29113,57493:29118,57494:29138,57495:29129,57496:29140,57497:29134,57498:29152,57499:29164,57500:29159,57501:29173,57502:29180,57503:29177,57504:29183,57505:29197,57506:29200,57507:29211,57508:29224,57509:29229,57510:29228,57511:29232,57512:29234,57513:29243,57514:29244,57515:29247,57516:29248,57517:29254,57518:29259,57519:29272,57520:29300,57521:29310,57522:29314,57523:29313,57524:29319,57525:29330,57526:29334,57527:29346,57528:29351,57529:29369,57530:29362,57531:29379,57532:29382,57533:29380,57534:29390,57535:29394,57536:29410,57537:29408,57538:29409,57539:29433,57540:29431,57541:20495,57542:29463,57543:29450,57544:29468,57545:29462,57546:29469,57547:29492,57548:29487,57549:29481,57550:29477,57551:29502,57552:29518,57553:29519,57554:40664,57555:29527,57556:29546,57557:29544,57558:29552,57559:29560,57560:29557,57561:29563,57562:29562,57563:29640,57564:29619,57565:29646,57566:29627,57567:29632,57568:29669,57569:29678,57570:29662,57571:29858,57572:29701,57573:29807,57574:29733,57575:29688,57576:29746,57577:29754,57578:29781,57579:29759,57580:29791,57581:29785,57582:29761,57583:29788,57584:29801,57585:29808,57586:29795,57587:29802,57588:29814,57589:29822,57590:29835,57591:29854,57592:29863,57593:29898,57594:29903,57595:29908,57596:29681,57664:29920,57665:29923,57666:29927,57667:29929,57668:29934,57669:29938,57670:29936,57671:29937,57672:29944,57673:29943,57674:29956,57675:29955,57676:29957,57677:29964,57678:29966,57679:29965,57680:29973,57681:29971,57682:29982,57683:29990,57684:29996,57685:30012,57686:30020,57687:30029,57688:30026,57689:30025,57690:30043,57691:30022,57692:30042,57693:30057,57694:30052,57695:30055,57696:30059,57697:30061,57698:30072,57699:30070,57700:30086,57701:30087,57702:30068,57703:30090,57704:30089,57705:30082,57706:30100,57707:30106,57708:30109,57709:30117,57710:30115,57711:30146,57712:30131,57713:30147,57714:30133,57715:30141,57716:30136,57717:30140,57718:30129,57719:30157,57720:30154,57721:30162,57722:30169,57723:30179,57724:30174,57725:30206,57726:30207,57728:30204,57729:30209,57730:30192,57731:30202,57732:30194,57733:30195,57734:30219,57735:30221,57736:30217,57737:30239,57738:30247,57739:30240,57740:30241,57741:30242,57742:30244,57743:30260,57744:30256,57745:30267,57746:30279,57747:30280,57748:30278,57749:30300,57750:30296,57751:30305,57752:30306,57753:30312,57754:30313,57755:30314,57756:30311,57757:30316,57758:30320,57759:30322,57760:30326,57761:30328,57762:30332,57763:30336,57764:30339,57765:30344,57766:30347,57767:30350,57768:30358,57769:30355,57770:30361,57771:30362,57772:30384,57773:30388,57774:30392,57775:30393,57776:30394,57777:30402,57778:30413,57779:30422,57780:30418,57781:30430,57782:30433,57783:30437,57784:30439,57785:30442,57786:34351,57787:30459,57788:30472,57789:30471,57790:30468,57791:30505,57792:30500,57793:30494,57794:30501,57795:30502,57796:30491,57797:30519,57798:30520,57799:30535,57800:30554,57801:30568,57802:30571,57803:30555,57804:30565,57805:30591,57806:30590,57807:30585,57808:30606,57809:30603,57810:30609,57811:30624,57812:30622,57813:30640,57814:30646,57815:30649,57816:30655,57817:30652,57818:30653,57819:30651,57820:30663,57821:30669,57822:30679,57823:30682,57824:30684,57825:30691,57826:30702,57827:30716,57828:30732,57829:30738,57830:31014,57831:30752,57832:31018,57833:30789,57834:30862,57835:30836,57836:30854,57837:30844,57838:30874,57839:30860,57840:30883,57841:30901,57842:30890,57843:30895,57844:30929,57845:30918,57846:30923,57847:30932,57848:30910,57849:30908,57850:30917,57851:30922,57852:30956,57920:30951,57921:30938,57922:30973,57923:30964,57924:30983,57925:30994,57926:30993,57927:31001,57928:31020,57929:31019,57930:31040,57931:31072,57932:31063,57933:31071,57934:31066,57935:31061,57936:31059,57937:31098,57938:31103,57939:31114,57940:31133,57941:31143,57942:40779,57943:31146,57944:31150,57945:31155,57946:31161,57947:31162,57948:31177,57949:31189,57950:31207,57951:31212,57952:31201,57953:31203,57954:31240,57955:31245,57956:31256,57957:31257,57958:31264,57959:31263,57960:31104,57961:31281,57962:31291,57963:31294,57964:31287,57965:31299,57966:31319,57967:31305,57968:31329,57969:31330,57970:31337,57971:40861,57972:31344,57973:31353,57974:31357,57975:31368,57976:31383,57977:31381,57978:31384,57979:31382,57980:31401,57981:31432,57982:31408,57984:31414,57985:31429,57986:31428,57987:31423,57988:36995,57989:31431,57990:31434,57991:31437,57992:31439,57993:31445,57994:31443,57995:31449,57996:31450,57997:31453,57998:31457,57999:31458,58e3:31462,58001:31469,58002:31472,58003:31490,58004:31503,58005:31498,58006:31494,58007:31539,58008:31512,58009:31513,58010:31518,58011:31541,58012:31528,58013:31542,58014:31568,58015:31610,58016:31492,58017:31565,58018:31499,58019:31564,58020:31557,58021:31605,58022:31589,58023:31604,58024:31591,58025:31600,58026:31601,58027:31596,58028:31598,58029:31645,58030:31640,58031:31647,58032:31629,58033:31644,58034:31642,58035:31627,58036:31634,58037:31631,58038:31581,58039:31641,58040:31691,58041:31681,58042:31692,58043:31695,58044:31668,58045:31686,58046:31709,58047:31721,58048:31761,58049:31764,58050:31718,58051:31717,58052:31840,58053:31744,58054:31751,58055:31763,58056:31731,58057:31735,58058:31767,58059:31757,58060:31734,58061:31779,58062:31783,58063:31786,58064:31775,58065:31799,58066:31787,58067:31805,58068:31820,58069:31811,58070:31828,58071:31823,58072:31808,58073:31824,58074:31832,58075:31839,58076:31844,58077:31830,58078:31845,58079:31852,58080:31861,58081:31875,58082:31888,58083:31908,58084:31917,58085:31906,58086:31915,58087:31905,58088:31912,58089:31923,58090:31922,58091:31921,58092:31918,58093:31929,58094:31933,58095:31936,58096:31941,58097:31938,58098:31960,58099:31954,58100:31964,58101:31970,58102:39739,58103:31983,58104:31986,58105:31988,58106:31990,58107:31994,58108:32006,58176:32002,58177:32028,58178:32021,58179:32010,58180:32069,58181:32075,58182:32046,58183:32050,58184:32063,58185:32053,58186:32070,58187:32115,58188:32086,58189:32078,58190:32114,58191:32104,58192:32110,58193:32079,58194:32099,58195:32147,58196:32137,58197:32091,58198:32143,58199:32125,58200:32155,58201:32186,58202:32174,58203:32163,58204:32181,58205:32199,58206:32189,58207:32171,58208:32317,58209:32162,58210:32175,58211:32220,58212:32184,58213:32159,58214:32176,58215:32216,58216:32221,58217:32228,58218:32222,58219:32251,58220:32242,58221:32225,58222:32261,58223:32266,58224:32291,58225:32289,58226:32274,58227:32305,58228:32287,58229:32265,58230:32267,58231:32290,58232:32326,58233:32358,58234:32315,58235:32309,58236:32313,58237:32323,58238:32311,58240:32306,58241:32314,58242:32359,58243:32349,58244:32342,58245:32350,58246:32345,58247:32346,58248:32377,58249:32362,58250:32361,58251:32380,58252:32379,58253:32387,58254:32213,58255:32381,58256:36782,58257:32383,58258:32392,58259:32393,58260:32396,58261:32402,58262:32400,58263:32403,58264:32404,58265:32406,58266:32398,58267:32411,58268:32412,58269:32568,58270:32570,58271:32581,58272:32588,58273:32589,58274:32590,58275:32592,58276:32593,58277:32597,58278:32596,58279:32600,58280:32607,58281:32608,58282:32616,58283:32617,58284:32615,58285:32632,58286:32642,58287:32646,58288:32643,58289:32648,58290:32647,58291:32652,58292:32660,58293:32670,58294:32669,58295:32666,58296:32675,58297:32687,58298:32690,58299:32697,58300:32686,58301:32694,58302:32696,58303:35697,58304:32709,58305:32710,58306:32714,58307:32725,58308:32724,58309:32737,58310:32742,58311:32745,58312:32755,58313:32761,58314:39132,58315:32774,58316:32772,58317:32779,58318:32786,58319:32792,58320:32793,58321:32796,58322:32801,58323:32808,58324:32831,58325:32827,58326:32842,58327:32838,58328:32850,58329:32856,58330:32858,58331:32863,58332:32866,58333:32872,58334:32883,58335:32882,58336:32880,58337:32886,58338:32889,58339:32893,58340:32895,58341:32900,58342:32902,58343:32901,58344:32923,58345:32915,58346:32922,58347:32941,58348:20880,58349:32940,58350:32987,58351:32997,58352:32985,58353:32989,58354:32964,58355:32986,58356:32982,58357:33033,58358:33007,58359:33009,58360:33051,58361:33065,58362:33059,58363:33071,58364:33099,58432:38539,58433:33094,58434:33086,58435:33107,58436:33105,58437:33020,58438:33137,58439:33134,58440:33125,58441:33126,58442:33140,58443:33155,58444:33160,58445:33162,58446:33152,58447:33154,58448:33184,58449:33173,58450:33188,58451:33187,58452:33119,58453:33171,58454:33193,58455:33200,58456:33205,58457:33214,58458:33208,58459:33213,58460:33216,58461:33218,58462:33210,58463:33225,58464:33229,58465:33233,58466:33241,58467:33240,58468:33224,58469:33242,58470:33247,58471:33248,58472:33255,58473:33274,58474:33275,58475:33278,58476:33281,58477:33282,58478:33285,58479:33287,58480:33290,58481:33293,58482:33296,58483:33302,58484:33321,58485:33323,58486:33336,58487:33331,58488:33344,58489:33369,58490:33368,58491:33373,58492:33370,58493:33375,58494:33380,58496:33378,58497:33384,58498:33386,58499:33387,58500:33326,58501:33393,58502:33399,58503:33400,58504:33406,58505:33421,58506:33426,58507:33451,58508:33439,58509:33467,58510:33452,58511:33505,58512:33507,58513:33503,58514:33490,58515:33524,58516:33523,58517:33530,58518:33683,58519:33539,58520:33531,58521:33529,58522:33502,58523:33542,58524:33500,58525:33545,58526:33497,58527:33589,58528:33588,58529:33558,58530:33586,58531:33585,58532:33600,58533:33593,58534:33616,58535:33605,58536:33583,58537:33579,58538:33559,58539:33560,58540:33669,58541:33690,58542:33706,58543:33695,58544:33698,58545:33686,58546:33571,58547:33678,58548:33671,58549:33674,58550:33660,58551:33717,58552:33651,58553:33653,58554:33696,58555:33673,58556:33704,58557:33780,58558:33811,58559:33771,58560:33742,58561:33789,58562:33795,58563:33752,58564:33803,58565:33729,58566:33783,58567:33799,58568:33760,58569:33778,58570:33805,58571:33826,58572:33824,58573:33725,58574:33848,58575:34054,58576:33787,58577:33901,58578:33834,58579:33852,58580:34138,58581:33924,58582:33911,58583:33899,58584:33965,58585:33902,58586:33922,58587:33897,58588:33862,58589:33836,58590:33903,58591:33913,58592:33845,58593:33994,58594:33890,58595:33977,58596:33983,58597:33951,58598:34009,58599:33997,58600:33979,58601:34010,58602:34e3,58603:33985,58604:33990,58605:34006,58606:33953,58607:34081,58608:34047,58609:34036,58610:34071,58611:34072,58612:34092,58613:34079,58614:34069,58615:34068,58616:34044,58617:34112,58618:34147,58619:34136,58620:34120,58688:34113,58689:34306,58690:34123,58691:34133,58692:34176,58693:34212,58694:34184,58695:34193,58696:34186,58697:34216,58698:34157,58699:34196,58700:34203,58701:34282,58702:34183,58703:34204,58704:34167,58705:34174,58706:34192,58707:34249,58708:34234,58709:34255,58710:34233,58711:34256,58712:34261,58713:34269,58714:34277,58715:34268,58716:34297,58717:34314,58718:34323,58719:34315,58720:34302,58721:34298,58722:34310,58723:34338,58724:34330,58725:34352,58726:34367,58727:34381,58728:20053,58729:34388,58730:34399,58731:34407,58732:34417,58733:34451,58734:34467,58735:34473,58736:34474,58737:34443,58738:34444,58739:34486,58740:34479,58741:34500,58742:34502,58743:34480,58744:34505,58745:34851,58746:34475,58747:34516,58748:34526,58749:34537,58750:34540,58752:34527,58753:34523,58754:34543,58755:34578,58756:34566,58757:34568,58758:34560,58759:34563,58760:34555,58761:34577,58762:34569,58763:34573,58764:34553,58765:34570,58766:34612,58767:34623,58768:34615,58769:34619,58770:34597,58771:34601,58772:34586,58773:34656,58774:34655,58775:34680,58776:34636,58777:34638,58778:34676,58779:34647,58780:34664,58781:34670,58782:34649,58783:34643,58784:34659,58785:34666,58786:34821,58787:34722,58788:34719,58789:34690,58790:34735,58791:34763,58792:34749,58793:34752,58794:34768,58795:38614,58796:34731,58797:34756,58798:34739,58799:34759,58800:34758,58801:34747,58802:34799,58803:34802,58804:34784,58805:34831,58806:34829,58807:34814,58808:34806,58809:34807,58810:34830,58811:34770,58812:34833,58813:34838,58814:34837,58815:34850,58816:34849,58817:34865,58818:34870,58819:34873,58820:34855,58821:34875,58822:34884,58823:34882,58824:34898,58825:34905,58826:34910,58827:34914,58828:34923,58829:34945,58830:34942,58831:34974,58832:34933,58833:34941,58834:34997,58835:34930,58836:34946,58837:34967,58838:34962,58839:34990,58840:34969,58841:34978,58842:34957,58843:34980,58844:34992,58845:35007,58846:34993,58847:35011,58848:35012,58849:35028,58850:35032,58851:35033,58852:35037,58853:35065,58854:35074,58855:35068,58856:35060,58857:35048,58858:35058,58859:35076,58860:35084,58861:35082,58862:35091,58863:35139,58864:35102,58865:35109,58866:35114,58867:35115,58868:35137,58869:35140,58870:35131,58871:35126,58872:35128,58873:35148,58874:35101,58875:35168,58876:35166,58944:35174,58945:35172,58946:35181,58947:35178,58948:35183,58949:35188,58950:35191,58951:35198,58952:35203,58953:35208,58954:35210,58955:35219,58956:35224,58957:35233,58958:35241,58959:35238,58960:35244,58961:35247,58962:35250,58963:35258,58964:35261,58965:35263,58966:35264,58967:35290,58968:35292,58969:35293,58970:35303,58971:35316,58972:35320,58973:35331,58974:35350,58975:35344,58976:35340,58977:35355,58978:35357,58979:35365,58980:35382,58981:35393,58982:35419,58983:35410,58984:35398,58985:35400,58986:35452,58987:35437,58988:35436,58989:35426,58990:35461,58991:35458,58992:35460,58993:35496,58994:35489,58995:35473,58996:35493,58997:35494,58998:35482,58999:35491,59e3:35524,59001:35533,59002:35522,59003:35546,59004:35563,59005:35571,59006:35559,59008:35556,59009:35569,59010:35604,59011:35552,59012:35554,59013:35575,59014:35550,59015:35547,59016:35596,59017:35591,59018:35610,59019:35553,59020:35606,59021:35600,59022:35607,59023:35616,59024:35635,59025:38827,59026:35622,59027:35627,59028:35646,59029:35624,59030:35649,59031:35660,59032:35663,59033:35662,59034:35657,59035:35670,59036:35675,59037:35674,59038:35691,59039:35679,59040:35692,59041:35695,59042:35700,59043:35709,59044:35712,59045:35724,59046:35726,59047:35730,59048:35731,59049:35734,59050:35737,59051:35738,59052:35898,59053:35905,59054:35903,59055:35912,59056:35916,59057:35918,59058:35920,59059:35925,59060:35938,59061:35948,59062:35960,59063:35962,59064:35970,59065:35977,59066:35973,59067:35978,59068:35981,59069:35982,59070:35988,59071:35964,59072:35992,59073:25117,59074:36013,59075:36010,59076:36029,59077:36018,59078:36019,59079:36014,59080:36022,59081:36040,59082:36033,59083:36068,59084:36067,59085:36058,59086:36093,59087:36090,59088:36091,59089:36100,59090:36101,59091:36106,59092:36103,59093:36111,59094:36109,59095:36112,59096:40782,59097:36115,59098:36045,59099:36116,59100:36118,59101:36199,59102:36205,59103:36209,59104:36211,59105:36225,59106:36249,59107:36290,59108:36286,59109:36282,59110:36303,59111:36314,59112:36310,59113:36300,59114:36315,59115:36299,59116:36330,59117:36331,59118:36319,59119:36323,59120:36348,59121:36360,59122:36361,59123:36351,59124:36381,59125:36382,59126:36368,59127:36383,59128:36418,59129:36405,59130:36400,59131:36404,59132:36426,59200:36423,59201:36425,59202:36428,59203:36432,59204:36424,59205:36441,59206:36452,59207:36448,59208:36394,59209:36451,59210:36437,59211:36470,59212:36466,59213:36476,59214:36481,59215:36487,59216:36485,59217:36484,59218:36491,59219:36490,59220:36499,59221:36497,59222:36500,59223:36505,59224:36522,59225:36513,59226:36524,59227:36528,59228:36550,59229:36529,59230:36542,59231:36549,59232:36552,59233:36555,59234:36571,59235:36579,59236:36604,59237:36603,59238:36587,59239:36606,59240:36618,59241:36613,59242:36629,59243:36626,59244:36633,59245:36627,59246:36636,59247:36639,59248:36635,59249:36620,59250:36646,59251:36659,59252:36667,59253:36665,59254:36677,59255:36674,59256:36670,59257:36684,59258:36681,59259:36678,59260:36686,59261:36695,59262:36700,59264:36706,59265:36707,59266:36708,59267:36764,59268:36767,59269:36771,59270:36781,59271:36783,59272:36791,59273:36826,59274:36837,59275:36834,59276:36842,59277:36847,59278:36999,59279:36852,59280:36869,59281:36857,59282:36858,59283:36881,59284:36885,59285:36897,59286:36877,59287:36894,59288:36886,59289:36875,59290:36903,59291:36918,59292:36917,59293:36921,59294:36856,59295:36943,59296:36944,59297:36945,59298:36946,59299:36878,59300:36937,59301:36926,59302:36950,59303:36952,59304:36958,59305:36968,59306:36975,59307:36982,59308:38568,59309:36978,59310:36994,59311:36989,59312:36993,59313:36992,59314:37002,59315:37001,59316:37007,59317:37032,59318:37039,59319:37041,59320:37045,59321:37090,59322:37092,59323:25160,59324:37083,59325:37122,59326:37138,59327:37145,59328:37170,59329:37168,59330:37194,59331:37206,59332:37208,59333:37219,59334:37221,59335:37225,59336:37235,59337:37234,59338:37259,59339:37257,59340:37250,59341:37282,59342:37291,59343:37295,59344:37290,59345:37301,59346:37300,59347:37306,59348:37312,59349:37313,59350:37321,59351:37323,59352:37328,59353:37334,59354:37343,59355:37345,59356:37339,59357:37372,59358:37365,59359:37366,59360:37406,59361:37375,59362:37396,59363:37420,59364:37397,59365:37393,59366:37470,59367:37463,59368:37445,59369:37449,59370:37476,59371:37448,59372:37525,59373:37439,59374:37451,59375:37456,59376:37532,59377:37526,59378:37523,59379:37531,59380:37466,59381:37583,59382:37561,59383:37559,59384:37609,59385:37647,59386:37626,59387:37700,59388:37678,59456:37657,59457:37666,59458:37658,59459:37667,59460:37690,59461:37685,59462:37691,59463:37724,59464:37728,59465:37756,59466:37742,59467:37718,59468:37808,59469:37804,59470:37805,59471:37780,59472:37817,59473:37846,59474:37847,59475:37864,59476:37861,59477:37848,59478:37827,59479:37853,59480:37840,59481:37832,59482:37860,59483:37914,59484:37908,59485:37907,59486:37891,59487:37895,59488:37904,59489:37942,59490:37931,59491:37941,59492:37921,59493:37946,59494:37953,59495:37970,59496:37956,59497:37979,59498:37984,59499:37986,59500:37982,59501:37994,59502:37417,59503:38e3,59504:38005,59505:38007,59506:38013,59507:37978,59508:38012,59509:38014,59510:38017,59511:38015,59512:38274,59513:38279,59514:38282,59515:38292,59516:38294,59517:38296,59518:38297,59520:38304,59521:38312,59522:38311,59523:38317,59524:38332,59525:38331,59526:38329,59527:38334,59528:38346,59529:28662,59530:38339,59531:38349,59532:38348,59533:38357,59534:38356,59535:38358,59536:38364,59537:38369,59538:38373,59539:38370,59540:38433,59541:38440,59542:38446,59543:38447,59544:38466,59545:38476,59546:38479,59547:38475,59548:38519,59549:38492,59550:38494,59551:38493,59552:38495,59553:38502,59554:38514,59555:38508,59556:38541,59557:38552,59558:38549,59559:38551,59560:38570,59561:38567,59562:38577,59563:38578,59564:38576,59565:38580,59566:38582,59567:38584,59568:38585,59569:38606,59570:38603,59571:38601,59572:38605,59573:35149,59574:38620,59575:38669,59576:38613,59577:38649,59578:38660,59579:38662,59580:38664,59581:38675,59582:38670,59583:38673,59584:38671,59585:38678,59586:38681,59587:38692,59588:38698,59589:38704,59590:38713,59591:38717,59592:38718,59593:38724,59594:38726,59595:38728,59596:38722,59597:38729,59598:38748,59599:38752,59600:38756,59601:38758,59602:38760,59603:21202,59604:38763,59605:38769,59606:38777,59607:38789,59608:38780,59609:38785,59610:38778,59611:38790,59612:38795,59613:38799,59614:38800,59615:38812,59616:38824,59617:38822,59618:38819,59619:38835,59620:38836,59621:38851,59622:38854,59623:38856,59624:38859,59625:38876,59626:38893,59627:40783,59628:38898,59629:31455,59630:38902,59631:38901,59632:38927,59633:38924,59634:38968,59635:38948,59636:38945,59637:38967,59638:38973,59639:38982,59640:38991,59641:38987,59642:39019,59643:39023,59644:39024,59712:39025,59713:39028,59714:39027,59715:39082,59716:39087,59717:39089,59718:39094,59719:39108,59720:39107,59721:39110,59722:39145,59723:39147,59724:39171,59725:39177,59726:39186,59727:39188,59728:39192,59729:39201,59730:39197,59731:39198,59732:39204,59733:39200,59734:39212,59735:39214,59736:39229,59737:39230,59738:39234,59739:39241,59740:39237,59741:39248,59742:39243,59743:39249,59744:39250,59745:39244,59746:39253,59747:39319,59748:39320,59749:39333,59750:39341,59751:39342,59752:39356,59753:39391,59754:39387,59755:39389,59756:39384,59757:39377,59758:39405,59759:39406,59760:39409,59761:39410,59762:39419,59763:39416,59764:39425,59765:39439,59766:39429,59767:39394,59768:39449,59769:39467,59770:39479,59771:39493,59772:39490,59773:39488,59774:39491,59776:39486,59777:39509,59778:39501,59779:39515,59780:39511,59781:39519,59782:39522,59783:39525,59784:39524,59785:39529,59786:39531,59787:39530,59788:39597,59789:39600,59790:39612,59791:39616,59792:39631,59793:39633,59794:39635,59795:39636,59796:39646,59797:39647,59798:39650,59799:39651,59800:39654,59801:39663,59802:39659,59803:39662,59804:39668,59805:39665,59806:39671,59807:39675,59808:39686,59809:39704,59810:39706,59811:39711,59812:39714,59813:39715,59814:39717,59815:39719,59816:39720,59817:39721,59818:39722,59819:39726,59820:39727,59821:39730,59822:39748,59823:39747,59824:39759,59825:39757,59826:39758,59827:39761,59828:39768,59829:39796,59830:39827,59831:39811,59832:39825,59833:39830,59834:39831,59835:39839,59836:39840,59837:39848,59838:39860,59839:39872,59840:39882,59841:39865,59842:39878,59843:39887,59844:39889,59845:39890,59846:39907,59847:39906,59848:39908,59849:39892,59850:39905,59851:39994,59852:39922,59853:39921,59854:39920,59855:39957,59856:39956,59857:39945,59858:39955,59859:39948,59860:39942,59861:39944,59862:39954,59863:39946,59864:39940,59865:39982,59866:39963,59867:39973,59868:39972,59869:39969,59870:39984,59871:40007,59872:39986,59873:40006,59874:39998,59875:40026,59876:40032,59877:40039,59878:40054,59879:40056,59880:40167,59881:40172,59882:40176,59883:40201,59884:40200,59885:40171,59886:40195,59887:40198,59888:40234,59889:40230,59890:40367,59891:40227,59892:40223,59893:40260,59894:40213,59895:40210,59896:40257,59897:40255,59898:40254,59899:40262,59900:40264,59968:40285,59969:40286,59970:40292,59971:40273,59972:40272,59973:40281,59974:40306,59975:40329,59976:40327,59977:40363,59978:40303,59979:40314,59980:40346,59981:40356,59982:40361,59983:40370,59984:40388,59985:40385,59986:40379,59987:40376,59988:40378,59989:40390,59990:40399,59991:40386,59992:40409,59993:40403,59994:40440,59995:40422,59996:40429,59997:40431,59998:40445,59999:40474,6e4:40475,60001:40478,60002:40565,60003:40569,60004:40573,60005:40577,60006:40584,60007:40587,60008:40588,60009:40594,60010:40597,60011:40593,60012:40605,60013:40613,60014:40617,60015:40632,60016:40618,60017:40621,60018:38753,60019:40652,60020:40654,60021:40655,60022:40656,60023:40660,60024:40668,60025:40670,60026:40669,60027:40672,60028:40677,60029:40680,60030:40687,60032:40692,60033:40694,60034:40695,60035:40697,60036:40699,60037:40700,60038:40701,60039:40711,60040:40712,60041:30391,60042:40725,60043:40737,60044:40748,60045:40766,60046:40778,60047:40786,60048:40788,60049:40803,60050:40799,60051:40800,60052:40801,60053:40806,60054:40807,60055:40812,60056:40810,60057:40823,60058:40818,60059:40822,60060:40853,60061:40860,60062:40864,60063:22575,60064:27079,60065:36953,60066:29796,60067:20956,60068:29081}},function(o,e,r){\"use strict\";function t(o,e,r,t){e.degree()<r.degree()&&(w=[r,e],e=w[0],r=w[1]);for(var c=e,s=r,a=o.zero,d=o.one;s.degree()>=t/2;){var n=c,l=a;if(c=s,a=d,c.isZero())return null;s=n;for(var i=o.zero,B=c.getCoefficient(c.degree()),k=o.inverse(B);s.degree()>=c.degree()&&!s.isZero();){var u=s.degree()-c.degree(),C=o.multiply(s.getCoefficient(s.degree()),k);i=i.addOrSubtract(o.buildMonomial(u,C)),s=s.addOrSubtract(c.multiplyByMonomial(u,C))}if(d=i.multiplyPoly(a).addOrSubtract(l),s.degree()>=c.degree())return null}var f=d.getCoefficient(0);if(0===f)return null;var m=o.inverse(f);return[d.multiply(m),s.multiply(m)];var w}function c(o,e){var r=e.degree();if(1===r)return[e.getCoefficient(1)];for(var t=new Array(r),c=0,s=1;s<o.size&&c<r;s++)0===e.evaluateAt(s)&&(t[c]=o.inverse(s),c++);return c!==r?null:t}function s(o,e,r){for(var t=r.length,c=new Array(t),s=0;s<t;s++){for(var a=o.inverse(r[s]),n=1,l=0;l<t;l++)s!==l&&(n=o.multiply(n,d.addOrSubtractGF(1,o.multiply(r[l],a))));c[s]=o.multiply(e.evaluateAt(a),o.inverse(n)),0!==o.generatorBase&&(c[s]=o.multiply(c[s],a))}return c}function a(o,e){var r=new Uint8ClampedArray(o.length);r.set(o);for(var a=new d.default(285,256,0),l=new n.default(a,r),i=new Uint8ClampedArray(e),B=!1,k=0;k<e;k++){var u=l.evaluateAt(a.exp(k+a.generatorBase));i[i.length-1-k]=u,0!==u&&(B=!0)}if(!B)return r;var C=new n.default(a,i),f=t(a,a.buildMonomial(e,1),C,e);if(null===f)return null;var m=c(a,f[0]);if(null==m)return null;for(var w=s(a,f[1],m),P=0;P<m.length;P++){var v=r.length-1-a.log(m[P]);if(v<0)return null;r[v]=d.addOrSubtractGF(r[v],w[P])}return r}Object.defineProperty(e,\"__esModule\",{value:!0});var d=r(1),n=r(2);e.decode=a},function(o,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.VERSIONS=[{infoBits:null,versionNumber:1,alignmentPatternCenters:[],errorCorrectionLevels:[{ecCodewordsPerBlock:7,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:19}]},{ecCodewordsPerBlock:10,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:16}]},{ecCodewordsPerBlock:13,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:13}]},{ecCodewordsPerBlock:17,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:9}]}]},{infoBits:null,versionNumber:2,alignmentPatternCenters:[6,18],errorCorrectionLevels:[{ecCodewordsPerBlock:10,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:34}]},{ecCodewordsPerBlock:16,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:28}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:22}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:16}]}]},{infoBits:null,versionNumber:3,alignmentPatternCenters:[6,22],errorCorrectionLevels:[{ecCodewordsPerBlock:15,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:55}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:44}]},{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:17}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:13}]}]},{infoBits:null,versionNumber:4,alignmentPatternCenters:[6,26],errorCorrectionLevels:[{ecCodewordsPerBlock:20,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:80}]},{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:32}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:24}]},{ecCodewordsPerBlock:16,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:9}]}]},{infoBits:null,versionNumber:5,alignmentPatternCenters:[6,30],errorCorrectionLevels:[{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:108}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:43}]},{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:15},{numBlocks:2,dataCodewordsPerBlock:16}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:11},{numBlocks:2,dataCodewordsPerBlock:12}]}]},{infoBits:null,versionNumber:6,alignmentPatternCenters:[6,34],errorCorrectionLevels:[{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:68}]},{ecCodewordsPerBlock:16,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:27}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:19}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:15}]}]},{infoBits:31892,versionNumber:7,alignmentPatternCenters:[6,22,38],errorCorrectionLevels:[{ecCodewordsPerBlock:20,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:78}]},{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:31}]},{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:14},{numBlocks:4,dataCodewordsPerBlock:15}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:13},{numBlocks:1,dataCodewordsPerBlock:14}]}]},{infoBits:34236,versionNumber:8,alignmentPatternCenters:[6,24,42],errorCorrectionLevels:[{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:97}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:38},{numBlocks:2,dataCodewordsPerBlock:39}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:18},{numBlocks:2,dataCodewordsPerBlock:19}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:14},{numBlocks:2,dataCodewordsPerBlock:15}]}]},{infoBits:39577,versionNumber:9,alignmentPatternCenters:[6,26,46],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:36},{numBlocks:2,dataCodewordsPerBlock:37}]},{ecCodewordsPerBlock:20,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:16},{numBlocks:4,dataCodewordsPerBlock:17}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:12},{numBlocks:4,dataCodewordsPerBlock:13}]}]},{infoBits:42195,versionNumber:10,alignmentPatternCenters:[6,28,50],errorCorrectionLevels:[{ecCodewordsPerBlock:18,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:68},{numBlocks:2,dataCodewordsPerBlock:69}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:43},{numBlocks:1,dataCodewordsPerBlock:44}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:19},{numBlocks:2,dataCodewordsPerBlock:20}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:15},{numBlocks:2,dataCodewordsPerBlock:16}]}]},{infoBits:48118,versionNumber:11,alignmentPatternCenters:[6,30,54],errorCorrectionLevels:[{ecCodewordsPerBlock:20,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:81}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:50},{numBlocks:4,dataCodewordsPerBlock:51}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:22},{numBlocks:4,dataCodewordsPerBlock:23}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:12},{numBlocks:8,dataCodewordsPerBlock:13}]}]},{infoBits:51042,versionNumber:12,alignmentPatternCenters:[6,32,58],errorCorrectionLevels:[{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:92},{numBlocks:2,dataCodewordsPerBlock:93}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:36},{numBlocks:2,dataCodewordsPerBlock:37}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:20},{numBlocks:6,dataCodewordsPerBlock:21}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:7,dataCodewordsPerBlock:14},{numBlocks:4,dataCodewordsPerBlock:15}]}]},{infoBits:55367,versionNumber:13,alignmentPatternCenters:[6,34,62],errorCorrectionLevels:[{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:107}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:37},{numBlocks:1,dataCodewordsPerBlock:38}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:20},{numBlocks:4,dataCodewordsPerBlock:21}]},{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:12,dataCodewordsPerBlock:11},{numBlocks:4,dataCodewordsPerBlock:12}]}]},{infoBits:58893,versionNumber:14,alignmentPatternCenters:[6,26,46,66],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:115},{numBlocks:1,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:40},{numBlocks:5,dataCodewordsPerBlock:41}]},{ecCodewordsPerBlock:20,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:16},{numBlocks:5,dataCodewordsPerBlock:17}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:12},{numBlocks:5,dataCodewordsPerBlock:13}]}]},{infoBits:63784,versionNumber:15,alignmentPatternCenters:[6,26,48,70],errorCorrectionLevels:[{ecCodewordsPerBlock:22,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:87},{numBlocks:1,dataCodewordsPerBlock:88}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:41},{numBlocks:5,dataCodewordsPerBlock:42}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:24},{numBlocks:7,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:12},{numBlocks:7,dataCodewordsPerBlock:13}]}]},{infoBits:68472,versionNumber:16,alignmentPatternCenters:[6,26,50,74],errorCorrectionLevels:[{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:98},{numBlocks:1,dataCodewordsPerBlock:99}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:7,dataCodewordsPerBlock:45},{numBlocks:3,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:15,dataCodewordsPerBlock:19},{numBlocks:2,dataCodewordsPerBlock:20}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:15},{numBlocks:13,dataCodewordsPerBlock:16}]}]},{infoBits:70749,versionNumber:17,alignmentPatternCenters:[6,30,54,78],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:107},{numBlocks:5,dataCodewordsPerBlock:108}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:10,dataCodewordsPerBlock:46},{numBlocks:1,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:22},{numBlocks:15,dataCodewordsPerBlock:23}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:14},{numBlocks:17,dataCodewordsPerBlock:15}]}]},{infoBits:76311,versionNumber:18,alignmentPatternCenters:[6,30,56,82],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:120},{numBlocks:1,dataCodewordsPerBlock:121}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:9,dataCodewordsPerBlock:43},{numBlocks:4,dataCodewordsPerBlock:44}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:22},{numBlocks:1,dataCodewordsPerBlock:23}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:14},{numBlocks:19,dataCodewordsPerBlock:15}]}]},{infoBits:79154,versionNumber:19,alignmentPatternCenters:[6,30,58,86],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:113},{numBlocks:4,dataCodewordsPerBlock:114}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:44},{numBlocks:11,dataCodewordsPerBlock:45}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:21},{numBlocks:4,dataCodewordsPerBlock:22}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:9,dataCodewordsPerBlock:13},{numBlocks:16,dataCodewordsPerBlock:14}]}]},{infoBits:84390,versionNumber:20,alignmentPatternCenters:[6,34,62,90],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:107},{numBlocks:5,dataCodewordsPerBlock:108}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:41},{numBlocks:13,dataCodewordsPerBlock:42}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:15,dataCodewordsPerBlock:24},{numBlocks:5,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:15,dataCodewordsPerBlock:15},{numBlocks:10,dataCodewordsPerBlock:16}]}]},{infoBits:87683,versionNumber:21,alignmentPatternCenters:[6,28,50,72,94],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:116},{numBlocks:4,dataCodewordsPerBlock:117}]},{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:42}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:22},{numBlocks:6,dataCodewordsPerBlock:23}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:16},{numBlocks:6,dataCodewordsPerBlock:17}]}]},{infoBits:92361,versionNumber:22,alignmentPatternCenters:[6,26,50,74,98],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:111},{numBlocks:7,dataCodewordsPerBlock:112}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:7,dataCodewordsPerBlock:24},{numBlocks:16,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:24,ecBlocks:[{numBlocks:34,dataCodewordsPerBlock:13}]}]},{infoBits:96236,versionNumber:23,alignmentPatternCenters:[6,30,54,74,102],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:121},{numBlocks:5,dataCodewordsPerBlock:122}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:47},{numBlocks:14,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:24},{numBlocks:14,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:16,dataCodewordsPerBlock:15},{numBlocks:14,dataCodewordsPerBlock:16}]}]},{infoBits:102084,versionNumber:24,alignmentPatternCenters:[6,28,54,80,106],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:117},{numBlocks:4,dataCodewordsPerBlock:118}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:45},{numBlocks:14,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:24},{numBlocks:16,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:30,dataCodewordsPerBlock:16},{numBlocks:2,dataCodewordsPerBlock:17}]}]},{infoBits:102881,versionNumber:25,alignmentPatternCenters:[6,32,58,84,110],errorCorrectionLevels:[{ecCodewordsPerBlock:26,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:106},{numBlocks:4,dataCodewordsPerBlock:107}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:47},{numBlocks:13,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:7,dataCodewordsPerBlock:24},{numBlocks:22,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:22,dataCodewordsPerBlock:15},{numBlocks:13,dataCodewordsPerBlock:16}]}]},{infoBits:110507,versionNumber:26,alignmentPatternCenters:[6,30,58,86,114],errorCorrectionLevels:[{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:10,dataCodewordsPerBlock:114},{numBlocks:2,dataCodewordsPerBlock:115}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:46},{numBlocks:4,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:28,dataCodewordsPerBlock:22},{numBlocks:6,dataCodewordsPerBlock:23}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:33,dataCodewordsPerBlock:16},{numBlocks:4,dataCodewordsPerBlock:17}]}]},{infoBits:110734,versionNumber:27,alignmentPatternCenters:[6,34,62,90,118],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:122},{numBlocks:4,dataCodewordsPerBlock:123}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:22,dataCodewordsPerBlock:45},{numBlocks:3,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:8,dataCodewordsPerBlock:23},{numBlocks:26,dataCodewordsPerBlock:24}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:12,dataCodewordsPerBlock:15},{numBlocks:28,dataCodewordsPerBlock:16}]}]},{infoBits:117786,versionNumber:28,alignmentPatternCenters:[6,26,50,74,98,122],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:117},{numBlocks:10,dataCodewordsPerBlock:118}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:3,dataCodewordsPerBlock:45},{numBlocks:23,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:24},{numBlocks:31,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:15},{numBlocks:31,dataCodewordsPerBlock:16}]}]},{infoBits:119615,versionNumber:29,alignmentPatternCenters:[6,30,54,78,102,126],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:7,dataCodewordsPerBlock:116},{numBlocks:7,dataCodewordsPerBlock:117}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:21,dataCodewordsPerBlock:45},{numBlocks:7,dataCodewordsPerBlock:46}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:1,dataCodewordsPerBlock:23},{numBlocks:37,dataCodewordsPerBlock:24}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:15},{numBlocks:26,dataCodewordsPerBlock:16}]}]},{infoBits:126325,versionNumber:30,alignmentPatternCenters:[6,26,52,78,104,130],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:5,dataCodewordsPerBlock:115},{numBlocks:10,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:47},{numBlocks:10,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:15,dataCodewordsPerBlock:24},{numBlocks:25,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:23,dataCodewordsPerBlock:15},{numBlocks:25,dataCodewordsPerBlock:16}]}]},{infoBits:127568,versionNumber:31,alignmentPatternCenters:[6,30,56,82,108,134],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:13,dataCodewordsPerBlock:115},{numBlocks:3,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:46},{numBlocks:29,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:42,dataCodewordsPerBlock:24},{numBlocks:1,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:23,dataCodewordsPerBlock:15},{numBlocks:28,dataCodewordsPerBlock:16}]}]},{infoBits:133589,versionNumber:32,alignmentPatternCenters:[6,34,60,86,112,138],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:115}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:10,dataCodewordsPerBlock:46},{numBlocks:23,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:10,dataCodewordsPerBlock:24},{numBlocks:35,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:15},{numBlocks:35,dataCodewordsPerBlock:16}]}]},{infoBits:136944,versionNumber:33,alignmentPatternCenters:[6,30,58,86,114,142],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:115},{numBlocks:1,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:14,dataCodewordsPerBlock:46},{numBlocks:21,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:29,dataCodewordsPerBlock:24},{numBlocks:19,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:11,dataCodewordsPerBlock:15},{numBlocks:46,dataCodewordsPerBlock:16}]}]},{infoBits:141498,versionNumber:34,alignmentPatternCenters:[6,34,62,90,118,146],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:13,dataCodewordsPerBlock:115},{numBlocks:6,dataCodewordsPerBlock:116}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:14,dataCodewordsPerBlock:46},{numBlocks:23,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:44,dataCodewordsPerBlock:24},{numBlocks:7,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:59,dataCodewordsPerBlock:16},{numBlocks:1,dataCodewordsPerBlock:17}]}]},{infoBits:145311,versionNumber:35,alignmentPatternCenters:[6,30,54,78,102,126,150],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:12,dataCodewordsPerBlock:121},{numBlocks:7,dataCodewordsPerBlock:122}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:12,dataCodewordsPerBlock:47},{numBlocks:26,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:39,dataCodewordsPerBlock:24},{numBlocks:14,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:22,dataCodewordsPerBlock:15},{numBlocks:41,dataCodewordsPerBlock:16}]}]},{infoBits:150283,versionNumber:36,alignmentPatternCenters:[6,24,50,76,102,128,154],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:121},{numBlocks:14,dataCodewordsPerBlock:122}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:6,dataCodewordsPerBlock:47},{numBlocks:34,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:46,dataCodewordsPerBlock:24},{numBlocks:10,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:2,dataCodewordsPerBlock:15},{numBlocks:64,dataCodewordsPerBlock:16}]}]},{infoBits:152622,versionNumber:37,alignmentPatternCenters:[6,28,54,80,106,132,158],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:17,dataCodewordsPerBlock:122},{numBlocks:4,dataCodewordsPerBlock:123}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:29,dataCodewordsPerBlock:46},{numBlocks:14,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:49,dataCodewordsPerBlock:24},{numBlocks:10,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:24,dataCodewordsPerBlock:15},{numBlocks:46,dataCodewordsPerBlock:16}]}]},{infoBits:158308,versionNumber:38,alignmentPatternCenters:[6,32,58,84,110,136,162],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:4,dataCodewordsPerBlock:122},{numBlocks:18,dataCodewordsPerBlock:123}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:13,dataCodewordsPerBlock:46},{numBlocks:32,dataCodewordsPerBlock:47}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:48,dataCodewordsPerBlock:24},{numBlocks:14,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:42,dataCodewordsPerBlock:15},{numBlocks:32,dataCodewordsPerBlock:16}]}]},{infoBits:161089,versionNumber:39,alignmentPatternCenters:[6,26,54,82,110,138,166],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:20,dataCodewordsPerBlock:117},{numBlocks:4,dataCodewordsPerBlock:118}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:40,dataCodewordsPerBlock:47},{numBlocks:7,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:43,dataCodewordsPerBlock:24},{numBlocks:22,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:10,dataCodewordsPerBlock:15},{numBlocks:67,dataCodewordsPerBlock:16}]}]},{infoBits:167017,versionNumber:40,alignmentPatternCenters:[6,30,58,86,114,142,170],errorCorrectionLevels:[{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:19,dataCodewordsPerBlock:118},{numBlocks:6,dataCodewordsPerBlock:119}]},{ecCodewordsPerBlock:28,ecBlocks:[{numBlocks:18,dataCodewordsPerBlock:47},{numBlocks:31,dataCodewordsPerBlock:48}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:34,dataCodewordsPerBlock:24},{numBlocks:34,dataCodewordsPerBlock:25}]},{ecCodewordsPerBlock:30,ecBlocks:[{numBlocks:20,dataCodewordsPerBlock:15},{numBlocks:61,dataCodewordsPerBlock:16}]}]}]},function(o,e,r){\"use strict\";function t(o,e,r,t){var c=o.x-e.x+r.x-t.x,s=o.y-e.y+r.y-t.y;if(0===c&&0===s)return{a11:e.x-o.x,a12:e.y-o.y,a13:0,a21:r.x-e.x,a22:r.y-e.y,a23:0,a31:o.x,a32:o.y,a33:1};var a=e.x-r.x,d=t.x-r.x,n=e.y-r.y,l=t.y-r.y,i=a*l-d*n,B=(c*l-d*s)/i,k=(a*s-c*n)/i;return{a11:e.x-o.x+B*e.x,a12:e.y-o.y+B*e.y,a13:B,a21:t.x-o.x+k*t.x,a22:t.y-o.y+k*t.y,a23:k,a31:o.x,a32:o.y,a33:1}}function c(o,e,r,c){var s=t(o,e,r,c);return{a11:s.a22*s.a33-s.a23*s.a32,a12:s.a13*s.a32-s.a12*s.a33,a13:s.a12*s.a23-s.a13*s.a22,a21:s.a23*s.a31-s.a21*s.a33,a22:s.a11*s.a33-s.a13*s.a31,a23:s.a13*s.a21-s.a11*s.a23,a31:s.a21*s.a32-s.a22*s.a31,a32:s.a12*s.a31-s.a11*s.a32,a33:s.a11*s.a22-s.a12*s.a21}}function s(o,e){return{a11:o.a11*e.a11+o.a21*e.a12+o.a31*e.a13,a12:o.a12*e.a11+o.a22*e.a12+o.a32*e.a13,a13:o.a13*e.a11+o.a23*e.a12+o.a33*e.a13,a21:o.a11*e.a21+o.a21*e.a22+o.a31*e.a23,a22:o.a12*e.a21+o.a22*e.a22+o.a32*e.a23,a23:o.a13*e.a21+o.a23*e.a22+o.a33*e.a23,a31:o.a11*e.a31+o.a21*e.a32+o.a31*e.a33,a32:o.a12*e.a31+o.a22*e.a32+o.a32*e.a33,a33:o.a13*e.a31+o.a23*e.a32+o.a33*e.a33}}function a(o,e){for(var r=c({x:3.5,y:3.5},{x:e.dimension-3.5,y:3.5},{x:e.dimension-6.5,y:e.dimension-6.5},{x:3.5,y:e.dimension-3.5}),a=t(e.topLeft,e.topRight,e.alignmentPattern,e.bottomLeft),n=s(a,r),l=d.BitMatrix.createEmpty(e.dimension,e.dimension),i=function(o,e){var r=n.a13*o+n.a23*e+n.a33;return{x:(n.a11*o+n.a21*e+n.a31)/r,y:(n.a12*o+n.a22*e+n.a32)/r}},B=0;B<e.dimension;B++)for(var k=0;k<e.dimension;k++){var u=k+.5,C=B+.5,f=i(u,C);l.set(k,B,o.get(Math.floor(f.x),Math.floor(f.y)))}return{matrix:l,mappingFunction:i}}Object.defineProperty(e,\"__esModule\",{value:!0});var d=r(0);e.extract=a},function(o,e,r){\"use strict\";function t(o){return o.reduce(function(o,e){return o+e})}function c(o,e,r){var t,c,s,a=C(o,e),d=C(e,r),n=C(o,r);return d>=a&&d>=n?(l=[e,o,r],t=l[0],c=l[1],s=l[2]):n>=d&&n>=a?(i=[o,e,r],t=i[0],c=i[1],s=i[2]):(B=[o,r,e],t=B[0],c=B[1],s=B[2]),(s.x-c.x)*(t.y-c.y)-(s.y-c.y)*(t.x-c.x)<0&&(k=[s,t],t=k[0],s=k[1]),{bottomLeft:t,topLeft:c,topRight:s};var l,i,B,k}function s(o,e,r,c){var s=(t(d(o,r,c,5))/7+t(d(o,e,c,5))/7+t(d(r,o,c,5))/7+t(d(e,o,c,5))/7)/4;if(s<1)throw new Error(\"Invalid module size\");var a=Math.round(C(o,e)/s),n=Math.round(C(o,r)/s),l=Math.floor((a+n)/2)+7;switch(l%4){case 0:l++;break;case 2:l--}return{dimension:l,moduleSize:s}}function a(o,e,r,t){var c,s,a,d,n=[{x:Math.floor(o.x),y:Math.floor(o.y)}],l=Math.abs(e.y-o.y)>Math.abs(e.x-o.x);l?(c=Math.floor(o.y),s=Math.floor(o.x),a=Math.floor(e.y),d=Math.floor(e.x)):(c=Math.floor(o.x),s=Math.floor(o.y),a=Math.floor(e.x),d=Math.floor(e.y));for(var i=Math.abs(a-c),B=Math.abs(d-s),k=Math.floor(-i/2),u=c<a?1:-1,f=s<d?1:-1,m=!0,w=c,P=s;w!==a+u;w+=u){var v=l?P:w,h=l?w:P;if(r.get(v,h)!==m&&(m=!m,n.push({x:v,y:h}),n.length===t+1))break;if((k+=B)>0){if(P===d)break;P+=f,k-=i}}for(var p=[],y=0;y<t;y++)n[y]&&n[y+1]?p.push(C(n[y],n[y+1])):p.push(0);return p}function d(o,e,r,t){var c=e.y-o.y,s=e.x-o.x,d=a(o,e,r,Math.ceil(t/2)),n=a(o,{x:o.x-s,y:o.y-c},r,Math.ceil(t/2)),l=d.shift()+n.shift()-1;return(i=n.concat(l)).concat.apply(i,d);var i}function n(o,e){var r=t(o)/t(e),c=0;return e.forEach(function(e,t){c+=Math.pow(o[t]-e*r,2)}),{averageSize:r,error:c}}function l(o,e,r){try{var t=d(o,{x:-1,y:o.y},r,e.length),c=d(o,{x:o.x,y:-1},r,e.length),s={x:Math.max(0,o.x-o.y)-1,y:Math.max(0,o.y-o.x)-1},a=d(o,s,r,e.length),l={x:Math.min(r.width,o.x+o.y)+1,y:Math.min(r.height,o.y+o.x)+1},i=d(o,l,r,e.length),B=n(t,e),k=n(c,e),u=n(a,e),C=n(i,e),f=Math.sqrt(B.error*B.error+k.error*k.error+u.error*u.error+C.error*C.error),m=(B.averageSize+k.averageSize+u.averageSize+C.averageSize)/4;return f+(Math.pow(B.averageSize-m,2)+Math.pow(k.averageSize-m,2)+Math.pow(u.averageSize-m,2)+Math.pow(C.averageSize-m,2))/m}catch(o){return 1/0}}function i(o){for(var e=[],r=[],a=[],d=[],n=0;n<=o.height;n++)!function(c){for(var s=0,n=!1,l=[0,0,0,0,0],i=-1;i<=o.width;i++)!function(e){var a=o.get(e,c);if(a===n)s++;else{l=[l[1],l[2],l[3],l[4],s],s=1,n=a;var i=t(l)/7,B=Math.abs(l[0]-i)<i&&Math.abs(l[1]-i)<i&&Math.abs(l[2]-3*i)<3*i&&Math.abs(l[3]-i)<i&&Math.abs(l[4]-i)<i&&!a,C=t(l.slice(-3))/3,f=Math.abs(l[2]-C)<C&&Math.abs(l[3]-C)<C&&Math.abs(l[4]-C)<C&&a;if(B){var m=e-l[3]-l[4],w=m-l[2],P={startX:w,endX:m,y:c},v=r.filter(function(o){return w>=o.bottom.startX&&w<=o.bottom.endX||m>=o.bottom.startX&&w<=o.bottom.endX||w<=o.bottom.startX&&m>=o.bottom.endX&&l[2]/(o.bottom.endX-o.bottom.startX)<u&&l[2]/(o.bottom.endX-o.bottom.startX)>k});v.length>0?v[0].bottom=P:r.push({top:P,bottom:P})}if(f){var h=e-l[4],p=h-l[3],P={startX:p,y:c,endX:h},v=d.filter(function(o){return p>=o.bottom.startX&&p<=o.bottom.endX||h>=o.bottom.startX&&p<=o.bottom.endX||p<=o.bottom.startX&&h>=o.bottom.endX&&l[2]/(o.bottom.endX-o.bottom.startX)<u&&l[2]/(o.bottom.endX-o.bottom.startX)>k});v.length>0?v[0].bottom=P:d.push({top:P,bottom:P})}}}(i);e.push.apply(e,r.filter(function(o){return o.bottom.y!==c&&o.bottom.y-o.top.y>=2})),r=r.filter(function(o){return o.bottom.y===c}),a.push.apply(a,d.filter(function(o){return o.bottom.y!==c})),d=d.filter(function(o){return o.bottom.y===c})}(n);e.push.apply(e,r.filter(function(o){return o.bottom.y-o.top.y>=2})),a.push.apply(a,d);var i=e.filter(function(o){return o.bottom.y-o.top.y>=2}).map(function(e){var r=(e.top.startX+e.top.endX+e.bottom.startX+e.bottom.endX)/4,c=(e.top.y+e.bottom.y+1)/2;if(o.get(Math.round(r),Math.round(c))){var s=[e.top.endX-e.top.startX,e.bottom.endX-e.bottom.startX,e.bottom.y-e.top.y+1],a=t(s)/s.length;return{score:l({x:Math.round(r),y:Math.round(c)},[1,1,3,1,1],o),x:r,y:c,size:a}}}).filter(function(o){return!!o}).sort(function(o,e){return o.score-e.score}).map(function(o,e,r){if(e>B)return null;var t=r.filter(function(o,r){return e!==r}).map(function(e){return{x:e.x,y:e.y,score:e.score+Math.pow(e.size-o.size,2)/o.size,size:e.size}}).sort(function(o,e){return o.score-e.score});if(t.length<2)return null;var c=o.score+t[0].score+t[1].score;return{points:[o].concat(t.slice(0,2)),score:c}}).filter(function(o){return!!o}).sort(function(o,e){return o.score-e.score});if(0===i.length)return null;var f,m,w=c(i[0].points[0],i[0].points[1],i[0].points[2]),P=w.topRight,v=w.topLeft,h=w.bottomLeft;try{L=s(v,P,h,o),f=L.dimension,m=L.moduleSize}catch(o){return null}var p={x:P.x-v.x+h.x,y:P.y-v.y+h.y},y=(C(v,h)+C(v,P))/2/m,b=1-3/y,g={x:v.x+b*(p.x-v.x),y:v.y+b*(p.y-v.y)},x=a.map(function(e){var r=(e.top.startX+e.top.endX+e.bottom.startX+e.bottom.endX)/4,c=(e.top.y+e.bottom.y+1)/2;if(o.get(Math.floor(r),Math.floor(c))){var s=[e.top.endX-e.top.startX,e.bottom.endX-e.bottom.startX,e.bottom.y-e.top.y+1];t(s);return{x:r,y:c,score:l({x:Math.floor(r),y:Math.floor(c)},[1,1,1],o)+C({x:r,y:c},g)}}}).filter(function(o){return!!o}).sort(function(o,e){return o.score-e.score}),M=y>=15&&x.length?x[0]:g;return{alignmentPattern:{x:M.x,y:M.y},bottomLeft:{x:h.x,y:h.y},dimension:f,topLeft:{x:v.x,y:v.y},topRight:{x:P.x,y:P.y}};var L}Object.defineProperty(e,\"__esModule\",{value:!0});var B=4,k=.5,u=1.5,C=function(o,e){return Math.sqrt(Math.pow(e.x-o.x,2)+Math.pow(e.y-o.y,2))};e.locate=i}]).default})},function(o,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var t=r(0),c=r.n(t);self.addEventListener(\"message\",function(o){var e=o.data,r=c()(e.data,e.width,e.height),t=null,s=null;null!==r&&(t=r.data,s=r.location);var a={content:t,location:s,imageData:e};self.postMessage(a,[e.data.buffer])})}]);',null)}},function(e,t,o){\"use strict\";var r=window.URL||window.webkitURL;e.exports=function(e,t){try{try{var o;try{var n=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder;o=new n,o.append(e),o=o.getBlob()}catch(t){o=new Blob([e])}return new Worker(r.createObjectURL(o))}catch(t){return new Worker(\"data:application/javascript,\"+encodeURIComponent(e))}}catch(e){if(!t)throw Error(\"Inline worker is not supported\");return new Worker(t)}}},function(e,t){e.exports=require(\"webrtc-adapter\")}]);","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\nvar utils = require('./utils');\n\nmodule.exports = {\n  shimRTCIceCandidate: function(window) {\n    // foundation is arbitrarily chosen as an indicator for full support for\n    // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n    if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n        window.RTCIceCandidate.prototype)) {\n      return;\n    }\n\n    var NativeRTCIceCandidate = window.RTCIceCandidate;\n    window.RTCIceCandidate = function(args) {\n      // Remove the a= which shouldn't be part of the candidate string.\n      if (typeof args === 'object' && args.candidate &&\n          args.candidate.indexOf('a=') === 0) {\n        args = JSON.parse(JSON.stringify(args));\n        args.candidate = args.candidate.substr(2);\n      }\n\n      if (args.candidate && args.candidate.length) {\n        // Augment the native candidate with the parsed fields.\n        var nativeCandidate = new NativeRTCIceCandidate(args);\n        var parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n        var augmentedCandidate = Object.assign(nativeCandidate,\n            parsedCandidate);\n\n        // Add a serializer that does not serialize the extra attributes.\n        augmentedCandidate.toJSON = function() {\n          return {\n            candidate: augmentedCandidate.candidate,\n            sdpMid: augmentedCandidate.sdpMid,\n            sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n            usernameFragment: augmentedCandidate.usernameFragment,\n          };\n        };\n        return augmentedCandidate;\n      }\n      return new NativeRTCIceCandidate(args);\n    };\n    window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n    // Hook up the augmented candidate in onicecandidate and\n    // addEventListener('icecandidate', ...)\n    utils.wrapPeerConnectionEvent(window, 'icecandidate', function(e) {\n      if (e.candidate) {\n        Object.defineProperty(e, 'candidate', {\n          value: new window.RTCIceCandidate(e.candidate),\n          writable: 'false'\n        });\n      }\n      return e;\n    });\n  },\n\n  // shimCreateObjectURL must be called before shimSourceObject to avoid loop.\n\n  shimCreateObjectURL: function(window) {\n    var URL = window && window.URL;\n\n    if (!(typeof window === 'object' && window.HTMLMediaElement &&\n          'srcObject' in window.HTMLMediaElement.prototype &&\n        URL.createObjectURL && URL.revokeObjectURL)) {\n      // Only shim CreateObjectURL using srcObject if srcObject exists.\n      return undefined;\n    }\n\n    var nativeCreateObjectURL = URL.createObjectURL.bind(URL);\n    var nativeRevokeObjectURL = URL.revokeObjectURL.bind(URL);\n    var streams = new Map(), newId = 0;\n\n    URL.createObjectURL = function(stream) {\n      if ('getTracks' in stream) {\n        var url = 'polyblob:' + (++newId);\n        streams.set(url, stream);\n        utils.deprecated('URL.createObjectURL(stream)',\n            'elem.srcObject = stream');\n        return url;\n      }\n      return nativeCreateObjectURL(stream);\n    };\n    URL.revokeObjectURL = function(url) {\n      nativeRevokeObjectURL(url);\n      streams.delete(url);\n    };\n\n    var dsc = Object.getOwnPropertyDescriptor(window.HTMLMediaElement.prototype,\n                                              'src');\n    Object.defineProperty(window.HTMLMediaElement.prototype, 'src', {\n      get: function() {\n        return dsc.get.apply(this);\n      },\n      set: function(url) {\n        this.srcObject = streams.get(url) || null;\n        return dsc.set.apply(this, [url]);\n      }\n    });\n\n    var nativeSetAttribute = window.HTMLMediaElement.prototype.setAttribute;\n    window.HTMLMediaElement.prototype.setAttribute = function() {\n      if (arguments.length === 2 &&\n          ('' + arguments[0]).toLowerCase() === 'src') {\n        this.srcObject = streams.get(arguments[1]) || null;\n      }\n      return nativeSetAttribute.apply(this, arguments);\n    };\n  },\n\n  shimMaxMessageSize: function(window) {\n    if (window.RTCSctpTransport || !window.RTCPeerConnection) {\n      return;\n    }\n    var browserDetails = utils.detectBrowser(window);\n\n    if (!('sctp' in window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n        get: function() {\n          return typeof this._sctp === 'undefined' ? null : this._sctp;\n        }\n      });\n    }\n\n    var sctpInDescription = function(description) {\n      var sections = SDPUtils.splitSections(description.sdp);\n      sections.shift();\n      return sections.some(function(mediaSection) {\n        var mLine = SDPUtils.parseMLine(mediaSection);\n        return mLine && mLine.kind === 'application'\n            && mLine.protocol.indexOf('SCTP') !== -1;\n      });\n    };\n\n    var getRemoteFirefoxVersion = function(description) {\n      // TODO: Is there a better solution for detecting Firefox?\n      var match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n      if (match === null || match.length < 2) {\n        return -1;\n      }\n      var version = parseInt(match[1], 10);\n      // Test for NaN (yes, this is ugly)\n      return version !== version ? -1 : version;\n    };\n\n    var getCanSendMaxMessageSize = function(remoteIsFirefox) {\n      // Every implementation we know can send at least 64 KiB.\n      // Note: Although Chrome is technically able to send up to 256 KiB, the\n      //       data does not reach the other peer reliably.\n      //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n      var canSendMaxMessageSize = 65536;\n      if (browserDetails.browser === 'firefox') {\n        if (browserDetails.version < 57) {\n          if (remoteIsFirefox === -1) {\n            // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n            // fragmentation.\n            canSendMaxMessageSize = 16384;\n          } else {\n            // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n            // messages. Thus, supporting ~2 GiB when sending.\n            canSendMaxMessageSize = 2147483637;\n          }\n        } else if (browserDetails.version < 60) {\n          // Currently, all FF >= 57 will reset the remote maximum message size\n          // to the default value when a data channel is created at a later\n          // stage. :(\n          // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n          canSendMaxMessageSize =\n            browserDetails.version === 57 ? 65535 : 65536;\n        } else {\n          // FF >= 60 supports sending ~2 GiB\n          canSendMaxMessageSize = 2147483637;\n        }\n      }\n      return canSendMaxMessageSize;\n    };\n\n    var getMaxMessageSize = function(description, remoteIsFirefox) {\n      // Note: 65536 bytes is the default value from the SDP spec. Also,\n      //       every implementation we know supports receiving 65536 bytes.\n      var maxMessageSize = 65536;\n\n      // FF 57 has a slightly incorrect default remote max message size, so\n      // we need to adjust it here to avoid a failure when sending.\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n      if (browserDetails.browser === 'firefox'\n           && browserDetails.version === 57) {\n        maxMessageSize = 65535;\n      }\n\n      var match = SDPUtils.matchPrefix(description.sdp, 'a=max-message-size:');\n      if (match.length > 0) {\n        maxMessageSize = parseInt(match[0].substr(19), 10);\n      } else if (browserDetails.browser === 'firefox' &&\n                  remoteIsFirefox !== -1) {\n        // If the maximum message size is not present in the remote SDP and\n        // both local and remote are Firefox, the remote peer can receive\n        // ~2 GiB.\n        maxMessageSize = 2147483637;\n      }\n      return maxMessageSize;\n    };\n\n    var origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n      var pc = this;\n      pc._sctp = null;\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        var isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        var canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        var remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        var maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        var sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get: function() {\n            return maxMessageSize;\n          }\n        });\n        pc._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(pc, arguments);\n    };\n  },\n\n  shimSendThrowTypeError: function(window) {\n    if (!(window.RTCPeerConnection &&\n        'createDataChannel' in window.RTCPeerConnection.prototype)) {\n      return;\n    }\n\n    // Note: Although Firefox >= 57 has a native implementation, the maximum\n    //       message size can be reset for all data channels at a later stage.\n    //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n    function wrapDcSend(dc, pc) {\n      var origDataChannelSend = dc.send;\n      dc.send = function() {\n        var data = arguments[0];\n        var length = data.length || data.size || data.byteLength;\n        if (dc.readyState === 'open' &&\n            pc.sctp && length > pc.sctp.maxMessageSize) {\n          throw new TypeError('Message too large (can send a maximum of ' +\n            pc.sctp.maxMessageSize + ' bytes)');\n        }\n        return origDataChannelSend.apply(dc, arguments);\n      };\n    }\n    var origCreateDataChannel =\n      window.RTCPeerConnection.prototype.createDataChannel;\n    window.RTCPeerConnection.prototype.createDataChannel = function() {\n      var pc = this;\n      var dataChannel = origCreateDataChannel.apply(pc, arguments);\n      wrapDcSend(dataChannel, pc);\n      return dataChannel;\n    };\n    utils.wrapPeerConnectionEvent(window, 'datachannel', function(e) {\n      wrapDcSend(e.channel, e.target);\n      return e;\n    });\n  }\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nvar utils = require('../utils');\n\nmodule.exports = {\n  shimLocalStreamsAPI: function(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n    if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getLocalStreams = function() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n    }\n    if (!('getStreamById' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getStreamById = function(id) {\n        var result = null;\n        if (this._localStreams) {\n          this._localStreams.forEach(function(stream) {\n            if (stream.id === id) {\n              result = stream;\n            }\n          });\n        }\n        if (this._remoteStreams) {\n          this._remoteStreams.forEach(function(stream) {\n            if (stream.id === id) {\n              result = stream;\n            }\n          });\n        }\n        return result;\n      };\n    }\n    if (!('addStream' in window.RTCPeerConnection.prototype)) {\n      var _addTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addStream = function(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        if (this._localStreams.indexOf(stream) === -1) {\n          this._localStreams.push(stream);\n        }\n        var pc = this;\n        stream.getTracks().forEach(function(track) {\n          _addTrack.call(pc, track, stream);\n        });\n      };\n\n      window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n        if (stream) {\n          if (!this._localStreams) {\n            this._localStreams = [stream];\n          } else if (this._localStreams.indexOf(stream) === -1) {\n            this._localStreams.push(stream);\n          }\n        }\n        return _addTrack.call(this, track, stream);\n      };\n    }\n    if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.removeStream = function(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        var index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        var pc = this;\n        var tracks = stream.getTracks();\n        this.getSenders().forEach(function(sender) {\n          if (tracks.indexOf(sender.track) !== -1) {\n            pc.removeTrack(sender);\n          }\n        });\n      };\n    }\n  },\n  shimRemoteStreamsAPI: function(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n    if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getRemoteStreams = function() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n    }\n    if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n        get: function() {\n          return this._onaddstream;\n        },\n        set: function(f) {\n          if (this._onaddstream) {\n            this.removeEventListener('addstream', this._onaddstream);\n          }\n          this.addEventListener('addstream', this._onaddstream = f);\n        }\n      });\n      var origSetRemoteDescription =\n          window.RTCPeerConnection.prototype.setRemoteDescription;\n      window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n        var pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(function(stream) {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              var event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n    }\n  },\n  shimCallbacksAPI: function(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n    var prototype = window.RTCPeerConnection.prototype;\n    var createOffer = prototype.createOffer;\n    var createAnswer = prototype.createAnswer;\n    var setLocalDescription = prototype.setLocalDescription;\n    var setRemoteDescription = prototype.setRemoteDescription;\n    var addIceCandidate = prototype.addIceCandidate;\n\n    prototype.createOffer = function(successCallback, failureCallback) {\n      var options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      var promise = createOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n    prototype.createAnswer = function(successCallback, failureCallback) {\n      var options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      var promise = createAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n    var withCallback = function(description, successCallback, failureCallback) {\n      var promise = setLocalDescription.apply(this, [description]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n    prototype.setLocalDescription = withCallback;\n\n    withCallback = function(description, successCallback, failureCallback) {\n      var promise = setRemoteDescription.apply(this, [description]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n    prototype.setRemoteDescription = withCallback;\n\n    withCallback = function(candidate, successCallback, failureCallback) {\n      var promise = addIceCandidate.apply(this, [candidate]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n    prototype.addIceCandidate = withCallback;\n  },\n  shimGetUserMedia: function(window) {\n    var navigator = window && window.navigator;\n\n    if (!navigator.getUserMedia) {\n      if (navigator.webkitGetUserMedia) {\n        navigator.getUserMedia = navigator.webkitGetUserMedia.bind(navigator);\n      } else if (navigator.mediaDevices &&\n          navigator.mediaDevices.getUserMedia) {\n        navigator.getUserMedia = function(constraints, cb, errcb) {\n          navigator.mediaDevices.getUserMedia(constraints)\n          .then(cb, errcb);\n        }.bind(navigator);\n      }\n    }\n  },\n  shimRTCIceServerUrls: function(window) {\n    // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n    var OrigPeerConnection = window.RTCPeerConnection;\n    window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        var newIceServers = [];\n        for (var i = 0; i < pcConfig.iceServers.length; i++) {\n          var server = pcConfig.iceServers[i];\n          if (!server.hasOwnProperty('urls') &&\n              server.hasOwnProperty('url')) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n    window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n    // wrap static methods. Currently just generateCertificate.\n    if ('generateCertificate' in window.RTCPeerConnection) {\n      Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n        get: function() {\n          return OrigPeerConnection.generateCertificate;\n        }\n      });\n    }\n  },\n  shimTrackEventTransceiver: function(window) {\n    // Add event.transceiver member over deprecated event.receiver\n    if (typeof window === 'object' && window.RTCPeerConnection &&\n        ('receiver' in window.RTCTrackEvent.prototype) &&\n        // can't check 'transceiver' in window.RTCTrackEvent.prototype, as it is\n        // defined for some reason even when window.RTCTransceiver is not.\n        !window.RTCTransceiver) {\n      Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n        get: function() {\n          return {receiver: this.receiver};\n        }\n      });\n    }\n  },\n\n  shimCreateOfferLegacy: function(window) {\n    var origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n    window.RTCPeerConnection.prototype.createOffer = function(offerOptions) {\n      var pc = this;\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio = !!offerOptions.offerToReceiveAudio;\n        }\n        var audioTransceiver = pc.getTransceivers().find(function(transceiver) {\n          return transceiver.sender.track &&\n              transceiver.sender.track.kind === 'audio';\n        });\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          pc.addTransceiver('audio');\n        }\n\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo = !!offerOptions.offerToReceiveVideo;\n        }\n        var videoTransceiver = pc.getTransceivers().find(function(transceiver) {\n          return transceiver.sender.track &&\n              transceiver.sender.track.kind === 'video';\n        });\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            videoTransceiver.setDirection('sendonly');\n          } else if (videoTransceiver.direction === 'recvonly') {\n            videoTransceiver.setDirection('inactive');\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          pc.addTransceiver('video');\n        }\n      }\n      return origCreateOffer.apply(pc, arguments);\n    };\n  }\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar logDisabled_ = true;\nvar deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nfunction extractVersion(uastring, expr, pos) {\n  var match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nfunction wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  var proto = window.RTCPeerConnection.prototype;\n  var nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    var wrappedCallback = function(e) {\n      var modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        cb(modifiedEvent);\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    this._eventMap[cb] = wrappedCallback;\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  var nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[cb]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    var unwrappedCb = this._eventMap[cb];\n    delete this._eventMap[cb];\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get: function() {\n      return this['_on' + eventNameToWrap];\n    },\n    set: function(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\n// Utility methods.\nmodule.exports = {\n  extractVersion: extractVersion,\n  wrapPeerConnectionEvent: wrapPeerConnectionEvent,\n  disableLog: function(bool) {\n    if (typeof bool !== 'boolean') {\n      return new Error('Argument type: ' + typeof bool +\n          '. Please use a boolean.');\n    }\n    logDisabled_ = bool;\n    return (bool) ? 'adapter.js logging disabled' :\n        'adapter.js logging enabled';\n  },\n\n  /**\n   * Disable or enable deprecation warnings\n   * @param {!boolean} bool set to true to disable warnings.\n   */\n  disableWarnings: function(bool) {\n    if (typeof bool !== 'boolean') {\n      return new Error('Argument type: ' + typeof bool +\n          '. Please use a boolean.');\n    }\n    deprecationWarnings_ = !bool;\n    return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n  },\n\n  log: function() {\n    if (typeof window === 'object') {\n      if (logDisabled_) {\n        return;\n      }\n      if (typeof console !== 'undefined' && typeof console.log === 'function') {\n        console.log.apply(console, arguments);\n      }\n    }\n  },\n\n  /**\n   * Shows a deprecation warning suggesting the modern and spec-compatible API.\n   */\n  deprecated: function(oldMethod, newMethod) {\n    if (!deprecationWarnings_) {\n      return;\n    }\n    console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n        ' instead.');\n  },\n\n  /**\n   * Browser detector.\n   *\n   * @return {object} result containing browser and version\n   *     properties.\n   */\n  detectBrowser: function(window) {\n    var navigator = window && window.navigator;\n\n    // Returned result object.\n    var result = {};\n    result.browser = null;\n    result.version = null;\n\n    // Fail early if it's not a browser\n    if (typeof window === 'undefined' || !window.navigator) {\n      result.browser = 'Not a browser.';\n      return result;\n    }\n\n    if (navigator.mozGetUserMedia) { // Firefox.\n      result.browser = 'firefox';\n      result.version = extractVersion(navigator.userAgent,\n          /Firefox\\/(\\d+)\\./, 1);\n    } else if (navigator.webkitGetUserMedia) {\n      // Chrome, Chromium, Webview, Opera.\n      // Version matches Chrome/WebRTC version.\n      result.browser = 'chrome';\n      result.version = extractVersion(navigator.userAgent,\n          /Chrom(e|ium)\\/(\\d+)\\./, 2);\n    } else if (navigator.mediaDevices &&\n        navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n      result.browser = 'edge';\n      result.version = extractVersion(navigator.userAgent,\n          /Edge\\/(\\d+).(\\d+)$/, 2);\n    } else if (window.RTCPeerConnection &&\n        navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n      result.browser = 'safari';\n      result.version = extractVersion(navigator.userAgent,\n          /AppleWebKit\\/(\\d+)\\./, 1);\n    } else { // Default fallthrough: not supported.\n      result.browser = 'Not a supported browser.';\n      return result;\n    }\n\n    return result;\n  }\n};\n","export { default } from './dist/vue-qrcode-reader.common'\nexport * from './dist/vue-qrcode-reader.common'\nimport './dist/vue-qrcode-reader.css'\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\nvar logging = utils.log;\n\n// Expose public methods.\nmodule.exports = function(window) {\n  var browserDetails = utils.detectBrowser(window);\n  var navigator = window && window.navigator;\n  var MediaStreamTrack = window && window.MediaStreamTrack;\n\n  var shimError_ = function(e) {\n    return {\n      name: {\n        InternalError: 'NotReadableError',\n        NotSupportedError: 'TypeError',\n        PermissionDeniedError: 'NotAllowedError',\n        SecurityError: 'NotAllowedError'\n      }[e.name] || e.name,\n      message: {\n        'The operation is insecure.': 'The request is not allowed by the ' +\n        'user agent or the platform in the current context.'\n      }[e.message] || e.message,\n      constraint: e.constraint,\n      toString: function() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  // getUserMedia constraints shim.\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\n    var constraintsToFF37_ = function(c) {\n      if (typeof c !== 'object' || c.require) {\n        return c;\n      }\n      var require = [];\n      Object.keys(c).forEach(function(key) {\n        if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n          return;\n        }\n        var r = c[key] = (typeof c[key] === 'object') ?\n            c[key] : {ideal: c[key]};\n        if (r.min !== undefined ||\n            r.max !== undefined || r.exact !== undefined) {\n          require.push(key);\n        }\n        if (r.exact !== undefined) {\n          if (typeof r.exact === 'number') {\n            r. min = r.max = r.exact;\n          } else {\n            c[key] = r.exact;\n          }\n          delete r.exact;\n        }\n        if (r.ideal !== undefined) {\n          c.advanced = c.advanced || [];\n          var oc = {};\n          if (typeof r.ideal === 'number') {\n            oc[key] = {min: r.ideal, max: r.ideal};\n          } else {\n            oc[key] = r.ideal;\n          }\n          c.advanced.push(oc);\n          delete r.ideal;\n          if (!Object.keys(r).length) {\n            delete c[key];\n          }\n        }\n      });\n      if (require.length) {\n        c.require = require;\n      }\n      return c;\n    };\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (browserDetails.version < 38) {\n      logging('spec: ' + JSON.stringify(constraints));\n      if (constraints.audio) {\n        constraints.audio = constraintsToFF37_(constraints.audio);\n      }\n      if (constraints.video) {\n        constraints.video = constraintsToFF37_(constraints.video);\n      }\n      logging('ff37: ' + JSON.stringify(constraints));\n    }\n    return navigator.mozGetUserMedia(constraints, onSuccess, function(e) {\n      onError(shimError_(e));\n    });\n  };\n\n  // Returns the result of getUserMedia as a Promise.\n  var getUserMediaPromise_ = function(constraints) {\n    return new Promise(function(resolve, reject) {\n      getUserMedia_(constraints, resolve, reject);\n    });\n  };\n\n  // Shim for mediaDevices on older versions.\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {getUserMedia: getUserMediaPromise_,\n      addEventListener: function() { },\n      removeEventListener: function() { }\n    };\n  }\n  navigator.mediaDevices.enumerateDevices =\n      navigator.mediaDevices.enumerateDevices || function() {\n        return new Promise(function(resolve) {\n          var infos = [\n            {kind: 'audioinput', deviceId: 'default', label: '', groupId: ''},\n            {kind: 'videoinput', deviceId: 'default', label: '', groupId: ''}\n          ];\n          resolve(infos);\n        });\n      };\n\n  if (browserDetails.version < 41) {\n    // Work around http://bugzil.la/1169665\n    var orgEnumerateDevices =\n        navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);\n    navigator.mediaDevices.enumerateDevices = function() {\n      return orgEnumerateDevices().then(undefined, function(e) {\n        if (e.name === 'NotFoundError') {\n          return [];\n        }\n        throw e;\n      });\n    };\n  }\n  if (browserDetails.version < 49) {\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      return origGetUserMedia(c).then(function(stream) {\n        // Work around https://bugzil.la/802326\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(function(track) {\n            track.stop();\n          });\n          throw new DOMException('The object can not be found here.',\n                                 'NotFoundError');\n        }\n        return stream;\n      }, function(e) {\n        return Promise.reject(shimError_(e));\n      });\n    };\n  }\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    var remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    var nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      var nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        var obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      var nativeApplyConstraints = MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    if (browserDetails.version < 44) {\n      return getUserMedia_(constraints, onSuccess, onError);\n    }\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\nvar filterIceServers = require('./filtericeservers');\nvar shimRTCPeerConnection = require('rtcpeerconnection-shim');\n\nmodule.exports = {\n  shimGetUserMedia: require('./getusermedia'),\n  shimPeerConnection: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    if (window.RTCIceGatherer) {\n      if (!window.RTCIceCandidate) {\n        window.RTCIceCandidate = function(args) {\n          return args;\n        };\n      }\n      if (!window.RTCSessionDescription) {\n        window.RTCSessionDescription = function(args) {\n          return args;\n        };\n      }\n      // this adds an additional event listener to MediaStrackTrack that signals\n      // when a tracks enabled property was changed. Workaround for a bug in\n      // addStream, see below. No longer required in 15025+\n      if (browserDetails.version < 15025) {\n        var origMSTEnabled = Object.getOwnPropertyDescriptor(\n            window.MediaStreamTrack.prototype, 'enabled');\n        Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n          set: function(value) {\n            origMSTEnabled.set.call(this, value);\n            var ev = new Event('enabled');\n            ev.enabled = value;\n            this.dispatchEvent(ev);\n          }\n        });\n      }\n    }\n\n    // ORTC defines the DTMF sender a bit different.\n    // https://github.com/w3c/ortc/issues/714\n    if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n        get: function() {\n          if (this._dtmf === undefined) {\n            if (this.track.kind === 'audio') {\n              this._dtmf = new window.RTCDtmfSender(this);\n            } else if (this.track.kind === 'video') {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        }\n      });\n    }\n    // Edge currently only implements the RTCDtmfSender, not the\n    // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n    if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n      window.RTCDTMFSender = window.RTCDtmfSender;\n    }\n\n    var RTCPeerConnectionShim = shimRTCPeerConnection(window,\n        browserDetails.version);\n    window.RTCPeerConnection = function(config) {\n      if (config && config.iceServers) {\n        config.iceServers = filterIceServers(config.iceServers);\n      }\n      return new RTCPeerConnectionShim(config);\n    };\n    window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n  },\n  shimReplaceTrack: function(window) {\n    // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n    if (window.RTCRtpSender &&\n        !('replaceTrack' in window.RTCRtpSender.prototype)) {\n      window.RTCRtpSender.prototype.replaceTrack =\n          window.RTCRtpSender.prototype.setTrack;\n    }\n  },\n  shimGetDisplayMedia: function(window, preferredMediaSource) {\n    if (!('getDisplayMedia' in window.navigator) ||\n        !window.navigator.mediaDevices ||\n        'getDisplayMedia' in window.navigator.mediaDevices) {\n      return;\n    }\n    var origGetDisplayMedia = window.navigator.getDisplayMedia;\n    window.navigator.mediaDevices.getDisplayMedia = function(constraints) {\n      return origGetDisplayMedia.call(window.navigator, constraints);\n    };\n    window.navigator.getDisplayMedia = function(constraints) {\n      utils.deprecated('navigator.getDisplayMedia',\n          'navigator.mediaDevices.getDisplayMedia');\n      return origGetDisplayMedia.call(window.navigator, constraints);\n    };\n  }\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nvar utils = require('../utils.js');\nvar logging = utils.log;\n\n// Expose public methods.\nmodule.exports = function(window) {\n  var browserDetails = utils.detectBrowser(window);\n  var navigator = window && window.navigator;\n\n  var constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    var cc = {};\n    Object.keys(c).forEach(function(key) {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      var r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      var oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        var oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(function(mix) {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  var shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      var remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      var face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      var getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        var matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(function(devices) {\n            devices = devices.filter(function(d) {\n              return d.kind === 'videoinput';\n            });\n            var dev = devices.find(function(d) {\n              return matches.some(function(match) {\n                return d.label.toLowerCase().indexOf(match) !== -1;\n              });\n            });\n            if (!dev && devices.length && matches.indexOf('back') !== -1) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  var shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString: function() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, function(c) {\n      navigator.webkitGetUserMedia(c, onSuccess, function(e) {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n\n  navigator.getUserMedia = getUserMedia_;\n\n  // Returns the result of getUserMedia as a Promise.\n  var getUserMediaPromise_ = function(constraints) {\n    return new Promise(function(resolve, reject) {\n      navigator.getUserMedia(constraints, resolve, reject);\n    });\n  };\n\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {\n      getUserMedia: getUserMediaPromise_,\n      enumerateDevices: function() {\n        return new Promise(function(resolve) {\n          var kinds = {audio: 'audioinput', video: 'videoinput'};\n          return window.MediaStreamTrack.getSources(function(devices) {\n            resolve(devices.map(function(device) {\n              return {label: device.label,\n                kind: kinds[device.kind],\n                deviceId: device.id,\n                groupId: ''};\n            }));\n          });\n        });\n      },\n      getSupportedConstraints: function() {\n        return {\n          deviceId: true, echoCancellation: true, facingMode: true,\n          frameRate: true, height: true, width: true\n        };\n      }\n    };\n  }\n\n  // A shim for getUserMedia method on the mediaDevices object.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (!navigator.mediaDevices.getUserMedia) {\n    navigator.mediaDevices.getUserMedia = function(constraints) {\n      return getUserMediaPromise_(constraints);\n    };\n  } else {\n    // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n    // function which returns a Promise, it does not accept spec-style\n    // constraints.\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, function(c) {\n        return origGetUserMedia(c).then(function(stream) {\n          if (c.audio && !stream.getAudioTracks().length ||\n              c.video && !stream.getVideoTracks().length) {\n            stream.getTracks().forEach(function(track) {\n              track.stop();\n            });\n            throw new DOMException('', 'NotFoundError');\n          }\n          return stream;\n        }, function(e) {\n          return Promise.reject(shimError_(e));\n        });\n      });\n    };\n  }\n\n  // Dummy devicechange event methods.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (typeof navigator.mediaDevices.addEventListener === 'undefined') {\n    navigator.mediaDevices.addEventListener = function() {\n      logging('Dummy mediaDevices.addEventListener called.');\n    };\n  }\n  if (typeof navigator.mediaDevices.removeEventListener === 'undefined') {\n    navigator.mediaDevices.removeEventListener = function() {\n      logging('Dummy mediaDevices.removeEventListener called.');\n    };\n  }\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n\n'use strict';\n\nvar adapterFactory = require('./adapter_factory.js');\nmodule.exports = adapterFactory({window: global.window});\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldѕ are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this._localDescription = null;\n    this._remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function() {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function() {\n      return this._remoteDescription;\n    }\n  });\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateComplete‥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        // also the usernameFragment. TODO: update SDP to take both variants.\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n\n        event.candidate.candidate = serializedCandidate;\n        event.candidate.toJSON = function() {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc._localDescription.sdp =\n          SDPUtils.getDescription(pc._localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateIceConnectionState();\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (rejected || (kind === 'application' && (protocol === 'DTLS/SCTP' ||\n          protocol === 'UDP/DTLS/SCTP'))) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n\n      if (!rejected && pc.transceivers[sdpMLineIndex] &&\n          pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        // If the offer contained RTX but the answer did not,\n        // remove RTX from sendEncodingParameters.\n        var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n        var hasRtx = commonCapabilities.codecs.filter(function(c) {\n          return c.name.toLowerCase() === 'rtx';\n        }).length;\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n          delete transceiver.sendEncodingParameters[0].rtx;\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the ice connection state.\n  RTCPeerConnection.prototype._updateIceConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n      }\n    });\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && transceiver.dtlsTransport &&\n          !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      }\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    if (!(pc.signalingState === 'have-remote-offer' ||\n        pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') { // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol +\n                ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' +\n              'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' +\n              'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=inactive\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function(selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function(transceiver) {\n        if (transceiver.rtpSender &&\n            transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver &&\n            transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n      return senderOrReceiver.getStats();\n    }\n\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    return Promise.all(promises).then(function(allStats) {\n      var results = new Map();\n      allStats.forEach(function(stats) {\n        stats.forEach(function(stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  };\n\n  // fix low-level stat names and return Map instead of object.\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',\n    'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function(ortcObjectName) {\n    var obj = window[ortcObjectName];\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n      obj.prototype.getStats = function() {\n        return nativeGetstats.apply(this)\n        .then(function(nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function(id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  });\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n","\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nvar utils = require('../utils.js');\nvar logging = utils.log;\n\n/* iterates the stats graph recursively. */\nfunction walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(function(name) {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(function(id) {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nfunction filterStats(result, track, outbound) {\n  var streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  var filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  var trackStats = [];\n  result.forEach(function(value) {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(function(trackStat) {\n    result.forEach(function(stats) {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\nmodule.exports = {\n  shimGetUserMedia: require('./getusermedia'),\n  shimMediaStream: function(window) {\n    window.MediaStream = window.MediaStream || window.webkitMediaStream;\n  },\n\n  shimOnTrack: function(window) {\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n        window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n        get: function() {\n          return this._ontrack;\n        },\n        set: function(f) {\n          if (this._ontrack) {\n            this.removeEventListener('track', this._ontrack);\n          }\n          this.addEventListener('track', this._ontrack = f);\n        },\n        enumerable: true,\n        configurable: true\n      });\n      var origSetRemoteDescription =\n          window.RTCPeerConnection.prototype.setRemoteDescription;\n      window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n        var pc = this;\n        if (!pc._ontrackpoly) {\n          pc._ontrackpoly = function(e) {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', function(te) {\n              var receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = pc.getReceivers().find(function(r) {\n                  return r.track && r.track.id === te.track.id;\n                });\n              } else {\n                receiver = {track: te.track};\n              }\n\n              var event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver: receiver};\n              event.streams = [e.stream];\n              pc.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(function(track) {\n              var receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = pc.getReceivers().find(function(r) {\n                  return r.track && r.track.id === track.id;\n                });\n              } else {\n                receiver = {track: track};\n              }\n              var event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver: receiver};\n              event.streams = [e.stream];\n              pc.dispatchEvent(event);\n            });\n          };\n          pc.addEventListener('addstream', pc._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n    } else {\n      // even if RTCRtpTransceiver is in window, it is only used and\n      // emitted in unified-plan. Unfortunately this means we need\n      // to unconditionally wrap the event.\n      utils.wrapPeerConnectionEvent(window, 'track', function(e) {\n        if (!e.transceiver) {\n          Object.defineProperty(e, 'transceiver',\n            {value: {receiver: e.receiver}});\n        }\n        return e;\n      });\n    }\n  },\n\n  shimGetSendersWithDtmf: function(window) {\n    // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n    if (typeof window === 'object' && window.RTCPeerConnection &&\n        !('getSenders' in window.RTCPeerConnection.prototype) &&\n        'createDTMFSender' in window.RTCPeerConnection.prototype) {\n      var shimSenderWithDtmf = function(pc, track) {\n        return {\n          track: track,\n          get dtmf() {\n            if (this._dtmf === undefined) {\n              if (track.kind === 'audio') {\n                this._dtmf = pc.createDTMFSender(track);\n              } else {\n                this._dtmf = null;\n              }\n            }\n            return this._dtmf;\n          },\n          _pc: pc\n        };\n      };\n\n      // augment addTrack when getSenders is not available.\n      if (!window.RTCPeerConnection.prototype.getSenders) {\n        window.RTCPeerConnection.prototype.getSenders = function() {\n          this._senders = this._senders || [];\n          return this._senders.slice(); // return a copy of the internal state.\n        };\n        var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n        window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n          var pc = this;\n          var sender = origAddTrack.apply(pc, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(pc, track);\n            pc._senders.push(sender);\n          }\n          return sender;\n        };\n\n        var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n        window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n          var pc = this;\n          origRemoveTrack.apply(pc, arguments);\n          var idx = pc._senders.indexOf(sender);\n          if (idx !== -1) {\n            pc._senders.splice(idx, 1);\n          }\n        };\n      }\n      var origAddStream = window.RTCPeerConnection.prototype.addStream;\n      window.RTCPeerConnection.prototype.addStream = function(stream) {\n        var pc = this;\n        pc._senders = pc._senders || [];\n        origAddStream.apply(pc, [stream]);\n        stream.getTracks().forEach(function(track) {\n          pc._senders.push(shimSenderWithDtmf(pc, track));\n        });\n      };\n\n      var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n      window.RTCPeerConnection.prototype.removeStream = function(stream) {\n        var pc = this;\n        pc._senders = pc._senders || [];\n        origRemoveStream.apply(pc, [stream]);\n\n        stream.getTracks().forEach(function(track) {\n          var sender = pc._senders.find(function(s) {\n            return s.track === track;\n          });\n          if (sender) {\n            pc._senders.splice(pc._senders.indexOf(sender), 1); // remove sender\n          }\n        });\n      };\n    } else if (typeof window === 'object' && window.RTCPeerConnection &&\n               'getSenders' in window.RTCPeerConnection.prototype &&\n               'createDTMFSender' in window.RTCPeerConnection.prototype &&\n               window.RTCRtpSender &&\n               !('dtmf' in window.RTCRtpSender.prototype)) {\n      var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n      window.RTCPeerConnection.prototype.getSenders = function() {\n        var pc = this;\n        var senders = origGetSenders.apply(pc, []);\n        senders.forEach(function(sender) {\n          sender._pc = pc;\n        });\n        return senders;\n      };\n\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n        get: function() {\n          if (this._dtmf === undefined) {\n            if (this.track.kind === 'audio') {\n              this._dtmf = this._pc.createDTMFSender(this.track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        }\n      });\n    }\n  },\n\n  shimSenderReceiverGetStats: function(window) {\n    if (!(typeof window === 'object' && window.RTCPeerConnection &&\n        window.RTCRtpSender && window.RTCRtpReceiver)) {\n      return;\n    }\n\n    // shim sender stats.\n    if (!('getStats' in window.RTCRtpSender.prototype)) {\n      var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n      if (origGetSenders) {\n        window.RTCPeerConnection.prototype.getSenders = function() {\n          var pc = this;\n          var senders = origGetSenders.apply(pc, []);\n          senders.forEach(function(sender) {\n            sender._pc = pc;\n          });\n          return senders;\n        };\n      }\n\n      var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      if (origAddTrack) {\n        window.RTCPeerConnection.prototype.addTrack = function() {\n          var sender = origAddTrack.apply(this, arguments);\n          sender._pc = this;\n          return sender;\n        };\n      }\n      window.RTCRtpSender.prototype.getStats = function() {\n        var sender = this;\n        return this._pc.getStats().then(function(result) {\n          /* Note: this will include stats of all senders that\n           *   send a track with the same id as sender.track as\n           *   it is not possible to identify the RTCRtpSender.\n           */\n          return filterStats(result, sender.track, true);\n        });\n      };\n    }\n\n    // shim receiver stats.\n    if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n      var origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n      if (origGetReceivers) {\n        window.RTCPeerConnection.prototype.getReceivers = function() {\n          var pc = this;\n          var receivers = origGetReceivers.apply(pc, []);\n          receivers.forEach(function(receiver) {\n            receiver._pc = pc;\n          });\n          return receivers;\n        };\n      }\n      utils.wrapPeerConnectionEvent(window, 'track', function(e) {\n        e.receiver._pc = e.srcElement;\n        return e;\n      });\n      window.RTCRtpReceiver.prototype.getStats = function() {\n        var receiver = this;\n        return this._pc.getStats().then(function(result) {\n          return filterStats(result, receiver.track, false);\n        });\n      };\n    }\n\n    if (!('getStats' in window.RTCRtpSender.prototype &&\n        'getStats' in window.RTCRtpReceiver.prototype)) {\n      return;\n    }\n\n    // shim RTCPeerConnection.getStats(track).\n    var origGetStats = window.RTCPeerConnection.prototype.getStats;\n    window.RTCPeerConnection.prototype.getStats = function() {\n      var pc = this;\n      if (arguments.length > 0 &&\n          arguments[0] instanceof window.MediaStreamTrack) {\n        var track = arguments[0];\n        var sender;\n        var receiver;\n        var err;\n        pc.getSenders().forEach(function(s) {\n          if (s.track === track) {\n            if (sender) {\n              err = true;\n            } else {\n              sender = s;\n            }\n          }\n        });\n        pc.getReceivers().forEach(function(r) {\n          if (r.track === track) {\n            if (receiver) {\n              err = true;\n            } else {\n              receiver = r;\n            }\n          }\n          return r.track === track;\n        });\n        if (err || (sender && receiver)) {\n          return Promise.reject(new DOMException(\n            'There are more than one sender or receiver for the track.',\n            'InvalidAccessError'));\n        } else if (sender) {\n          return sender.getStats();\n        } else if (receiver) {\n          return receiver.getStats();\n        }\n        return Promise.reject(new DOMException(\n          'There is no sender or receiver for the track.',\n          'InvalidAccessError'));\n      }\n      return origGetStats.apply(pc, arguments);\n    };\n  },\n\n  shimSourceObject: function(window) {\n    var URL = window && window.URL;\n\n    if (typeof window === 'object') {\n      if (window.HTMLMediaElement &&\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n          get: function() {\n            return this._srcObject;\n          },\n          set: function(stream) {\n            var self = this;\n            // Use _srcObject as a private property for this shim\n            this._srcObject = stream;\n            if (this.src) {\n              URL.revokeObjectURL(this.src);\n            }\n\n            if (!stream) {\n              this.src = '';\n              return undefined;\n            }\n            this.src = URL.createObjectURL(stream);\n            // We need to recreate the blob url when a track is added or\n            // removed. Doing it manually since we want to avoid a recursion.\n            stream.addEventListener('addtrack', function() {\n              if (self.src) {\n                URL.revokeObjectURL(self.src);\n              }\n              self.src = URL.createObjectURL(stream);\n            });\n            stream.addEventListener('removetrack', function() {\n              if (self.src) {\n                URL.revokeObjectURL(self.src);\n              }\n              self.src = URL.createObjectURL(stream);\n            });\n          }\n        });\n      }\n    }\n  },\n\n  shimAddTrackRemoveTrackWithNative: function(window) {\n    // shim addTrack/removeTrack with native variants in order to make\n    // the interactions with legacy getLocalStreams behave as in other browsers.\n    // Keeps a mapping stream.id => [stream, rtpsenders...]\n    window.RTCPeerConnection.prototype.getLocalStreams = function() {\n      var pc = this;\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams).map(function(streamId) {\n        return pc._shimmedLocalStreams[streamId][0];\n      });\n    };\n\n    var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      var sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n    var origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\n      var pc = this;\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      stream.getTracks().forEach(function(track) {\n        var alreadyExists = pc.getSenders().find(function(s) {\n          return s.track === track;\n        });\n        if (alreadyExists) {\n          throw new DOMException('Track already exists.',\n              'InvalidAccessError');\n        }\n      });\n      var existingSenders = pc.getSenders();\n      origAddStream.apply(this, arguments);\n      var newSenders = pc.getSenders().filter(function(newSender) {\n        return existingSenders.indexOf(newSender) === -1;\n      });\n      this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n    };\n\n    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n    var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n    window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n      var pc = this;\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(function(streamId) {\n          var idx = pc._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            pc._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (pc._shimmedLocalStreams[streamId].length === 1) {\n            delete pc._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n  },\n\n  shimAddTrackRemoveTrack: function(window) {\n    if (!window.RTCPeerConnection) {\n      return;\n    }\n    var browserDetails = utils.detectBrowser(window);\n    // shim addTrack and removeTrack.\n    if (window.RTCPeerConnection.prototype.addTrack &&\n        browserDetails.version >= 65) {\n      return this.shimAddTrackRemoveTrackWithNative(window);\n    }\n\n    // also shim pc.getLocalStreams when addTrack is shimmed\n    // to return the original streams.\n    var origGetLocalStreams = window.RTCPeerConnection.prototype\n        .getLocalStreams;\n    window.RTCPeerConnection.prototype.getLocalStreams = function() {\n      var pc = this;\n      var nativeStreams = origGetLocalStreams.apply(this);\n      pc._reverseStreams = pc._reverseStreams || {};\n      return nativeStreams.map(function(stream) {\n        return pc._reverseStreams[stream.id];\n      });\n    };\n\n    var origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\n      var pc = this;\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n\n      stream.getTracks().forEach(function(track) {\n        var alreadyExists = pc.getSenders().find(function(s) {\n          return s.track === track;\n        });\n        if (alreadyExists) {\n          throw new DOMException('Track already exists.',\n              'InvalidAccessError');\n        }\n      });\n      // Add identity mapping for consistency with addTrack.\n      // Unless this is being used with a stream from addTrack.\n      if (!pc._reverseStreams[stream.id]) {\n        var newStream = new window.MediaStream(stream.getTracks());\n        pc._streams[stream.id] = newStream;\n        pc._reverseStreams[newStream.id] = stream;\n        stream = newStream;\n      }\n      origAddStream.apply(pc, [stream]);\n    };\n\n    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      var pc = this;\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n\n      origRemoveStream.apply(pc, [(pc._streams[stream.id] || stream)]);\n      delete pc._reverseStreams[(pc._streams[stream.id] ?\n          pc._streams[stream.id].id : stream.id)];\n      delete pc._streams[stream.id];\n    };\n\n    window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n      var pc = this;\n      if (pc.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      var streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(function(t) {\n            return t === track;\n          })) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      var alreadyExists = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n      var oldStream = pc._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(function() {\n          pc.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        var newStream = new window.MediaStream([track]);\n        pc._streams[stream.id] = newStream;\n        pc._reverseStreams[newStream.id] = stream;\n        pc.addStream(newStream);\n      }\n      return pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n    };\n\n    // replace the internal stream id with the external one and\n    // vice versa.\n    function replaceInternalStreamId(pc, description) {\n      var sdp = description.sdp;\n      Object.keys(pc._reverseStreams || []).forEach(function(internalId) {\n        var externalStream = pc._reverseStreams[internalId];\n        var internalStream = pc._streams[externalStream.id];\n        sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n            externalStream.id);\n      });\n      return new RTCSessionDescription({\n        type: description.type,\n        sdp: sdp\n      });\n    }\n    function replaceExternalStreamId(pc, description) {\n      var sdp = description.sdp;\n      Object.keys(pc._reverseStreams || []).forEach(function(internalId) {\n        var externalStream = pc._reverseStreams[internalId];\n        var internalStream = pc._streams[externalStream.id];\n        sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n            internalStream.id);\n      });\n      return new RTCSessionDescription({\n        type: description.type,\n        sdp: sdp\n      });\n    }\n    ['createOffer', 'createAnswer'].forEach(function(method) {\n      var nativeMethod = window.RTCPeerConnection.prototype[method];\n      window.RTCPeerConnection.prototype[method] = function() {\n        var pc = this;\n        var args = arguments;\n        var isLegacyCall = arguments.length &&\n            typeof arguments[0] === 'function';\n        if (isLegacyCall) {\n          return nativeMethod.apply(pc, [\n            function(description) {\n              var desc = replaceInternalStreamId(pc, description);\n              args[0].apply(null, [desc]);\n            },\n            function(err) {\n              if (args[1]) {\n                args[1].apply(null, err);\n              }\n            }, arguments[2]\n          ]);\n        }\n        return nativeMethod.apply(pc, arguments)\n        .then(function(description) {\n          return replaceInternalStreamId(pc, description);\n        });\n      };\n    });\n\n    var origSetLocalDescription =\n        window.RTCPeerConnection.prototype.setLocalDescription;\n    window.RTCPeerConnection.prototype.setLocalDescription = function() {\n      var pc = this;\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(pc, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(pc, arguments[0]);\n      return origSetLocalDescription.apply(pc, arguments);\n    };\n\n    // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n    var origLocalDescription = Object.getOwnPropertyDescriptor(\n        window.RTCPeerConnection.prototype, 'localDescription');\n    Object.defineProperty(window.RTCPeerConnection.prototype,\n        'localDescription', {\n          get: function() {\n            var pc = this;\n            var description = origLocalDescription.get.apply(this);\n            if (description.type === '') {\n              return description;\n            }\n            return replaceInternalStreamId(pc, description);\n          }\n        });\n\n    window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n      var pc = this;\n      if (pc.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      var isLocal = sender._pc === pc;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n            'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      pc._streams = pc._streams || {};\n      var stream;\n      Object.keys(pc._streams).forEach(function(streamid) {\n        var hasTrack = pc._streams[streamid].getTracks().find(function(track) {\n          return sender.track === track;\n        });\n        if (hasTrack) {\n          stream = pc._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          pc.removeStream(pc._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        pc.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n  },\n\n  shimPeerConnection: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    // The RTCPeerConnection object.\n    if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        // Translate iceTransportPolicy to iceTransports,\n        // see https://code.google.com/p/webrtc/issues/detail?id=4869\n        // this was fixed in M56 along with unprefixing RTCPeerConnection.\n        logging('PeerConnection');\n        if (pcConfig && pcConfig.iceTransportPolicy) {\n          pcConfig.iceTransports = pcConfig.iceTransportPolicy;\n        }\n\n        return new window.webkitRTCPeerConnection(pcConfig, pcConstraints);\n      };\n      window.RTCPeerConnection.prototype =\n          window.webkitRTCPeerConnection.prototype;\n      // wrap static methods. Currently just generateCertificate.\n      if (window.webkitRTCPeerConnection.generateCertificate) {\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n          get: function() {\n            return window.webkitRTCPeerConnection.generateCertificate;\n          }\n        });\n      }\n    }\n    if (!window.RTCPeerConnection) {\n      return;\n    }\n\n    var origGetStats = window.RTCPeerConnection.prototype.getStats;\n    window.RTCPeerConnection.prototype.getStats = function(selector,\n        successCallback, errorCallback) {\n      var pc = this;\n      var args = arguments;\n\n      // If selector is a function then we are in the old style stats so just\n      // pass back the original getStats format to avoid breaking old users.\n      if (arguments.length > 0 && typeof selector === 'function') {\n        return origGetStats.apply(this, arguments);\n      }\n\n      // When spec-style getStats is supported, return those when called with\n      // either no arguments or the selector argument is null.\n      if (origGetStats.length === 0 && (arguments.length === 0 ||\n          typeof arguments[0] !== 'function')) {\n        return origGetStats.apply(this, []);\n      }\n\n      var fixChromeStats_ = function(response) {\n        var standardReport = {};\n        var reports = response.result();\n        reports.forEach(function(report) {\n          var standardStats = {\n            id: report.id,\n            timestamp: report.timestamp,\n            type: {\n              localcandidate: 'local-candidate',\n              remotecandidate: 'remote-candidate'\n            }[report.type] || report.type\n          };\n          report.names().forEach(function(name) {\n            standardStats[name] = report.stat(name);\n          });\n          standardReport[standardStats.id] = standardStats;\n        });\n\n        return standardReport;\n      };\n\n      // shim getStats with maplike support\n      var makeMapStats = function(stats) {\n        return new Map(Object.keys(stats).map(function(key) {\n          return [key, stats[key]];\n        }));\n      };\n\n      if (arguments.length >= 2) {\n        var successCallbackWrapper_ = function(response) {\n          args[1](makeMapStats(fixChromeStats_(response)));\n        };\n\n        return origGetStats.apply(this, [successCallbackWrapper_,\n          arguments[0]]);\n      }\n\n      // promise-support\n      return new Promise(function(resolve, reject) {\n        origGetStats.apply(pc, [\n          function(response) {\n            resolve(makeMapStats(fixChromeStats_(response)));\n          }, reject]);\n      }).then(successCallback, errorCallback);\n    };\n\n    // add promise support -- natively available in Chrome 51\n    if (browserDetails.version < 51) {\n      ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n          .forEach(function(method) {\n            var nativeMethod = window.RTCPeerConnection.prototype[method];\n            window.RTCPeerConnection.prototype[method] = function() {\n              var args = arguments;\n              var pc = this;\n              var promise = new Promise(function(resolve, reject) {\n                nativeMethod.apply(pc, [args[0], resolve, reject]);\n              });\n              if (args.length < 2) {\n                return promise;\n              }\n              return promise.then(function() {\n                args[1].apply(null, []);\n              },\n              function(err) {\n                if (args.length >= 3) {\n                  args[2].apply(null, [err]);\n                }\n              });\n            };\n          });\n    }\n\n    // promise support for createOffer and createAnswer. Available (without\n    // bugs) since M52: crbug/619289\n    if (browserDetails.version < 52) {\n      ['createOffer', 'createAnswer'].forEach(function(method) {\n        var nativeMethod = window.RTCPeerConnection.prototype[method];\n        window.RTCPeerConnection.prototype[method] = function() {\n          var pc = this;\n          if (arguments.length < 1 || (arguments.length === 1 &&\n              typeof arguments[0] === 'object')) {\n            var opts = arguments.length === 1 ? arguments[0] : undefined;\n            return new Promise(function(resolve, reject) {\n              nativeMethod.apply(pc, [resolve, reject, opts]);\n            });\n          }\n          return nativeMethod.apply(this, arguments);\n        };\n      });\n    }\n\n    // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          var nativeMethod = window.RTCPeerConnection.prototype[method];\n          window.RTCPeerConnection.prototype[method] = function() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          };\n        });\n\n    // support for addIceCandidate(null or undefined)\n    var nativeAddIceCandidate =\n        window.RTCPeerConnection.prototype.addIceCandidate;\n    window.RTCPeerConnection.prototype.addIceCandidate = function() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n  },\n\n  fixNegotiationNeeded: function(window) {\n    utils.wrapPeerConnectionEvent(window, 'negotiationneeded', function(e) {\n      var pc = e.target;\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n      return e;\n    });\n  },\n\n  shimGetDisplayMedia: function(window, getSourceId) {\n    if (!window.navigator || !window.navigator.mediaDevices ||\n        'getDisplayMedia' in window.navigator.mediaDevices) {\n      return;\n    }\n    // getSourceId is a function that returns a promise resolving with\n    // the sourceId of the screen/window/tab to be shared.\n    if (typeof getSourceId !== 'function') {\n      console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n          'a function');\n      return;\n    }\n    window.navigator.mediaDevices.getDisplayMedia = function(constraints) {\n      return getSourceId(constraints)\n        .then(function(sourceId) {\n          var widthSpecified = constraints.video && constraints.video.width;\n          var heightSpecified = constraints.video && constraints.video.height;\n          var frameRateSpecified = constraints.video &&\n            constraints.video.frameRate;\n          constraints.video = {\n            mandatory: {\n              chromeMediaSource: 'desktop',\n              chromeMediaSourceId: sourceId,\n              maxFrameRate: frameRateSpecified || 3\n            }\n          };\n          if (widthSpecified) {\n            constraints.video.mandatory.maxWidth = widthSpecified;\n          }\n          if (heightSpecified) {\n            constraints.video.mandatory.maxHeight = heightSpecified;\n          }\n          return window.navigator.mediaDevices.getUserMedia(constraints);\n        });\n    };\n    window.navigator.getDisplayMedia = function(constraints) {\n      utils.deprecated('navigator.getDisplayMedia',\n          'navigator.mediaDevices.getDisplayMedia');\n      return window.navigator.mediaDevices.getDisplayMedia(constraints);\n    };\n  }\n};\n"],"sourceRoot":""}